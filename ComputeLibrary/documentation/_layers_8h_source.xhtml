<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/frontend/Layers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layers_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Layers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layers_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_GRAPH_LAYERS_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_GRAPH_LAYERS_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_builder_8h.xhtml">arm_compute/graph/GraphBuilder.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_layer_8h.xhtml">arm_compute/graph/frontend/ILayer.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_stream_8h.xhtml">arm_compute/graph/frontend/IStream.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sub_stream_8h.xhtml">arm_compute/graph/frontend/SubStream.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_utility_8h.xhtml">arm_compute/core/utils/misc/Utility.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>frontend</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">   45</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a8c543d7a0c50bd07dfba4bbc6ba1ee53">   53</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a8c543d7a0c50bd07dfba4bbc6ba1ee53">InputLayer</a>(TensorDescriptor desc, <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : _desc(desc), _accessor(std::move(accessor))</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">   58</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4bed63b35b24f8f44260237558e8a02b">GraphBuilder::add_input_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, _desc, std::move(_accessor));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    TensorDescriptor    _desc;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _accessor;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;};</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">   70</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">OutputLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a4c8546f74af36a2c5575bf4141269645">   77</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a4c8546f74af36a2c5575bf4141269645">OutputLayer</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        : _accessor(std::move(accessor))</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">   82</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab87ec51542d159d5efae373c82b7944c">GraphBuilder::add_output_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, std::move(_accessor));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _accessor;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">   94</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#ae538c5265a9f26cac7d41eeca26a60a0">  101</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#ae538c5265a9f26cac7d41eeca26a60a0">ActivationLayer</a>(ActivationLayerInfo act_info)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        : _act_info(act_info)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  106</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a890a11b240837645352791b2e89632b1">GraphBuilder::add_activation_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _act_info);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    ActivationLayerInfo _act_info;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;};</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">  118</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a5a6d29d97205186313cf48823a2dce8a">  129</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a5a6d29d97205186313cf48823a2dce8a">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mean,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> var,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> gamma   = <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                            <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>    = <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                            <span class="keywordtype">float</span>               epsilon = 0.001f)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        : _mean(std::move(mean)), _var(std::move(var)), _gamma(std::move(gamma)), _beta(std::move(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>)), _epsilon(epsilon)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  138</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mean == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_var == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acc31c037c3eac4234abae6ec0e080d2f">GraphBuilder::add_batch_normalization_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _epsilon,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                          std::move(_mean), std::move(_var), std::move(_beta), std::move(_gamma));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _mean;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _var;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _gamma;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _beta;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">float</span>               _epsilon;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;};</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">  158</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#af896fc13b0eaaafe855f0fbcd65a07de">  173</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#af896fc13b0eaaafe855f0fbcd65a07de">ConvolutionLayer</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           conv_width,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           conv_height,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           ofm,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    weights,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                     <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    bias,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                     PadStrideInfo          <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">conv_info</a>,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           num_groups         = 1,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                     <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> weights_quant_info = <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(),</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                     <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> out_quant_info     = <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>())</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        : _conv_width(conv_width),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          _conv_height(conv_height),</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          _ofm(ofm),</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          _conv_info(std::move(conv_info)),</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          _num_groups(num_groups),</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;          _weights(std::move(weights)),</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;          _bias(std::move(bias)),</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;          _weights_quant_info(std::move(weights_quant_info)),</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          _out_quant_info(std::move(out_quant_info))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  194</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a2c8bc1735814df209ef5ad3323cd5863">GraphBuilder::add_convolution_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                  <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(_conv_width, _conv_height), _ofm, _conv_info, _num_groups,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                  s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#af18f64d6fa79da2fd4fd585bf818b3d2">convolution_method_hint</a>, s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#abdcfd0552ddabcb92a04396961fb6377">fast_math_hint</a>,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                                  std::move(_weights), std::move(_bias), std::move(_weights_quant_info), std::move(_out_quant_info));</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _conv_width;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _conv_height;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _ofm;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> PadStrideInfo    _conv_info;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _num_groups;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    _weights;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    _bias;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> _weights_quant_info;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> _out_quant_info;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;};</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">  217</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">DepthwiseConvolutionLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a36e83ad4becd0b24268a048413726f49">  229</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a36e83ad4becd0b24268a048413726f49">DepthwiseConvolutionLayer</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           conv_width,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           conv_height,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                              <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    weights,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                              <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    bias,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                              PadStrideInfo          conv_info,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quant_info = <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>())</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        : _conv_width(conv_width),</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;          _conv_height(conv_height),</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;          _conv_info(std::move(conv_info)),</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          _weights(std::move(weights)),</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;          _bias(std::move(bias)),</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;          _quant_info(std::move(quant_info))</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  244</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a8e4e65674676098214cd6ee38d740bb1">GraphBuilder::add_depthwise_convolution_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                                            input, <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(_conv_width, _conv_height), _conv_info,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                                            s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a67ede056be3dfba6dfbb934a1b96661e">depthwise_convolution_method_hint</a>,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                                            std::move(_weights), std::move(_bias), std::move(_quant_info));</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _conv_width;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _conv_height;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">const</span> PadStrideInfo    _conv_info;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    _weights;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>    _bias;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> _quant_info;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;};</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml">  264</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml">FlattenLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a9122dc9cbefd8f81b092eadeae658202">  268</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a9122dc9cbefd8f81b092eadeae658202">FlattenLayer</a>()</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  272</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a822583f5b38ff029ea1e1c221dbfe19f">GraphBuilder::add_flatten_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;};</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">  281</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#ae0a28c6a7a3c5ea2f5087f7eb05eb4a2">  290</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#ae0a28c6a7a3c5ea2f5087f7eb05eb4a2">FullyConnectedLayer</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        num_outputs,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        : _num_outputs(num_outputs), _weights(std::move(weights)), _bias(std::move(bias))</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    {</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  297</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ad1dbeadf5e85d923fa0751b19c0a4170">GraphBuilder::add_fully_connected_layer</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _num_outputs,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                                                       std::move(_weights), std::move(_bias));</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        _num_outputs;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _weights;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _bias;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;};</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">  312</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#ada275ffd82f624b62bdbc2f01349fe33">  319</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#ada275ffd82f624b62bdbc2f01349fe33">NormalizationLayer</a>(NormalizationLayerInfo norm_info)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        : _norm_info(norm_info)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    }</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  324</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a15885529ec64ecf2b388f6229c5a65fa">GraphBuilder::add_normalization_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _norm_info);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    }</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    NormalizationLayerInfo _norm_info;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;};</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">  336</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;{</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00343"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a9ad7e9ede84392dee892357377aa1806">  343</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a9ad7e9ede84392dee892357377aa1806">PoolingLayer</a>(PoolingLayerInfo pool_info)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        : _pool_info(pool_info)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    }</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  348</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af8eae85804c35bc91d26fe28efc3936a">GraphBuilder::add_pooling_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _pool_info);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    PoolingLayerInfo _pool_info;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;};</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">  360</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">ReshapeLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;{</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#aa3c4c9fd2bc62c95238f22172e8c10f1">  367</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#aa3c4c9fd2bc62c95238f22172e8c10f1">ReshapeLayer</a>(TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        : _shape(shape)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  372</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a30a1530d919a233e389f32ad9a6e2b25">GraphBuilder::add_reshape_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _shape);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    TensorShape _shape;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;};</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml">  384</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml">ScaleLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;{</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#abd50a915acafa4ed21f755d911f9b155">  392</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#abd50a915acafa4ed21f755d911f9b155">ScaleLayer</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mul_w,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;               <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> add_w)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        : _mul_w(std::move(mul_w)), _add_w(std::move(add_w))</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  398</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9065925e20c5b5aa449d3ef9dc371085">GraphBuilder::add_scale_layer</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, std::move(_mul_w), std::move(_add_w));</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _mul_w;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> _add_w;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;};</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">  411</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">SoftmaxLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;{</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#ae12d901b385c3facc7b19ac809ad6b20">  418</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#ae12d901b385c3facc7b19ac809ad6b20">SoftmaxLayer</a>(<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a> = 1.0f)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        : _beta(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  423</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>  common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input         = { s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a>(), 0 };</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acb202d26a81ff465a95e5f869d6ee141">GraphBuilder::add_softmax_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input, _beta);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    }</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordtype">float</span> _beta;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;};</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">  435</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">BranchLayer</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;{</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#ac800c8cfff2622dd1084922d2420cf8e">  446</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#ac800c8cfff2622dd1084922d2420cf8e">BranchLayer</a>(<a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">BranchMergeMethod</a> merge_method, <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream1, <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream2, Ts &amp;&amp;... rest_sub_streams)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        : _branch_merge_method(merge_method), _sub_streams()</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream1)));</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream2)));</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <a class="code" href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">utility::for_each</a>([&amp;](<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp; sub_stream)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream)));</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        },</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        std::move(rest_sub_streams)...);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#aa412c659eb4b4fecfa3203331286d5d3">  463</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#aa412c659eb4b4fecfa3203331286d5d3">BranchLayer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        : _branch_merge_method(<a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">BranchMergeMethod</a>::<a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">DEPTH_CONCATENATE</a>), _sub_streams()</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream)));</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    }</div><div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">  468</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s)<span class="keyword"> override</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>     nid           = <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a>().<a class="code" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">target_hint</a> };</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordflow">if</span>(_sub_streams.size() == 1 &amp;&amp; _sub_streams.at(0) != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            nid = _sub_streams[0]-&gt;tail_node();</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        }</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(_branch_merge_method == <a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">BranchMergeMethod::DEPTH_CONCATENATE</a>)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="comment">// Collect tail nodes and perform DepthConcatenate</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            std::vector&lt;NodeIdxPair&gt; nodes;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;ss : _sub_streams)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">if</span>(ss &amp;&amp; (ss-&gt;tail_node() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>))</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> tail_node = s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>().<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a62b93384d460474d7e07b8b298f22761">node</a>(ss-&gt;tail_node());</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                    <span class="keywordflow">if</span>(tail_node != <span class="keyword">nullptr</span> &amp;&amp; tail_node-&gt;type() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">NodeType::Output</a>)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                    {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                        nodes.push_back({ ss-&gt;tail_node(), 0 });</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                    }</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                }</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            nid = <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4e79becb4675e8e78f5ffb30a89460ca">GraphBuilder::add_depth_concatenate_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, nodes);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        }</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        {</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_sub_streams.size() != 2);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input0 = { _sub_streams[0]-&gt;tail_node(), 0 };</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <a class="code" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input1 = { _sub_streams[1]-&gt;tail_node(), 0 };</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            nid                = <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">GraphBuilder::add_elementwise_node</a>(s.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a>(), common_params, input0, input1, <a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea9eeb52badb613229884838847294b90d">EltwiseOperation::ADD</a>);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">return</span> nid;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    }</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">BranchMergeMethod</a>                       _branch_merge_method;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    std::vector&lt;std::unique_ptr&lt;SubStream&gt;&gt; _sub_streams;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;};</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;} <span class="comment">// namespace frontend</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_GRAPH_LAYERS_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1graph_1_1_node_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_params.xhtml">arm_compute::graph::NodeParams</a></div><div class="ttdoc">Common node parameters. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00165">Types.h:165</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">arm_compute::graph::frontend::BranchLayer</a></div><div class="ttdoc">Branch Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00435">Layers.h:435</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">arm_compute::graph::frontend::PoolingLayer</a></div><div class="ttdoc">Pooling Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00336">Layers.h:336</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml_a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">arm_compute::graph::frontend::BranchMergeMethod::DEPTH_CONCATENATE</a></div><div class="ttdoc">Concatenate across depth. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00133">Convolution.cpp:133</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">arm_compute::graph::frontend::SubStream</a></div><div class="ttdoc">Sub stream class. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_stream_8h_source.xhtml#l00047">SubStream.h:47</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints_xhtml_a67ede056be3dfba6dfbb934a1b96661e"><div class="ttname"><a href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a67ede056be3dfba6dfbb934a1b96661e">arm_compute::graph::frontend::StreamHints::depthwise_convolution_method_hint</a></div><div class="ttdeci">DepthwiseConvolutionMethod depthwise_convolution_method_hint</div><div class="ttdoc">Depthwise Convolution method hint. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00066">Types.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer_xhtml_a9122dc9cbefd8f81b092eadeae658202"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a9122dc9cbefd8f81b092eadeae658202">arm_compute::graph::frontend::FlattenLayer::FlattenLayer</a></div><div class="ttdeci">FlattenLayer()</div><div class="ttdoc">Construct a flatten layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00268">Layers.h:268</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab146b9cbab6e73e7588b240dc709fe01"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">arm_compute::test::validation::beta</a></div><div class="ttdeci">beta</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">arm_compute::graph::frontend::NormalizationLayer</a></div><div class="ttdoc">Normalization Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00312">Layers.h:312</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints_xhtml_a81d9ddb43e3c89a5bf3334d475f9d74b"><div class="ttname"><a href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a81d9ddb43e3c89a5bf3334d475f9d74b">arm_compute::graph::frontend::StreamHints::target_hint</a></div><div class="ttdeci">Target target_hint</div><div class="ttdoc">Target execution hint. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00064">Types.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml_a62b93384d460474d7e07b8b298f22761"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a62b93384d460474d7e07b8b298f22761">arm_compute::graph::Graph::node</a></div><div class="ttdeci">const INode * node(NodeID id) const </div><div class="ttdoc">Get node object given its id. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::FullyConnectedLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00297">Layers.h:297</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">arm_compute::graph::frontend::ReshapeLayer</a></div><div class="ttdoc">Reshape Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00360">Layers.h:360</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::ConvolutionLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00194">Layers.h:194</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml_a8c543d7a0c50bd07dfba4bbc6ba1ee53"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a8c543d7a0c50bd07dfba4bbc6ba1ee53">arm_compute::graph::frontend::InputLayer::InputLayer</a></div><div class="ttdeci">InputLayer(TensorDescriptor desc, ITensorAccessorUPtr accessor)</div><div class="ttdoc">Construct an input layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00053">Layers.h:53</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a822583f5b38ff029ea1e1c221dbfe19f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a822583f5b38ff029ea1e1c221dbfe19f">arm_compute::graph::GraphBuilder::add_flatten_node</a></div><div class="ttdeci">static NodeID add_flatten_node(Graph &amp;g, NodeParams params, NodeIdxPair input)</div><div class="ttdoc">Adds a flatten layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">arm_compute::graph::frontend::DepthwiseConvolutionLayer</a></div><div class="ttdoc">Depthwise Convolution Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00217">Layers.h:217</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml_a4c8546f74af36a2c5575bf4141269645"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a4c8546f74af36a2c5575bf4141269645">arm_compute::graph::frontend::OutputLayer::OutputLayer</a></div><div class="ttdeci">OutputLayer(ITensorAccessorUPtr accessor)</div><div class="ttdoc">Construct an output layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00077">Layers.h:77</a></div></div>
<div class="ttc" id="arm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer_xhtml_aa3c4c9fd2bc62c95238f22172e8c10f1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#aa3c4c9fd2bc62c95238f22172e8c10f1">arm_compute::graph::frontend::ReshapeLayer::ReshapeLayer</a></div><div class="ttdeci">ReshapeLayer(TensorShape shape)</div><div class="ttdoc">Construct a reshape layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00367">Layers.h:367</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">arm_compute::graph::frontend::ILayer</a></div><div class="ttdoc">ILayer interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00037">ILayer.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_acb202d26a81ff465a95e5f869d6ee141"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acb202d26a81ff465a95e5f869d6ee141">arm_compute::graph::GraphBuilder::add_softmax_node</a></div><div class="ttdeci">static NodeID add_softmax_node(Graph &amp;g, NodeParams params, NodeIdxPair input, float beta=1.f)</div><div class="ttdoc">Adds a softmax node to the graph. </div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a41c3f59161734b8492782359f583b676"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">arm_compute::graph::ITensorAccessorUPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorAccessor &gt; ITensorAccessorUPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_accessor_8h_source.xhtml#l00050">ITensorAccessor.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a9065925e20c5b5aa449d3ef9dc371085"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9065925e20c5b5aa449d3ef9dc371085">arm_compute::graph::GraphBuilder::add_scale_layer</a></div><div class="ttdeci">static NodeID add_scale_layer(Graph &amp;g, const NodeParams &amp;params, NodeIdxPair input, ITensorAccessorUPtr mul_accessor=nullptr, ITensorAccessorUPtr add_accessor=nullptr)</div><div class="ttdoc">Adds a scale layer node to the graph This layer computes a product of the input with a scale (read fr...</div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml_ae12d901b385c3facc7b19ac809ad6b20"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#ae12d901b385c3facc7b19ac809ad6b20">arm_compute::graph::frontend::SoftmaxLayer::SoftmaxLayer</a></div><div class="ttdeci">SoftmaxLayer(float beta=1.0f)</div><div class="ttdoc">Construct a softmax layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00418">Layers.h:418</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::BatchNormalizationLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00138">Layers.h:138</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">arm_compute::graph::frontend::IStream</a></div><div class="ttdoc">Stream interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_stream_8h_source.xhtml#l00042">IStream.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::ScaleLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00398">Layers.h:398</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml_ae0a28c6a7a3c5ea2f5087f7eb05eb4a2"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml#ae0a28c6a7a3c5ea2f5087f7eb05eb4a2">arm_compute::graph::frontend::FullyConnectedLayer::FullyConnectedLayer</a></div><div class="ttdeci">FullyConnectedLayer(unsigned int num_outputs, ITensorAccessorUPtr weights, ITensorAccessorUPtr bias)</div><div class="ttdoc">Construct a fully connected layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00290">Layers.h:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::PoolingLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00348">Layers.h:348</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml_a324e8c54c4c5161913681a1a52fef959"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">arm_compute::graph::frontend::ILayer::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdoc">Layer name accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00064">ILayer.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::SoftmaxLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00423">Layers.h:423</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::FlattenLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00272">Layers.h:272</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::NormalizationLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00324">Layers.h:324</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a4e79becb4675e8e78f5ffb30a89460ca"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4e79becb4675e8e78f5ffb30a89460ca">arm_compute::graph::GraphBuilder::add_depth_concatenate_node</a></div><div class="ttdeci">static NodeID add_depth_concatenate_node(Graph &amp;g, NodeParams params, std::vector&lt; NodeIdxPair &gt; inputs)</div><div class="ttdoc">Adds a depth concatenate node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">arm_compute::graph::frontend::InputLayer</a></div><div class="ttdoc">Input Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00045">Layers.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml_ae538c5265a9f26cac7d41eeca26a60a0"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#ae538c5265a9f26cac7d41eeca26a60a0">arm_compute::graph::frontend::ActivationLayer::ActivationLayer</a></div><div class="ttdeci">ActivationLayer(ActivationLayerInfo act_info)</div><div class="ttdoc">Construct an activation layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00101">Layers.h:101</a></div></div>
<div class="ttc" id="_sub_stream_8h_xhtml"><div class="ttname"><a href="_sub_stream_8h.xhtml">SubStream.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_stream_xhtml_a110fbabe5b6b600f0f5b1fec06ab1484"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">arm_compute::graph::frontend::IStream::tail_node</a></div><div class="ttdeci">NodeID tail_node()</div><div class="ttdoc">Returns the tail node of the Stream. </div><div class="ttdef"><b>Definition:</b> <a href="_i_stream_8h_source.xhtml#l00065">IStream.h:65</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer_xhtml_abd50a915acafa4ed21f755d911f9b155"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml#abd50a915acafa4ed21f755d911f9b155">arm_compute::graph::frontend::ScaleLayer::ScaleLayer</a></div><div class="ttdeci">ScaleLayer(ITensorAccessorUPtr mul_w, ITensorAccessorUPtr add_w)</div><div class="ttdoc">Construct a scale layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00392">Layers.h:392</a></div></div>
<div class="ttc" id="_i_stream_8h_xhtml"><div class="ttname"><a href="_i_stream_8h.xhtml">IStream.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a890a11b240837645352791b2e89632b1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a890a11b240837645352791b2e89632b1">arm_compute::graph::GraphBuilder::add_activation_node</a></div><div class="ttdeci">static NodeID add_activation_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ActivationLayerInfo act_info)</div><div class="ttdoc">Adds an activation layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer_xhtml_a36e83ad4becd0b24268a048413726f49"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a36e83ad4becd0b24268a048413726f49">arm_compute::graph::frontend::DepthwiseConvolutionLayer::DepthwiseConvolutionLayer</a></div><div class="ttdeci">DepthwiseConvolutionLayer(unsigned int conv_width, unsigned int conv_height, ITensorAccessorUPtr weights, ITensorAccessorUPtr bias, PadStrideInfo conv_info, const QuantizationInfo quant_info=QuantizationInfo())</div><div class="ttdoc">Construct a depthwise convolution layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00229">Layers.h:229</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a8e4e65674676098214cd6ee38d740bb1"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a8e4e65674676098214cd6ee38d740bb1">arm_compute::graph::GraphBuilder::add_depthwise_convolution_node</a></div><div class="ttdeci">static NodeID add_depthwise_convolution_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Size2D kernel_spatial_extend, PadStrideInfo conv_info, DepthwiseConvolutionMethod method=DepthwiseConvolutionMethod::DEFAULT, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr, const QuantizationInfo quant_info=QuantizationInfo())</div><div class="ttdoc">Adds a depth-wise convolution layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_scale_layer.xhtml">arm_compute::graph::frontend::ScaleLayer</a></div><div class="ttdoc">Scale Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00384">Layers.h:384</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::InputLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00058">Layers.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">arm_compute::graph::frontend::ActivationLayer</a></div><div class="ttdoc">Activation Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00094">Layers.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a7d0d78c3fe7a6530cf184a8f99172214"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">arm_compute::graph::GraphBuilder::add_elementwise_node</a></div><div class="ttdeci">static NodeID add_elementwise_node(Graph &amp;g, NodeParams params, NodeIdxPair input0, NodeIdxPair input1, EltwiseOperation operation)</div><div class="ttdoc">Adds an element-wise layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer_xhtml_a5a6d29d97205186313cf48823a2dce8a"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml#a5a6d29d97205186313cf48823a2dce8a">arm_compute::graph::frontend::BatchNormalizationLayer::BatchNormalizationLayer</a></div><div class="ttdeci">BatchNormalizationLayer(ITensorAccessorUPtr mean, ITensorAccessorUPtr var, ITensorAccessorUPtr gamma=nullptr, ITensorAccessorUPtr beta=nullptr, float epsilon=0.001f)</div><div class="ttdoc">Construct a batch normalization layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00129">Layers.h:129</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acbf8f8a6dd185de04c1981c57a8963cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00360">Winograd.cpp:360</a></div></div>
<div class="ttc" id="_graph_builder_8h_xhtml"><div class="ttname"><a href="_graph_builder_8h.xhtml">GraphBuilder.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">arm_compute::graph::frontend::ConvolutionLayer</a></div><div class="ttdoc">Convolution Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00158">Layers.h:158</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_ad1dbeadf5e85d923fa0751b19c0a4170"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ad1dbeadf5e85d923fa0751b19c0a4170">arm_compute::graph::GraphBuilder::add_fully_connected_layer</a></div><div class="ttdeci">static NodeID add_fully_connected_layer(Graph &amp;g, NodeParams params, NodeIdxPair input, unsigned int num_outputs, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr)</div><div class="ttdoc">Adds a fully connected layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a2c8bc1735814df209ef5ad3323cd5863"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a2c8bc1735814df209ef5ad3323cd5863">arm_compute::graph::GraphBuilder::add_convolution_node</a></div><div class="ttdeci">static NodeID add_convolution_node(Graph &amp;g, NodeParams params, NodeIdxPair input, Size2D kernel_spatial_extend, unsigned int depth, PadStrideInfo conv_info, unsigned int num_groups=1, ConvolutionMethod method=ConvolutionMethod::DEFAULT, FastMathHint fast_math_hint=FastMathHint::DISABLED, ITensorAccessorUPtr weights_accessor=nullptr, ITensorAccessorUPtr bias_accessor=nullptr, const QuantizationInfo weights_quant_info=QuantizationInfo(), const QuantizationInfo out_quant_info=QuantizationInfo())</div><div class="ttdoc">Adds a convolution layer node to the graph. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a067ebd28103d827b6ec17032e2344064"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">arm_compute::utility::for_each</a></div><div class="ttdeci">void for_each(F &amp;&amp;)</div><div class="ttdoc">Base case of for_each. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00091">Utility.h:91</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_node_idx_pair_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">arm_compute::graph::NodeIdxPair</a></div><div class="ttdoc">NodeID-index struct. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00158">Types.h:158</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_acc31c037c3eac4234abae6ec0e080d2f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acc31c037c3eac4234abae6ec0e080d2f">arm_compute::graph::GraphBuilder::add_batch_normalization_node</a></div><div class="ttdeci">static NodeID add_batch_normalization_node(Graph &amp;g, NodeParams params, NodeIdxPair input, float epsilon, ITensorAccessorUPtr mean_accessor=nullptr, ITensorAccessorUPtr var_accessor=nullptr, ITensorAccessorUPtr beta_accessor=nullptr, ITensorAccessorUPtr gamma_accessor=nullptr)</div><div class="ttdoc">Adds a batch normalization layer node to the graph. </div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints_xhtml_abdcfd0552ddabcb92a04396961fb6377"><div class="ttname"><a href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#abdcfd0552ddabcb92a04396961fb6377">arm_compute::graph::frontend::StreamHints::fast_math_hint</a></div><div class="ttdeci">FastMathHint fast_math_hint</div><div class="ttdoc">Fast math hint. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00067">Types.h:67</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::BranchLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00468">Layers.h:468</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml_a001290b9a1953d3fb723b261667ff38e"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">arm_compute::graph::frontend::BranchMergeMethod</a></div><div class="ttdeci">BranchMergeMethod</div><div class="ttdoc">Branch layer merging method. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00057">Types.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a15885529ec64ecf2b388f6229c5a65fa"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a15885529ec64ecf2b388f6229c5a65fa">arm_compute::graph::GraphBuilder::add_normalization_node</a></div><div class="ttdeci">static NodeID add_normalization_node(Graph &amp;g, NodeParams params, NodeIdxPair input, NormalizationLayerInfo norm_info)</div><div class="ttdoc">Adds a normalization layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_stream_xhtml_a2f9edb3a23ff98069aaa52590d53bf5f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">arm_compute::graph::frontend::IStream::graph</a></div><div class="ttdeci">virtual Graph &amp; graph()=0</div><div class="ttdoc">Returns the underlying graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a30a1530d919a233e389f32ad9a6e2b25"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a30a1530d919a233e389f32ad9a6e2b25">arm_compute::graph::GraphBuilder::add_reshape_node</a></div><div class="ttdeci">static NodeID add_reshape_node(Graph &amp;g, NodeParams params, NodeIdxPair input, TensorShape shape)</div><div class="ttdoc">Adds a reshape layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">arm_compute::graph::frontend::SoftmaxLayer</a></div><div class="ttdoc">Softmax Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00411">Layers.h:411</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_stream_xhtml_a75ce23fbe59cc58db22e1b6d072b10c6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">arm_compute::graph::frontend::IStream::hints</a></div><div class="ttdeci">StreamHints &amp; hints()</div><div class="ttdoc">Returns the stream hints that are currently used. </div><div class="ttdef"><b>Definition:</b> <a href="_i_stream_8h_source.xhtml#l00073">IStream.h:73</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00067">Types.h:67</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="_i_layer_8h_xhtml"><div class="ttname"><a href="_i_layer_8h.xhtml">ILayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">arm_compute::graph::frontend::OutputLayer</a></div><div class="ttdoc">Output Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00070">Layers.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::ActivationLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00106">Layers.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">arm_compute::graph::frontend::FullyConnectedLayer</a></div><div class="ttdoc">Fully Connected Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00281">Layers.h:281</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::DepthwiseConvolutionLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00244">Layers.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_af8eae85804c35bc91d26fe28efc3936a"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af8eae85804c35bc91d26fe28efc3936a">arm_compute::graph::GraphBuilder::add_pooling_node</a></div><div class="ttdeci">static NodeID add_pooling_node(Graph &amp;g, NodeParams params, NodeIdxPair input, PoolingLayerInfo pool_info)</div><div class="ttdoc">Adds a pooling layer node to the graph. </div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization settings (used for QASYMM8 data type) </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00127">Types.h:127</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">arm_compute::graph::frontend::BatchNormalizationLayer</a></div><div class="ttdoc">Batchnormalization Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00118">Layers.h:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_ab87ec51542d159d5efae373c82b7944c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab87ec51542d159d5efae373c82b7944c">arm_compute::graph::GraphBuilder::add_output_node</a></div><div class="ttdeci">static NodeID add_output_node(Graph &amp;g, NodeParams params, NodeIdxPair input, ITensorAccessorUPtr accessor=nullptr)</div><div class="ttdoc">Adds an output layer node to the graph. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml_a001290b9a1953d3fb723b261667ff38ea9eeb52badb613229884838847294b90d"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea9eeb52badb613229884838847294b90d">arm_compute::graph::frontend::BranchMergeMethod::ADD</a></div><div class="ttdoc">Adds the results of each stream. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer_xhtml_aa412c659eb4b4fecfa3203331286d5d3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#aa412c659eb4b4fecfa3203331286d5d3">arm_compute::graph::frontend::BranchLayer::BranchLayer</a></div><div class="ttdeci">BranchLayer(SubStream &amp;&amp;sub_stream)</div><div class="ttdoc">Construct a branch layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00463">Layers.h:463</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml_a9ad7e9ede84392dee892357377aa1806"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml#a9ad7e9ede84392dee892357377aa1806">arm_compute::graph::frontend::PoolingLayer::PoolingLayer</a></div><div class="ttdeci">PoolingLayer(PoolingLayerInfo pool_info)</div><div class="ttdoc">Construct a pooling layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00343">Layers.h:343</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::ReshapeLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00372">Layers.h:372</a></div></div>
<div class="ttc" id="_utility_8h_xhtml"><div class="ttname"><a href="_utility_8h.xhtml">Utility.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_flatten_layer.xhtml">arm_compute::graph::frontend::FlattenLayer</a></div><div class="ttdoc">Flatten Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00264">Layers.h:264</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer_xhtml_ac800c8cfff2622dd1084922d2420cf8e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#ac800c8cfff2622dd1084922d2420cf8e">arm_compute::graph::frontend::BranchLayer::BranchLayer</a></div><div class="ttdeci">BranchLayer(BranchMergeMethod merge_method, SubStream &amp;&amp;sub_stream1, SubStream &amp;&amp;sub_stream2, Ts &amp;&amp;...rest_sub_streams)</div><div class="ttdoc">Construct a branch layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00446">Layers.h:446</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml_af896fc13b0eaaafe855f0fbcd65a07de"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml#af896fc13b0eaaafe855f0fbcd65a07de">arm_compute::graph::frontend::ConvolutionLayer::ConvolutionLayer</a></div><div class="ttdeci">ConvolutionLayer(unsigned int conv_width, unsigned int conv_height, unsigned int ofm, ITensorAccessorUPtr weights, ITensorAccessorUPtr bias, PadStrideInfo conv_info, unsigned int num_groups=1, const QuantizationInfo weights_quant_info=QuantizationInfo(), const QuantizationInfo out_quant_info=QuantizationInfo())</div><div class="ttdoc">Construct a convolution layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00173">Layers.h:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints_xhtml_af18f64d6fa79da2fd4fd585bf818b3d2"><div class="ttname"><a href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#af18f64d6fa79da2fd4fd585bf818b3d2">arm_compute::graph::frontend::StreamHints::convolution_method_hint</a></div><div class="ttdeci">ConvolutionMethod convolution_method_hint</div><div class="ttdoc">Convolution method hint. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00065">Types.h:65</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a4bed63b35b24f8f44260237558e8a02b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4bed63b35b24f8f44260237558e8a02b">arm_compute::graph::GraphBuilder::add_input_node</a></div><div class="ttdeci">static NodeID add_input_node(Graph &amp;g, NodeParams params, TensorDescriptor desc, ITensorAccessorUPtr accessor=nullptr)</div><div class="ttdoc">Adds an input layer node to the graph. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml_a225fb162b43cbef27d5a1dbd7a51c60d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">arm_compute::graph::frontend::OutputLayer::create_layer</a></div><div class="ttdeci">NodeID create_layer(IStream &amp;s) override</div><div class="ttdoc">Create layer and add to the given stream. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00082">Layers.h:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer_xhtml_ada275ffd82f624b62bdbc2f01349fe33"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml#ada275ffd82f624b62bdbc2f01349fe33">arm_compute::graph::frontend::NormalizationLayer::NormalizationLayer</a></div><div class="ttdeci">NormalizationLayer(NormalizationLayerInfo norm_info)</div><div class="ttdoc">Construct a normalization layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00319">Layers.h:319</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::graph::NodeType::Output</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_7526be4d1cfecb7bc660fdbdb8633223.xhtml">frontend</a></li><li class="navelem"><a class="el" href="_layers_8h.xhtml">Layers.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
