<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/backends/ValidateHelpers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_validate_helpers_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ValidateHelpers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_validate_helpers_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_GRAPH_BACKENDS_DETAIL_VALIDATE_HELPERS_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_GRAPH_BACKENDS_DETAIL_VALIDATE_HELPERS_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_logger_8h.xhtml">arm_compute/graph/Logger.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_tensor_8h.xhtml">arm_compute/graph/Tensor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_nodes_8h.xhtml">arm_compute/graph/nodes/Nodes.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>backends</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>detail</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">   50</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a> *tensor)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> ((tensor == <span class="keyword">nullptr</span>) || (tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">handle</a>() == <span class="keyword">nullptr</span>)) ? <span class="keyword">nullptr</span> : tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">handle</a>()-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">tensor</a>().<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ConvolutionLayer, <span class="keyword">typename</span> DirectConvolutionLayer, <span class="keyword">typename</span> GEMMConvolutionLayer, <span class="keyword">typename</span> WinogradConvolutionLayer&gt;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a84a36a0cae1ceb4313891ca841b11cb3">   67</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a84a36a0cae1ceb4313891ca841b11cb3">validate_convolution_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;node)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Validating ConvolutionLayer node with ID : &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() &lt;&lt; std::endl);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7db9a1c221b414ff11bd4a5b7b97ec8d">num_inputs</a>() != 3);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a20ee33c4a581d8d3507dbb898d47d733">num_outputs</a>() != 1);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Extract IO and info</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *input   = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">input</a>(0));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *weights = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">input</a>(1));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *biases  = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">input</a>(2));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *output  = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a427ac30d0f5274436afbf5c78bc4f644">output</a>(0));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(input-&gt;data_type()))</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        biases-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">set_data_type</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>     <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">conv_info</a>      = node.<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#af8bae150bf98eca8fe0fa86eba1c82e7">convolution_info</a>();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> conv_algorithm = node.<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a1e41ff600f64885f7594756f39ff8af3">convolution_method</a>();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Validate function</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> status{};</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">switch</span>(conv_algorithm)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">DirectConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">GEMMConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">ConvolutionMethod::WINOGRAD</a>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">WinogradConvolutionLayer::validate</a>(input, weights, biases, output, conv_info <span class="comment">/*, fast_math*/</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">ConvolutionMethod::DEFAULT</a>:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">ConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// If validation fails try the Default approach</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(status))</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">ConvolutionLayer::validate</a>(input, weights, biases, output, conv_info <span class="comment">/*, fast_math*/</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">if</span>(<span class="keywordtype">bool</span>(status))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a>(<span class="stringliteral">&quot;Switched ConvolutionLayer method of node with ID : &quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                       &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() &lt;&lt; std::endl);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            node.<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a9d809efcf3df31392abc965f2cc3bae6">set_convolution_method</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">ConvolutionMethod::DEFAULT</a>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DepthwiseConvolutionLayer, <span class="keyword">typename</span> DepthwiseConvolutionLayer3x3&gt;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a1634943db602da2c457279f427ab9538">  132</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a1634943db602da2c457279f427ab9538">validate_depthwise_convolution_layer</a>(<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;node)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Validating DepthwiseConvolutionLayer node with ID : &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() &lt;&lt; std::endl);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7db9a1c221b414ff11bd4a5b7b97ec8d">num_inputs</a>() != 3);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a20ee33c4a581d8d3507dbb898d47d733">num_outputs</a>() != 1);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Extract IO and info</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a>        *weights       = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">detail::get_backing_tensor_info</a>(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">input</a>(1));</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> dwc_algorithm = node.<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a715cc3cf041f67ddeaffc9f8916a41aa">depthwise_convolution_method</a>();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(weights == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Validate function</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span>((dwc_algorithm == <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa2971a9bcecd987f7a7a006fde61be7a3">DepthwiseConvolutionMethod::OPTIMIZED_3x3</a>) &amp;&amp; (weights-&gt;tensor_shape()[<a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(weights-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>)] != 3))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a>(<span class="stringliteral">&quot;Switched DepthwiseConvolutionLayer method of node with ID : &quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                   &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">name</a>() &lt;&lt; std::endl);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        node.<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#af5320f5c3406e2263ed1a412c59d18c5">set_depthwise_convolution_method</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">DepthwiseConvolutionMethod::DEFAULT</a>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;} <span class="comment">// namespace detail</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;} <span class="comment">// namespace backends</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_GRAPH_BACKENDS_DETAIL_VALIDATE_HELPERS_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml_a715cc3cf041f67ddeaffc9f8916a41aa"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a715cc3cf041f67ddeaffc9f8916a41aa">arm_compute::graph::DepthwiseConvolutionLayerNode::depthwise_convolution_method</a></div><div class="ttdeci">DepthwiseConvolutionMethod depthwise_convolution_method() const </div><div class="ttdoc">Depthwise convolution layer method accessor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a9785ffbaaa220b6725a93a6f7f3145ca"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">arm_compute::graph::backends::detail::get_backing_tensor_info</a></div><div class="ttdeci">arm_compute::ITensorInfo * get_backing_tensor_info(arm_compute::graph::Tensor *tensor)</div><div class="ttdoc">Returns backing tensor info of a given tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_validate_helpers_8h_source.xhtml#l00050">ValidateHelpers.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::graph::ConvolutionMethod::DIRECT</a></div><div class="ttdoc">Deep direct convolution. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821fa2971a9bcecd987f7a7a006fde61be7a3"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa2971a9bcecd987f7a7a006fde61be7a3">arm_compute::graph::DepthwiseConvolutionMethod::OPTIMIZED_3x3</a></div><div class="ttdoc">Optimized 3x3 direct depthwise convolution. </div></div>
<div class="ttc" id="arm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_tensor_handle_xhtml_a91efb5b2e262ec5e55059ff1fd9accc6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">arm_compute::graph::ITensorHandle::tensor</a></div><div class="ttdeci">virtual arm_compute::ITensor &amp; tensor()=0</div><div class="ttdoc">Backend tensor object accessor. </div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">arm_compute::graph::ConvolutionMethod::DEFAULT</a></div><div class="ttdoc">Default approach using internal heuristics. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00051">Error.h:51</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00243">Error.h:243</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a7db9a1c221b414ff11bd4a5b7b97ec8d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7db9a1c221b414ff11bd4a5b7b97ec8d">arm_compute::graph::INode::num_inputs</a></div><div class="ttdeci">size_t num_inputs() const </div><div class="ttdoc">Returns number of inputs of the node. </div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_ab2d8baa35618bdad1d2814942355311e"><div class="ttname"><a href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_INFO(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00050">Logger.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_node_xhtml_af8bae150bf98eca8fe0fa86eba1c82e7"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#af8bae150bf98eca8fe0fa86eba1c82e7">arm_compute::graph::ConvolutionLayerNode::convolution_info</a></div><div class="ttdeci">PadStrideInfo convolution_info() const </div><div class="ttdoc">Convolution metadata accessor. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a1a4fd35b8e2e8a2c7ea38b6d37508673"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">arm_compute::graph::Tensor::handle</a></div><div class="ttdeci">ITensorHandle * handle()</div><div class="ttdoc">Backend tensor handle accessor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">arm_compute::graph::ConvolutionLayerNode</a></div><div class="ttdoc">Convolution Layer node. </div><div class="ttdef"><b>Definition:</b> <a href="_convolution_layer_node_8h_source.xhtml#l00034">ConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_node_xhtml_a9d809efcf3df31392abc965f2cc3bae6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a9d809efcf3df31392abc965f2cc3bae6">arm_compute::graph::ConvolutionLayerNode::set_convolution_method</a></div><div class="ttdeci">void set_convolution_method(ConvolutionMethod method)</div><div class="ttdoc">Sets the convolution layer method to use. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::graph::ConvolutionMethod::GEMM</a></div><div class="ttdoc">GEMM based convolution. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6813132c943295888972727864ea5c2f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(dst.info() -&gt;valid_region(), dst_valid_region)</div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a37627d5d5bba7f4a8690c71c2ab3cb07"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">arm_compute::graph::INode::name</a></div><div class="ttdeci">std::string name() const </div><div class="ttdoc">Returns node&amp;#39;s name. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">arm_compute::graph::DepthwiseConvolutionMethod</a></div><div class="ttdeci">DepthwiseConvolutionMethod</div><div class="ttdoc">Supported Depthwise Convolution layer methods. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00110">Types.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="graph_2_tensor_8h_xhtml"><div class="ttname"><a href="graph_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml"><div class="ttname"><a href="graph_2_logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00571">Types.h:571</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a9ebcdce876b4cd07736afa47d50154de"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">arm_compute::ITensorInfo::set_data_type</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_data_type(DataType data_type)=0</div><div class="ttdoc">Set the data type to the specified value. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_convolution_layer_node_xhtml_a1e41ff600f64885f7594756f39ff8af3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a1e41ff600f64885f7594756f39ff8af3">arm_compute::graph::ConvolutionLayerNode::convolution_method</a></div><div class="ttdeci">ConvolutionMethod convolution_method() const </div><div class="ttdoc">Convolution layer method accessor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acbf8f8a6dd185de04c1981c57a8963cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00360">Winograd.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::graph::ConvolutionMethod::WINOGRAD</a></div><div class="ttdoc">Winograd based convolution. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01056">Utils.h:1056</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_ac2073f3ae2a49f98a91315ed035f8669"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">arm_compute::graph::INode::id</a></div><div class="ttdeci">NodeID id() const </div><div class="ttdoc">Returns node&amp;#39;s ID. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a1634943db602da2c457279f427ab9538"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a1634943db602da2c457279f427ab9538">arm_compute::graph::backends::detail::validate_depthwise_convolution_layer</a></div><div class="ttdeci">Status validate_depthwise_convolution_layer(DepthwiseConvolutionLayerNode &amp;node)</div><div class="ttdoc">Validates a Depthwise Convolution layer node. </div><div class="ttdef"><b>Definition:</b> <a href="_validate_helpers_8h_source.xhtml#l00132">ValidateHelpers.h:132</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_a300d153929a99c7b571d4cda3f7987a5"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_VERBOSE(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00046">Logger.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::graph::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Supported Convolution layer methods. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00101">Types.h:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a427ac30d0f5274436afbf5c78bc4f644"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a427ac30d0f5274436afbf5c78bc4f644">arm_compute::graph::INode::output</a></div><div class="ttdeci">Tensor * output(size_t idx) const </div><div class="ttdoc">Returns the tensor of a given output of the node. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml_af5320f5c3406e2263ed1a412c59d18c5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#af5320f5c3406e2263ed1a412c59d18c5">arm_compute::graph::DepthwiseConvolutionLayerNode::set_depthwise_convolution_method</a></div><div class="ttdeci">void set_depthwise_convolution_method(DepthwiseConvolutionMethod method)</div><div class="ttdoc">Sets the depthwise convolution method to use. </div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">arm_compute::graph::DepthwiseConvolutionLayerNode</a></div><div class="ttdoc">Depthwise Convolution Layer node. </div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution_layer_node_8h_source.xhtml#l00034">DepthwiseConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_ac6dfcf4c1c7d4cb129fda6393e8c0b21"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">arm_compute::graph::INode::input</a></div><div class="ttdeci">Tensor * input(size_t idx) const </div><div class="ttdoc">Returns the tensor of a given input of the node. </div></div>
<div class="ttc" id="_nodes_8h_xhtml"><div class="ttname"><a href="_nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a84a36a0cae1ceb4313891ca841b11cb3"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a84a36a0cae1ceb4313891ca841b11cb3">arm_compute::graph::backends::detail::validate_convolution_layer</a></div><div class="ttdeci">Status validate_convolution_layer(ConvolutionLayerNode &amp;node)</div><div class="ttdoc">Validates a Convolution layer node. </div><div class="ttdef"><b>Definition:</b> <a href="_validate_helpers_8h_source.xhtml#l00067">ValidateHelpers.h:67</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a46e938020a3ac8c926d0590b7fe957db"><div class="ttname"><a href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00340">Helpers.inl:340</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a20ee33c4a581d8d3507dbb898d47d733"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a20ee33c4a581d8d3507dbb898d47d733">arm_compute::graph::INode::num_outputs</a></div><div class="ttdeci">size_t num_outputs() const </div><div class="ttdoc">Returns number of outputs of the node. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00041">Tensor.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_59b2231210c554f4cc243709030bf1f8.xhtml">backends</a></li><li class="navelem"><a class="el" href="_validate_helpers_8h.xhtml">ValidateHelpers.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
