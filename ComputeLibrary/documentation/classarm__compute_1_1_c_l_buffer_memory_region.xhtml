<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLBufferMemoryRegion Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_buffer_memory_region.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLBufferMemoryRegion Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL buffer memory region implementation.  
 <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLBufferMemoryRegion:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_buffer_memory_region__coll__graph.svg" width="182" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a00a579607975f161cbe7a5b499b7b8d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a00a579607975f161cbe7a5b499b7b8d5">CLBufferMemoryRegion</a> (cl::Context ctx, cl_mem_flags flags, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a0b6b70701c46e22849f0f363861351cd">size</a>)</td></tr>
<tr class="memdesc:a00a579607975f161cbe7a5b499b7b8d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a00a579607975f161cbe7a5b499b7b8d5">More...</a><br /></td></tr>
<tr class="separator:a00a579607975f161cbe7a5b499b7b8d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d957ce12ecbf85d9ecff5c372cfdd26"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a0d957ce12ecbf85d9ecff5c372cfdd26">ptr</a> () override</td></tr>
<tr class="memdesc:a0d957ce12ecbf85d9ecff5c372cfdd26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Host/SVM pointer accessor.  <a href="#a0d957ce12ecbf85d9ecff5c372cfdd26">More...</a><br /></td></tr>
<tr class="separator:a0d957ce12ecbf85d9ecff5c372cfdd26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af540d8670cb2ccdec5a30fd2471c2e85"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#af540d8670cb2ccdec5a30fd2471c2e85">map</a> (cl::CommandQueue &amp;q, bool blocking) override</td></tr>
<tr class="memdesc:af540d8670cb2ccdec5a30fd2471c2e85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#af540d8670cb2ccdec5a30fd2471c2e85">More...</a><br /></td></tr>
<tr class="separator:af540d8670cb2ccdec5a30fd2471c2e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56b704bed25e1e66ebe6b435f83fefcd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a56b704bed25e1e66ebe6b435f83fefcd">unmap</a> (cl::CommandQueue &amp;q) override</td></tr>
<tr class="memdesc:a56b704bed25e1e66ebe6b435f83fefcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated buffer on the given queue.  <a href="#a56b704bed25e1e66ebe6b435f83fefcd">More...</a><br /></td></tr>
<tr class="separator:a56b704bed25e1e66ebe6b435f83fefcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a></td></tr>
<tr class="memitem:a7cdcf7d89e4815422fcb3843e4ffbb4b inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a7cdcf7d89e4815422fcb3843e4ffbb4b">ICLMemoryRegion</a> (cl::Context ctx, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a0b6b70701c46e22849f0f363861351cd">size</a>)</td></tr>
<tr class="memdesc:a7cdcf7d89e4815422fcb3843e4ffbb4b inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a7cdcf7d89e4815422fcb3843e4ffbb4b">More...</a><br /></td></tr>
<tr class="separator:a7cdcf7d89e4815422fcb3843e4ffbb4b inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a04ae87317614a2332dea02ad30eaced5">~ICLMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Destructor.  <a href="#a04ae87317614a2332dea02ad30eaced5">More...</a><br /></td></tr>
<tr class="separator:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#af1759d36be2abbe1002a68ddc2255fad">ICLMemoryRegion</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#af1759d36be2abbe1002a68ddc2255fad">More...</a><br /></td></tr>
<tr class="separator:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a4e5aaebd133c159b70f757d6ba7c4dc5">ICLMemoryRegion</a> (<a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="#a4e5aaebd133c159b70f757d6ba7c4dc5">More...</a><br /></td></tr>
<tr class="separator:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#aba791ecf7c921e9a1c8d84baa7dd270e">More...</a><br /></td></tr>
<tr class="separator:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ad09657054c2f981a19b9ac7e4b95bd30">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="#ad09657054c2f981a19b9ac7e4b95bd30">More...</a><br /></td></tr>
<tr class="separator:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f4714c4a9320d1760102ef78a984241 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a7f4714c4a9320d1760102ef78a984241">cl_data</a> () const </td></tr>
<tr class="memdesc:a7f4714c4a9320d1760102ef78a984241 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying CL buffer.  <a href="#a7f4714c4a9320d1760102ef78a984241">More...</a><br /></td></tr>
<tr class="separator:a7f4714c4a9320d1760102ef78a984241 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad477d98361ee9ca6858819b772423bc4 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ad477d98361ee9ca6858819b772423bc4">buffer</a> () override</td></tr>
<tr class="memdesc:ad477d98361ee9ca6858819b772423bc4 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#ad477d98361ee9ca6858819b772423bc4">More...</a><br /></td></tr>
<tr class="separator:ad477d98361ee9ca6858819b772423bc4 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefe8db4d79cd87ccb3d6ac55e25594aa inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aefe8db4d79cd87ccb3d6ac55e25594aa">buffer</a> () const override</td></tr>
<tr class="memdesc:aefe8db4d79cd87ccb3d6ac55e25594aa inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#aefe8db4d79cd87ccb3d6ac55e25594aa">More...</a><br /></td></tr>
<tr class="separator:aefe8db4d79cd87ccb3d6ac55e25594aa inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0942fe2d17942077bc9c6706b8a3cc3a inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">void **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0942fe2d17942077bc9c6706b8a3cc3a">handle</a> () override</td></tr>
<tr class="memdesc:a0942fe2d17942077bc9c6706b8a3cc3a inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle of internal memory.  <a href="#a0942fe2d17942077bc9c6706b8a3cc3a">More...</a><br /></td></tr>
<tr class="separator:a0942fe2d17942077bc9c6706b8a3cc3a inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a></td></tr>
<tr class="memitem:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">IMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a0b6b70701c46e22849f0f363861351cd">size</a>)</td></tr>
<tr class="memdesc:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a92ee6f66a47e8ba4bd3d01579ad4ef42">More...</a><br /></td></tr>
<tr class="separator:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">~IMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="#aaa097212d2b66253335ff2dca6385b13">More...</a><br /></td></tr>
<tr class="separator:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b6b70701c46e22849f0f363861351cd inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a0b6b70701c46e22849f0f363861351cd">size</a> ()</td></tr>
<tr class="memdesc:a0b6b70701c46e22849f0f363861351cd inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> region size accessor.  <a href="#a0b6b70701c46e22849f0f363861351cd">More...</a><br /></td></tr>
<tr class="separator:a0b6b70701c46e22849f0f363861351cd inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">set_size</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a0b6b70701c46e22849f0f363861351cd">size</a>)</td></tr>
<tr class="memdesc:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets size of region.  <a href="#ab5c159b7d0cdca9f543019f4f47ec288">More...</a><br /></td></tr>
<tr class="separator:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL buffer memory region implementation. </p>

<p>Definition at line <a class="el" href="_c_l_memory_region_8h_source.xhtml#l00095">95</a> of file <a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a00a579607975f161cbe7a5b499b7b8d5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl_mem_flags&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>OpenCL context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> flags </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Region size </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af540d8670cb2ccdec5a30fd2471c2e85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* map </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a929af627a6a0430539998d12024d6c69">ICLMemoryRegion</a>.</p>

</div>
</div>
<a class="anchor" id="a0d957ce12ecbf85d9ecff5c372cfdd26"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Host/SVM pointer accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Host/SVM pointer base </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">ICLMemoryRegion</a>.</p>

</div>
</div>
<a class="anchor" id="a56b704bed25e1e66ebe6b435f83fefcd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueue the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0ee6b952accaff0f7e8e61bda7889102">ICLMemoryRegion</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:40 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
