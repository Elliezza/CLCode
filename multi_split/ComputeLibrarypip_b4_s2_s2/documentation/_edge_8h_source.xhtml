<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/Edge.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_edge_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Edge.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_edge_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_GRAPH_EDGE_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_GRAPH_EDGE_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_node_8h.xhtml">arm_compute/graph/INode.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_tensor_8h.xhtml">arm_compute/graph/Tensor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// Forward declarations</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>Graph;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> final</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">   51</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">Edge</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> <span class="keywordtype">id</span>, <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a6d7e4dd9d058b6e486b6b2c56153fb2a">producer</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa3017d0ec14d1b47c6b3656ccbcee99d">producer_idx</a>, <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ab2001ac9d8d93166c8b8717fadf120cc">consumer</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a03f0ccde3f7489e8ebacd2aec7278603">consumer_idx</a>, <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#af9a23801bcfa1bf96bb3725fd06fd860">tensor</a>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        : _id(id), _producer(producer), _consumer(consumer), _producer_idx(producer_idx), _consumer_idx(consumer_idx), _tensor(tensor)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#ae5a397708c4c9e0d6d935c5def129cd5">   60</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ae5a397708c4c9e0d6d935c5def129cd5">id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span> _id;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a1406bd3d2033837af2a47831a5304328">   68</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a1406bd3d2033837af2a47831a5304328">producer_id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> (_producer == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a> : _producer-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a7e85e821d1999985fd3996cec10ff94f">   76</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a7e85e821d1999985fd3996cec10ff94f">consumer_id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">return</span> (_consumer == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a> : _consumer-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">id</a>();</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a6d7e4dd9d058b6e486b6b2c56153fb2a">   84</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a6d7e4dd9d058b6e486b6b2c56153fb2a">producer</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> _producer;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#ab2001ac9d8d93166c8b8717fadf120cc">   92</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#ab2001ac9d8d93166c8b8717fadf120cc">consumer</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> _consumer;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa3017d0ec14d1b47c6b3656ccbcee99d">  100</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa3017d0ec14d1b47c6b3656ccbcee99d">producer_idx</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">return</span> _producer_idx;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#a03f0ccde3f7489e8ebacd2aec7278603">  108</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#a03f0ccde3f7489e8ebacd2aec7278603">consumer_idx</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> _consumer_idx;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#af9a23801bcfa1bf96bb3725fd06fd860">  116</a></span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#af9a23801bcfa1bf96bb3725fd06fd860">tensor</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> _tensor;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa930e4c448bd3e60f4ef41f98424238b">  124</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa930e4c448bd3e60f4ef41f98424238b">tensor_id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> (_tensor == <span class="keyword">nullptr</span>) ? <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a> : _tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a9746a32d2b9577d7e063077cb5ceda8f">id</a>();</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">  134</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">update_bound_tensor</a>(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#af9a23801bcfa1bf96bb3725fd06fd860">tensor</a>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        _tensor = (tensor != <span class="keyword">nullptr</span>) ? tensor : _tensor;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_edge.xhtml#afab89afd724f1b07b1aaad6bdc61c47a">  140</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>       _id;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *_producer;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>       *_consumer;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _producer_idx;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _consumer_idx;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a>      *_tensor;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;};</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_GRAPH_EDGE_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_aa4dfdb91786eda8e0c3b532809a2c5d9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aa4dfdb91786eda8e0c3b532809a2c5d9">arm_compute::graph::Edge::update_bound_tensor</a></div><div class="ttdeci">void update_bound_tensor(Tensor *tensor)</div><div class="ttdoc">Bind the edge to another tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00134">Edge.h:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_a1406bd3d2033837af2a47831a5304328"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a1406bd3d2033837af2a47831a5304328">arm_compute::graph::Edge::producer_id</a></div><div class="ttdeci">NodeID producer_id() const </div><div class="ttdoc">Returns producer node id. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00068">Edge.h:68</a></div></div>
<div class="ttc" id="arm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a9746a32d2b9577d7e063077cb5ceda8f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a9746a32d2b9577d7e063077cb5ceda8f">arm_compute::graph::Tensor::id</a></div><div class="ttdeci">TensorID id() const </div><div class="ttdoc">Tensor ID accessor. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_af9a23801bcfa1bf96bb3725fd06fd860"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#af9a23801bcfa1bf96bb3725fd06fd860">arm_compute::graph::Edge::tensor</a></div><div class="ttdeci">Tensor * tensor() const </div><div class="ttdoc">Returns the tensor associated with this edge. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00116">Edge.h:116</a></div></div>
<div class="ttc" id="_i_node_8h_xhtml"><div class="ttname"><a href="_i_node_8h.xhtml">INode.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_ad509007a40c162c72383ed29620e25ca"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#ad509007a40c162c72383ed29620e25ca">arm_compute::graph::Edge::Edge</a></div><div class="ttdeci">Edge(EdgeID id, INode *producer, unsigned int producer_idx, INode *consumer, unsigned int consumer_idx, Tensor *tensor)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00051">Edge.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00044">INode.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_a7e85e821d1999985fd3996cec10ff94f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a7e85e821d1999985fd3996cec10ff94f">arm_compute::graph::Edge::consumer_id</a></div><div class="ttdeci">NodeID consumer_id() const </div><div class="ttdoc">Returns sink node id. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00076">Edge.h:76</a></div></div>
<div class="ttc" id="graph_2_tensor_8h_xhtml"><div class="ttname"><a href="graph_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_aa3017d0ec14d1b47c6b3656ccbcee99d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aa3017d0ec14d1b47c6b3656ccbcee99d">arm_compute::graph::Edge::producer_idx</a></div><div class="ttdeci">unsigned int producer_idx() const </div><div class="ttdoc">Returns the index of the output that produces the result in the producer node. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00100">Edge.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_a03f0ccde3f7489e8ebacd2aec7278603"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a03f0ccde3f7489e8ebacd2aec7278603">arm_compute::graph::Edge::consumer_idx</a></div><div class="ttdeci">unsigned int consumer_idx() const </div><div class="ttdoc">Returns the index of the input that consumes the result in the consumer node. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00108">Edge.h:108</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_abba17a56bbf16c7cbc7acd4aa54abcea"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">arm_compute::graph::EdgeID</a></div><div class="ttdeci">unsigned int EdgeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00058">Types.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_ac2073f3ae2a49f98a91315ed035f8669"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">arm_compute::graph::INode::id</a></div><div class="ttdeci">NodeID id() const </div><div class="ttdoc">Returns node&amp;#39;s ID. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_aa930e4c448bd3e60f4ef41f98424238b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aa930e4c448bd3e60f4ef41f98424238b">arm_compute::graph::Edge::tensor_id</a></div><div class="ttdeci">TensorID tensor_id() const </div><div class="ttdoc">Returns the tensor id associated with this edge. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00124">Edge.h:124</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8h_source.xhtml#l00050">Graph.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_a6d7e4dd9d058b6e486b6b2c56153fb2a"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#a6d7e4dd9d058b6e486b6b2c56153fb2a">arm_compute::graph::Edge::producer</a></div><div class="ttdeci">INode * producer() const </div><div class="ttdoc">Returns producer node. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00084">Edge.h:84</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00057">Types.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml">arm_compute::graph::Edge</a></div><div class="ttdoc">Graph Edge. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00039">Edge.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00067">Types.h:67</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa94938a3eb11fda4724c362c53c28f24"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">arm_compute::graph::NullTensorID</a></div><div class="ttdeci">constexpr TensorID NullTensorID</div><div class="ttdoc">Constant NodeID specifying an equivalent of null node. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00065">Types.h:65</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_ae5a397708c4c9e0d6d935c5def129cd5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#ae5a397708c4c9e0d6d935c5def129cd5">arm_compute::graph::Edge::id</a></div><div class="ttdeci">EdgeID id() const </div><div class="ttdoc">Returns edge id. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00060">Edge.h:60</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a615af95e19b5d9f74d2760183566a9a3"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">arm_compute::graph::TensorID</a></div><div class="ttdeci">unsigned int TensorID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_ab2001ac9d8d93166c8b8717fadf120cc"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#ab2001ac9d8d93166c8b8717fadf120cc">arm_compute::graph::Edge::consumer</a></div><div class="ttdeci">INode * consumer() const </div><div class="ttdoc">Returns consumer node. </div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00092">Edge.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a></div><div class="ttdoc">Tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="graph_2_tensor_8h_source.xhtml#l00041">Tensor.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="_edge_8h.xhtml">Edge.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
