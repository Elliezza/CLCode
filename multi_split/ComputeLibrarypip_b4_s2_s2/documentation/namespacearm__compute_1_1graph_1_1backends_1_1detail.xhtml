<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::graph::backends::detail Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::graph::backends::detail Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1backends_1_1detail_1_1_backend_registrar.xhtml">BackendRegistrar</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper class to statically register a backend.  <a href="classarm__compute_1_1graph_1_1backends_1_1detail_1_1_backend_registrar.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9785ffbaaa220b6725a93a6f7f3145ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a> (<a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a> *tensor)</td></tr>
<tr class="memdesc:a9785ffbaaa220b6725a93a6f7f3145ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns backing tensor info of a given tensor.  <a href="#a9785ffbaaa220b6725a93a6f7f3145ca">More...</a><br /></td></tr>
<tr class="separator:a9785ffbaaa220b6725a93a6f7f3145ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84a36a0cae1ceb4313891ca841b11cb3"><td class="memTemplParams" colspan="2">template&lt;typename ConvolutionLayer , typename DirectConvolutionLayer , typename GEMMConvolutionLayer , typename WinogradConvolutionLayer &gt; </td></tr>
<tr class="memitem:a84a36a0cae1ceb4313891ca841b11cb3"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a84a36a0cae1ceb4313891ca841b11cb3">validate_convolution_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;node)</td></tr>
<tr class="memdesc:a84a36a0cae1ceb4313891ca841b11cb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validates a Convolution layer node.  <a href="#a84a36a0cae1ceb4313891ca841b11cb3">More...</a><br /></td></tr>
<tr class="separator:a84a36a0cae1ceb4313891ca841b11cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1634943db602da2c457279f427ab9538"><td class="memTemplParams" colspan="2">template&lt;typename DepthwiseConvolutionLayer , typename DepthwiseConvolutionLayer3x3 &gt; </td></tr>
<tr class="memitem:a1634943db602da2c457279f427ab9538"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a1634943db602da2c457279f427ab9538">validate_depthwise_convolution_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;node)</td></tr>
<tr class="memdesc:a1634943db602da2c457279f427ab9538"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validates a Depthwise Convolution layer node.  <a href="#a1634943db602da2c457279f427ab9538">More...</a><br /></td></tr>
<tr class="separator:a1634943db602da2c457279f427ab9538"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a9785ffbaaa220b6725a93a6f7f3145ca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a>* arm_compute::graph::backends::detail::get_backing_tensor_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">arm_compute::graph::Tensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns backing tensor info of a given tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> to extract the backing tensor from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Backing tensor tensor info if present else nullptr </dd></dl>

<p>Definition at line <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">50</a> of file <a class="el" href="_validate_helpers_8h_source.xhtml">ValidateHelpers.h</a>.</p>

<p>References <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">Tensor::handle()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">ITensorHandle::tensor()</a>.</p>

<p>Referenced by <a class="el" href="_validate_helpers_8h_source.xhtml#l00067">validate_convolution_layer()</a>, and <a class="el" href="_validate_helpers_8h_source.xhtml#l00132">validate_depthwise_convolution_layer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> ((tensor == <span class="keyword">nullptr</span>) || (tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">handle</a>() == <span class="keyword">nullptr</span>)) ? <span class="keyword">nullptr</span> : tensor-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">handle</a>()-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">tensor</a>().<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1_i_tensor_handle_xhtml_a91efb5b2e262ec5e55059ff1fd9accc6"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#a91efb5b2e262ec5e55059ff1fd9accc6">arm_compute::graph::ITensorHandle::tensor</a></div><div class="ttdeci">virtual arm_compute::ITensor &amp; tensor()=0</div><div class="ttdoc">Backend tensor object accessor. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a1a4fd35b8e2e8a2c7ea38b6d37508673"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a1a4fd35b8e2e8a2c7ea38b6d37508673">arm_compute::graph::Tensor::handle</a></div><div class="ttdeci">ITensorHandle * handle()</div><div class="ttdoc">Backend tensor handle accessor. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a84a36a0cae1ceb4313891ca841b11cb3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> arm_compute::graph::backends::detail::validate_convolution_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Validates a Convolution layer node. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ConvolutionLayer</td><td>Default Convolution layer function type </td></tr>
    <tr><td class="paramname">DirectConvolutionLayer</td><td>Direct Convolution layer function type </td></tr>
    <tr><td class="paramname">GEMMConvolutionLayer</td><td>GEMM Convolution layer function type </td></tr>
    <tr><td class="paramname">WinogradConvolutionLayer</td><td>Winograd Convolution layer function type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>Node to validate</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> </dd></dl>

<p>Definition at line <a class="el" href="_validate_helpers_8h_source.xhtml#l00067">67</a> of file <a class="el" href="_validate_helpers_8h_source.xhtml">ValidateHelpers.h</a>.</p>

<p>References <a class="el" href="graph_2_logger_8h_source.xhtml#l00050">ARM_COMPUTE_LOG_GRAPH_INFO</a>, <a class="el" href="graph_2_logger_8h_source.xhtml#l00046">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>, <a class="el" href="_error_8h_source.xhtml#l00243">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="_c_l_2_winograd_8cpp_source.xhtml#l00360">arm_compute::test::validation::conv_info</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#af8bae150bf98eca8fe0fa86eba1c82e7">ConvolutionLayerNode::convolution_info()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a1e41ff600f64885f7594756f39ff8af3">ConvolutionLayerNode::convolution_method()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">arm_compute::graph::DEFAULT</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::graph::DIRECT</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::graph::GEMM</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">get_backing_tensor_info()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">INode::id()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">INode::input()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01056">arm_compute::is_data_type_quantized_asymmetric()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">INode::name()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7db9a1c221b414ff11bd4a5b7b97ec8d">INode::num_inputs()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a20ee33c4a581d8d3507dbb898d47d733">INode::num_outputs()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a427ac30d0f5274436afbf5c78bc4f644">INode::output()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#a9d809efcf3df31392abc965f2cc3bae6">ConvolutionLayerNode::set_convolution_method()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">ITensorInfo::set_data_type()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">arm_compute::test::validation::validate()</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::graph::WINOGRAD</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Validating ConvolutionLayer node with ID : &quot;</span> &lt;&lt; node.id() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.name() &lt;&lt; std::endl);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.num_inputs() != 3);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.num_outputs() != 1);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Extract IO and info</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *input   = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.input(0));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *weights = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.input(1));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *biases  = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.input(2));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a> *output  = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">get_backing_tensor_info</a>(node.output(0));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(input-&gt;data_type()))</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        biases-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">set_data_type</a>(DataType::S32);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> PadStrideInfo     <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">conv_info</a>      = node.convolution_info();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> conv_algorithm = node.convolution_method();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Validate function</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    Status status{};</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">switch</span>(conv_algorithm)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::DIRECT:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">DirectConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::GEMM:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">GEMMConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::WINOGRAD:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">WinogradConvolutionLayer::validate</a>(input, weights, biases, output, conv_info <span class="comment">/*, fast_math*/</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::DEFAULT:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">ConvolutionLayer::validate</a>(input, weights, biases, output, conv_info);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// If validation fails try the Default approach</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(status))</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        status = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">ConvolutionLayer::validate</a>(input, weights, biases, output, conv_info <span class="comment">/*, fast_math*/</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">if</span>(<span class="keywordtype">bool</span>(status))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a>(<span class="stringliteral">&quot;Switched ConvolutionLayer method of node with ID : &quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                       &lt;&lt; node.id() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.name() &lt;&lt; std::endl);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            node.set_convolution_method(ConvolutionMethod::DEFAULT);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a9785ffbaaa220b6725a93a6f7f3145ca"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">arm_compute::graph::backends::detail::get_backing_tensor_info</a></div><div class="ttdeci">arm_compute::ITensorInfo * get_backing_tensor_info(arm_compute::graph::Tensor *tensor)</div><div class="ttdoc">Returns backing tensor info of a given tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_validate_helpers_8h_source.xhtml#l00050">ValidateHelpers.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01220">Types.h:1220</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00243">Error.h:243</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_ab2d8baa35618bdad1d2814942355311e"><div class="ttname"><a href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_INFO(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00050">Logger.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6813132c943295888972727864ea5c2f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(dst.info() -&gt;valid_region(), dst_valid_region)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a9ebcdce876b4cd07736afa47d50154de"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9ebcdce876b4cd07736afa47d50154de">arm_compute::ITensorInfo::set_data_type</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_data_type(DataType data_type)=0</div><div class="ttdoc">Set the data type to the specified value. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acbf8f8a6dd185de04c1981c57a8963cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00360">Winograd.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01056">Utils.h:1056</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_a300d153929a99c7b571d4cda3f7987a5"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_VERBOSE(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00046">Logger.h:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1634943db602da2c457279f427ab9538"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> arm_compute::graph::backends::detail::validate_depthwise_convolution_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Validates a Depthwise Convolution layer node. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">DepthwiseConvolutionLayer</td><td>Default Depthwise Convolution layer type </td></tr>
    <tr><td class="paramname">DepthwiseConvolutionLayer3x3</td><td>Optimized 3x3 Depthwise Convolution layer type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>Node to validate</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> </dd></dl>

<p>Definition at line <a class="el" href="_validate_helpers_8h_source.xhtml#l00132">132</a> of file <a class="el" href="_validate_helpers_8h_source.xhtml">ValidateHelpers.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00328">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="graph_2_logger_8h_source.xhtml#l00050">ARM_COMPUTE_LOG_GRAPH_INFO</a>, <a class="el" href="graph_2_logger_8h_source.xhtml#l00046">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>, <a class="el" href="_error_8h_source.xhtml#l00243">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5b39c8b553c821e7cddc6da64b5bd2ee">arm_compute::graph::DEFAULT</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a715cc3cf041f67ddeaffc9f8916a41aa">DepthwiseConvolutionLayerNode::depthwise_convolution_method()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">get_backing_tensor_info()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00340">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac2073f3ae2a49f98a91315ed035f8669">INode::id()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ac6dfcf4c1c7d4cb129fda6393e8c0b21">INode::input()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a37627d5d5bba7f4a8690c71c2ab3cb07">INode::name()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a7db9a1c221b414ff11bd4a5b7b97ec8d">INode::num_inputs()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a20ee33c4a581d8d3507dbb898d47d733">INode::num_outputs()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa2971a9bcecd987f7a7a006fde61be7a3">arm_compute::graph::OPTIMIZED_3x3</a>, <a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#af5320f5c3406e2263ed1a412c59d18c5">DepthwiseConvolutionLayerNode::set_depthwise_convolution_method()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Validating DepthwiseConvolutionLayer node with ID : &quot;</span> &lt;&lt; node.id() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.name() &lt;&lt; std::endl);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.num_inputs() != 3);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(node.num_outputs() != 1);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Extract IO and info</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a>        *weights       = <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">detail::get_backing_tensor_info</a>(node.input(1));</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> dwc_algorithm = node.depthwise_convolution_method();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(weights == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Validate function</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span>((dwc_algorithm == DepthwiseConvolutionMethod::OPTIMIZED_3x3) &amp;&amp; (weights-&gt;tensor_shape()[<a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(weights-&gt;data_layout(), DataLayoutDimension::WIDTH)] != 3))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <a class="code" href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a>(<span class="stringliteral">&quot;Switched DepthwiseConvolutionLayer method of node with ID : &quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                   &lt;&lt; node.id() &lt;&lt; <span class="stringliteral">&quot; and Name: &quot;</span> &lt;&lt; node.name() &lt;&lt; std::endl);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        node.set_depthwise_convolution_method(DepthwiseConvolutionMethod::DEFAULT);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a9785ffbaaa220b6725a93a6f7f3145ca"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a9785ffbaaa220b6725a93a6f7f3145ca">arm_compute::graph::backends::detail::get_backing_tensor_info</a></div><div class="ttdeci">arm_compute::ITensorInfo * get_backing_tensor_info(arm_compute::graph::Tensor *tensor)</div><div class="ttdoc">Returns backing tensor info of a given tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_validate_helpers_8h_source.xhtml#l00050">ValidateHelpers.h:50</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00243">Error.h:243</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_ab2d8baa35618bdad1d2814942355311e"><div class="ttname"><a href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_INFO(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00050">Logger.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">arm_compute::graph::DepthwiseConvolutionMethod</a></div><div class="ttdeci">DepthwiseConvolutionMethod</div><div class="ttdoc">Supported Depthwise Convolution layer methods. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00110">Types.h:110</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_a300d153929a99c7b571d4cda3f7987a5"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_VERBOSE(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00046">Logger.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a46e938020a3ac8c926d0590b7fe957db"><div class="ttname"><a href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00340">Helpers.inl:340</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">backends</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml">detail</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:43 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
