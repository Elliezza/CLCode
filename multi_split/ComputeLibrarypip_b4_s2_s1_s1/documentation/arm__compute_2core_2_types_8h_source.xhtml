<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/Types.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('arm__compute_2core_2_types_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Types.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="arm__compute_2core_2_types_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TYPES_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TYPES_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_coordinates_8h.xhtml">arm_compute/core/Coordinates.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_q_asymm8_8h.xhtml">arm_compute/core/QAsymm8.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_rounding_8h.xhtml">arm_compute/core/Rounding.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_size2_d_8h.xhtml">arm_compute/core/Size2D.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_strides_8h.xhtml">arm_compute/core/Strides.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_shape_8h.xhtml">arm_compute/core/TensorShape.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_half_8h.xhtml">support/Half.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">   44</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> = <a class="code" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half_float::half</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">   47</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> = <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">   50</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</a>,  </div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">U8</a>,       </div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">S16</a>,      </div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">U16</a>,      </div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">S32</a>,      </div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee">U32</a>,      </div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">F16</a>,      </div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">F32</a>,      </div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825">UV88</a>,     </div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">RGB888</a>,   </div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a165f06116e7b8d9b2481dfc805db4619">RGBA8888</a>, </div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c">YUV444</a>,   </div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">YUYV422</a>,  </div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">NV12</a>,     </div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">NV21</a>,     </div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">IYUV</a>,     </div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">UYVY422</a>   </div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;};</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">   72</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</a>, </div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">U8</a>,      </div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">S8</a>,      </div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a11cde4d3551db3f9498d339a67189543">QS8</a>,     </div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">QASYMM8</a>, </div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">U16</a>,     </div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">S16</a>,     </div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a48d877702a2957f5a932c43a357866f9">QS16</a>,    </div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee">U32</a>,     </div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">S32</a>,     </div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ad5695915456312560039ee411667cdbf">QS32</a>,    </div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa">U64</a>,     </div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc">S64</a>,     </div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">F16</a>,     </div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">F32</a>,     </div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e">F64</a>,     </div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6abd7ef6d4f35bc7d05c559b65032f15d1">SIZET</a>    </div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7b">   94</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7b">SamplingPolicy</a></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">CENTER</a>,  </div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">TOP_LEFT</a> </div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;};</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a3fed059965fe44cbe7ed4091d6b63acf">  101</a></span>&#160;constexpr uint8_t <a class="code" href="namespacearm__compute.xhtml#a3fed059965fe44cbe7ed4091d6b63acf">CONSTANT_BORDER_VALUE</a> = 199;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">  104</a></span>&#160;constexpr <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">SCALE_PYRAMID_HALF</a> = 0.5f;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a2ebcd5423d5fba468e7debd2e1aabe91">  107</a></span>&#160;constexpr <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute.xhtml#a2ebcd5423d5fba468e7debd2e1aabe91">SCALE_PYRAMID_ORB</a> = 8.408964152537146130583778358414e-01;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">  110</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</a>, </div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">NCHW</a>,    </div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">NHWC</a>     </div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;};</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">  118</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">CHANNEL</a>, </div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">HEIGHT</a>,  </div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">WIDTH</a>,   </div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">BATCHES</a>  </div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;};</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml">  127</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#a915ff61cd41512869bb569f505946e83">  130</a></span>&#160;    <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a915ff61cd41512869bb569f505946e83">QuantizationInfo</a>()</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>(0.0f), <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(0)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#af565d3fc3f7d82e9ed5e36dda5377eab">  140</a></span>&#160;    <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#af565d3fc3f7d82e9ed5e36dda5377eab">QuantizationInfo</a>(<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <span class="keywordtype">int</span> <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        : scale(scale), offset(offset)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#a28c9ca2cba95f7a1d38a0ad2afd11916">  151</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a28c9ca2cba95f7a1d38a0ad2afd11916">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;other)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a> == other.<a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> &amp;&amp; <a class="code" href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> == other.<a class="code" href="structarm__compute_1_1_quantization_info.xhtml#aed7ea92f45bd273dde380a45ddced592">offset</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#af63bc167068077a5945672776b472268">  162</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#af63bc167068077a5945672776b472268">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;other)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">  167</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;  </div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#aed7ea92f45bd273dde380a45ddced592">  168</a></span>&#160;    <span class="keywordtype">int</span>   <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#aed7ea92f45bd273dde380a45ddced592">offset</a>; </div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#a0d7963ab10dad56e241cf6bb66625856">  177</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a0d7963ab10dad56e241cf6bb66625856">quantize</a>(<span class="keywordtype">float</span> value, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">RoundingPolicy</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <a class="code" href="_error_8h.xhtml#a5bbdcf574d3f5e412fa6a1117911e67b">ARM_COMPUTE_ERROR_ON_MSG</a>(scale == 0, <span class="stringliteral">&quot;QuantizationInfo::quantize: scale == 0&quot;</span>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">return</span> sqcvt_qasymm8_f32(value, scale, offset, rounding_policy);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#a9f956adfa6525f0edd3c702e7e5afb8f">  189</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#a9f956adfa6525f0edd3c702e7e5afb8f">dequantize</a>(<a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> value)<span class="keyword"> const</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <a class="code" href="_error_8h.xhtml#a5bbdcf574d3f5e412fa6a1117911e67b">ARM_COMPUTE_ERROR_ON_MSG</a>(scale == 0, <span class="stringliteral">&quot;QuantizationInfo::dequantize: scale == 0&quot;</span>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> scvt_f32_qasymm8(value, scale, offset);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_quantization_info.xhtml#ac6e61de369e994009e36f344f99c15ad">  199</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_quantization_info.xhtml#ac6e61de369e994009e36f344f99c15ad">empty</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> scale == 0;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;};</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml">  206</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#a77ef520daabfab023d01732f24101c6e">  209</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml#a77ef520daabfab023d01732f24101c6e">ValidRegion</a>()</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        : anchor{}, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>{}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;operator=(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    ~<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#aafe658c46436747f101e5aa9f8cd28b2">  231</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml#aafe658c46436747f101e5aa9f8cd28b2">ValidRegion</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;an_anchor, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;a_shape)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        : anchor{ an_anchor }, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>{ a_shape }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        anchor.set_num_dimensions(<a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(anchor.num_dimensions(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.num_dimensions()));</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#a1de12d43d932fc3b1e05ff15e85212bf">  244</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1de12d43d932fc3b1e05ff15e85212bf">ValidRegion</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;an_anchor, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;a_shape, <span class="keywordtype">size_t</span> num_dimensions)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        : anchor{ an_anchor }, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>{ a_shape }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(num_dimensions &lt; <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">std::max</a>(anchor.num_dimensions(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.num_dimensions()));</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        anchor.set_num_dimensions(num_dimensions);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#aec54a7ff1ca347fdda25821cfb8fd0ed">  252</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml#aec54a7ff1ca347fdda25821cfb8fd0ed">start</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> d)<span class="keyword"> const</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">return</span> anchor[d];</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#adc8388028db66f138de6b1aca27ad620">  258</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml#adc8388028db66f138de6b1aca27ad620">end</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> d)<span class="keyword"> const</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">return</span> anchor[d] + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>[d];</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#ae658e258947a14e0d45975c531e03540">  271</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;<span class="keyword">set</span>(<span class="keywordtype">size_t</span> dimension, <span class="keywordtype">int</span> start, <span class="keywordtype">size_t</span> size)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        anchor.<a class="code" href="structarm__compute_1_1_valid_region.xhtml#ae658e258947a14e0d45975c531e03540">set</a>(dimension, start);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.set(dimension, size);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#a55a69b397082accd94221dd10b722cf7">  278</a></span>&#160;    <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> <a class="code" href="structarm__compute_1_1_valid_region.xhtml#a55a69b397082accd94221dd10b722cf7">anchor</a>; </div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">  279</a></span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>;  </div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;};</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">  283</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;{</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">UNDEFINED</a>, </div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a8d6b5cada83510220f59e00ce86d4d92">CONSTANT</a>,  </div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">REPLICATE</a>  </div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;};</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml">  291</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#ae97b3d4d063ade0ef4bdf5be1f135881">  294</a></span>&#160;    constexpr <a class="code" href="structarm__compute_1_1_border_size.xhtml#ae97b3d4d063ade0ef4bdf5be1f135881">BorderSize</a>()</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        : top{ 0 }, right{ 0 }, bottom{ 0 }, left{ 0 }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    {</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a4ead5a6d48151a603bf3be1e6acafb05">  300</a></span>&#160;    <span class="keyword">explicit</span> constexpr <a class="code" href="structarm__compute_1_1_border_size.xhtml#a4ead5a6d48151a603bf3be1e6acafb05">BorderSize</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        : top{ size }, right{ size }, bottom{ size }, left{ size }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a44089024084b73c5b83e509518df48e0">  306</a></span>&#160;    constexpr <a class="code" href="structarm__compute_1_1_border_size.xhtml#a44089024084b73c5b83e509518df48e0">BorderSize</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> top_bottom, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> left_right)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        : top{ top_bottom }, right{ left_right }, bottom{ top_bottom }, left{ left_right }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a10a8505b7c7458d1f60cac844d42e023">  312</a></span>&#160;    constexpr <a class="code" href="structarm__compute_1_1_border_size.xhtml#a10a8505b7c7458d1f60cac844d42e023">BorderSize</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> top, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> right, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bottom, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> left)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        : top{ top }, right{ right }, bottom{ bottom }, left{ left }</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">  318</a></span>&#160;    constexpr <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">empty</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keywordflow">return</span> top == 0 &amp;&amp; right == 0 &amp;&amp; bottom == 0 &amp;&amp; left == 0;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    }</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a3057c6687da7d7d5674dcc49eba5736c">  324</a></span>&#160;    constexpr <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a3057c6687da7d7d5674dcc49eba5736c">uniform</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span> top == right &amp;&amp; top == bottom &amp;&amp; top == left;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#ac2ed52112076ed0fd2aab3fbfb758837">  335</a></span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> &amp;<a class="code" href="structarm__compute_1_1_border_size.xhtml#ac2ed52112076ed0fd2aab3fbfb758837">operator*=</a>(<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        top *= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        right *= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        bottom *= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        left *= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a19da960d23eca69f8e65d52c741147e2">  351</a></span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a19da960d23eca69f8e65d52c741147e2">operator*</a>(<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> size = *<span class="keyword">this</span>;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        size *= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">return</span> size;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a00ac5d6334fe3217b4ef49ea8dc61fb0">  363</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a00ac5d6334fe3217b4ef49ea8dc61fb0">limit</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> &amp;limit)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        top    = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(top, limit.<a class="code" href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">top</a>);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        right  = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(right, limit.<a class="code" href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">right</a>);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        bottom = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(bottom, limit.<a class="code" href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">bottom</a>);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        left   = <a class="code" href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">std::min</a>(left, limit.<a class="code" href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">left</a>);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">  371</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">top</a>;    </div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">  372</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">right</a>;  </div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">  373</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">bottom</a>; </div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">  374</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">left</a>;   </div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;};</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">  378</a></span>&#160;<span class="keyword">using</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> = <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">  381</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">WRAP</a>,    </div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">SATURATE</a> </div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;};</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">  388</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">NEAREST_NEIGHBOR</a>, </div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">BILINEAR</a>,         </div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">AREA</a>,             </div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;};</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202">  396</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202">BilinearInterpolation</a></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;{</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202a856d68c521c4c85363f54d95a33b7532">BILINEAR_OLD_NEW</a>, </div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202a731cb35d2d520920db9ab20dfc5edc64">BILINEAR_SCHARR</a>   </div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;};</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649">  403</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649">ThresholdType</a></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;{</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649a98ad0e8750ae10ad556ed7a62affb452">BINARY</a>, </div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649a01036ddcc971d02f6c32c3da31a119f2">RANGE</a>   </div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;};</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453">  410</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453">Termination</a></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;{</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a5a2e12b6baf7ad91a2ce32f19c36bd1b">TERM_CRITERIA_EPSILON</a>,    </div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a43f2a8b688fb96e5ad8ba08308bbcdfd">TERM_CRITERIA_ITERATIONS</a>, </div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a788740b1ba2d6463dae318a332513b29">TERM_CRITERIA_BOTH</a>        </div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;};</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8a">  418</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8a">MagnitudeType</a></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;{</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8aac2f1be73bf576190d1f42bdaf5162ae8">L1NORM</a>, </div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8aad927ac799e8b24f80fc80d89b2eb7131">L2NORM</a>  </div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;};</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">  428</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;{</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72a6898b46a1cde8a1572e2722c44c5ab07">SIGNED</a>,  </div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">UNSIGNED</a> </div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;};</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml">  435</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_key_point.xhtml">KeyPoint</a></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;{</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#af6d3062751bd565decb1a2cd3b63bdb2">  437</a></span>&#160;    int32_t x{ 0 };               </div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#af64066d134a77e01b3d6eb8da813627a">  438</a></span>&#160;    int32_t y{ 0 };               </div><div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#a2c1c8f9331368f38bfc3eaee260b59a6">  439</a></span>&#160;    <span class="keywordtype">float</span>   strength{ 0.f };      </div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#a1d28dec57cce925ad92342891bd71e7c">  440</a></span>&#160;    <span class="keywordtype">float</span>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>{ 0.f };         </div><div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#a0e3266fc15309697502533db62b682af">  441</a></span>&#160;    <span class="keywordtype">float</span>   orientation{ 0.f };   </div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#a8ca2aae59762685dd38143e5f8267147">  442</a></span>&#160;    int32_t tracking_status{ 0 }; </div><div class="line"><a name="l00443"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_key_point.xhtml#a7cfd13d282af770aaa971755fa092fca">  443</a></span>&#160;    <span class="keywordtype">float</span>   <a class="code" href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">error</a>{ 0.f };         </div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;};</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a2ab89a5d0959531aac270879cdd3ed78">  447</a></span>&#160;<span class="keyword">using</span> <a class="code" href="struct_internal_keypoint.xhtml">InternalKeypoint</a> = std::tuple&lt;float, float, float&gt;; <span class="comment">/* x,y,strength */</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_rectangle.xhtml">  450</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_rectangle.xhtml">Rectangle</a></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;{</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_rectangle.xhtml#a4dde988b1b2adba65ae3efa69f65d960">  452</a></span>&#160;    uint16_t <a class="code" href="structarm__compute_1_1_rectangle.xhtml#a4dde988b1b2adba65ae3efa69f65d960">x</a>;      </div><div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_rectangle.xhtml#ab0580f504a7428539be299fa71565f30">  453</a></span>&#160;    uint16_t <a class="code" href="structarm__compute_1_1_rectangle.xhtml#ab0580f504a7428539be299fa71565f30">y</a>;      </div><div class="line"><a name="l00454"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_rectangle.xhtml#ad0eab1042455a2067c812ab8071d5376">  454</a></span>&#160;    uint16_t <a class="code" href="structarm__compute_1_1_rectangle.xhtml#ad0eab1042455a2067c812ab8071d5376">width</a>;  </div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_rectangle.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">  455</a></span>&#160;    uint16_t <a class="code" href="structarm__compute_1_1_rectangle.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">height</a>; </div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;};</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates2_d.xhtml">  459</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;{</div><div class="line"><a name="l00461"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates2_d.xhtml#af6d3062751bd565decb1a2cd3b63bdb2">  461</a></span>&#160;    int32_t <a class="code" href="structarm__compute_1_1_coordinates2_d.xhtml#af6d3062751bd565decb1a2cd3b63bdb2">x</a>; </div><div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates2_d.xhtml#af64066d134a77e01b3d6eb8da813627a">  462</a></span>&#160;    int32_t <a class="code" href="structarm__compute_1_1_coordinates2_d.xhtml#af64066d134a77e01b3d6eb8da813627a">y</a>; </div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;};</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates3_d.xhtml">  466</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_coordinates3_d.xhtml">Coordinates3D</a></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;{</div><div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates3_d.xhtml#aae8a40a17c0be29c1f06ca6b4f9e2235">  468</a></span>&#160;    uint32_t <a class="code" href="structarm__compute_1_1_coordinates3_d.xhtml#aae8a40a17c0be29c1f06ca6b4f9e2235">x</a>; </div><div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates3_d.xhtml#a9c02f93c9698e4486878867c4f265c48">  469</a></span>&#160;    uint32_t <a class="code" href="structarm__compute_1_1_coordinates3_d.xhtml#a9c02f93c9698e4486878867c4f265c48">y</a>; </div><div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_coordinates3_d.xhtml#ad81d8d7d582cb5752dbeab85e233603a">  470</a></span>&#160;    uint32_t <a class="code" href="structarm__compute_1_1_coordinates3_d.xhtml#ad81d8d7d582cb5752dbeab85e233603a">z</a>; </div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;};</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_r_o_i.xhtml">  474</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_r_o_i.xhtml">ROI</a></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;{</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_r_o_i.xhtml#aa23d9b69995e7138751a71caf1d46429">  476</a></span>&#160;    <a class="code" href="structarm__compute_1_1_rectangle.xhtml">Rectangle</a> <a class="code" href="structarm__compute_1_1_r_o_i.xhtml#aa23d9b69995e7138751a71caf1d46429">rect</a>;      </div><div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_r_o_i.xhtml#a2df12a0d285598144f82ecd911af30e9">  477</a></span>&#160;    uint16_t  <a class="code" href="structarm__compute_1_1_r_o_i.xhtml#a2df12a0d285598144f82ecd911af30e9">batch_idx</a>; </div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;};</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">  481</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">Channel</a></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;{</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</a>, </div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9c5959e6f08f10d0edbadf5be1f33c53">C0</a>,      </div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa1a2ddc2db4693cfd16d534cde5572cc1">C1</a>,      </div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aaf1a543f5a2c5d49bc5dde298fcf716e4">C2</a>,      </div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa3abe124ecc82bf2c2e22e6058f38c50c">C3</a>,      </div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aae1e1d3d40573127e9ee0480caf1283d6">R</a>,       </div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aadfcf28d0734569a6a693bc8194de62bf">G</a>,       </div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">B</a>,       </div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">A</a>,       </div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0">Y</a>,       </div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>,       </div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce">V</a>        </div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;};</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02">  498</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02">MatrixPattern</a></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;{</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02ae657cce1913c857166b0475f18668ef5">BOX</a>,   </div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a04dd53a8e6c2306e9bbf944c1d6047f2">CROSS</a>, </div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a290d4b81f4e2b47d86fd1b0170e9aab7">DISK</a>,  </div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a03570470bad94692ce93e32700d2e1cb">OTHER</a>  </div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;};</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858">  507</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858">NonLinearFilterFunction</a> : unsigned</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;{</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a8ab0c3a037e882577dec378985477074">MEDIAN</a> = 0, </div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">MIN</a>    = 1, </div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">MAX</a>    = 2, </div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;};</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">  515</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;{</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">SUM_SQUARE</a>, </div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">SUM</a>,        </div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;};</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">  522</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;{</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caaca2475ab7883ebb9f125241141896190">IN_MAP_1D</a>, </div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">IN_MAP_2D</a>, </div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">CROSS_MAP</a>  </div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;};</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">  530</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;{</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3a80485e54c7a3c93a0f74637c6b918ce5">L2_NORM</a>    = 1, </div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">L2HYS_NORM</a> = 2, </div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3a68616ae21712c00705b962f4eff06eaa">L1_NORM</a>    = 3  </div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;};</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml">  543</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_detection_window.xhtml">DetectionWindow</a></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div><div class="line"><a name="l00545"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#a4dde988b1b2adba65ae3efa69f65d960">  545</a></span>&#160;    uint16_t x{ 0 };         </div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#ab0580f504a7428539be299fa71565f30">  546</a></span>&#160;    uint16_t y{ 0 };         </div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#ad0eab1042455a2067c812ab8071d5376">  547</a></span>&#160;    uint16_t width{ 0 };     </div><div class="line"><a name="l00548"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">  548</a></span>&#160;    uint16_t height{ 0 };    </div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#ae5c4999829285e20d3b491807fa46fd1">  549</a></span>&#160;    uint16_t idx_class{ 0 }; </div><div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_detection_window.xhtml#a8c5cd9b525ee73a24b1d9d8e34982d1c">  550</a></span>&#160;    <span class="keywordtype">float</span>    score{ 0.f };   </div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;};</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">  556</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;{</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">FLOOR</a>, </div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">CEIL</a>   </div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;};</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">  563</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;{</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">MAX</a>, </div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">AVG</a>, </div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a7e6aa2d53f6ee2b1a34b017fa403cb76">L2</a>   </div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;};</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml">  571</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;{</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00582"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#aebf88ce57c0ad3d796ca66edb8a43e1a">  582</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#aebf88ce57c0ad3d796ca66edb8a43e1a">PadStrideInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_x = 1, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_y = 1,</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_x = 0, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_y = 0,</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                  <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a> = <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        : _stride(std::make_pair(stride_x, stride_y)),</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;          _pad_left(pad_x),</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;          _pad_top(pad_y),</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;          _pad_right(pad_x),</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;          _pad_bottom(pad_y),</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;          _round_type(<a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>)</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    }</div><div class="line"><a name="l00603"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#ad71c061b948d43c30e489e15fee6dc8b">  603</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ad71c061b948d43c30e489e15fee6dc8b">PadStrideInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_x, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stride_y,</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_left, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_right,</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_top, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pad_bottom,</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                  <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> <a class="code" href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">round</a>)</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        : _stride(std::make_pair(stride_x, stride_y)),</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;          _pad_left(pad_left),</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;          _pad_top(pad_top),</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;          _pad_right(pad_right),</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;          _pad_bottom(pad_bottom),</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;          _round_type(round)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    }</div><div class="line"><a name="l00619"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#ad2f1ea50a9e215ad8ef612a724a4866a">  619</a></span>&#160;    std::pair&lt;unsigned int, unsigned int&gt; <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ad2f1ea50a9e215ad8ef612a724a4866a">stride</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="keywordflow">return</span> _stride;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    }</div><div class="line"><a name="l00627"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#ab7c9c24c109a9e571e9cd8ab3fc502ed">  627</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ab7c9c24c109a9e571e9cd8ab3fc502ed">padding_is_symmetric</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">return</span> (_pad_left == _pad_right) &amp;&amp; (_pad_top == _pad_bottom);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div><div class="line"><a name="l00637"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a9a9d6d62752247f733a3466b484e08b9">  637</a></span>&#160;    std::pair&lt;unsigned int, unsigned int&gt; <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a9a9d6d62752247f733a3466b484e08b9">pad</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="comment">//this accessor should be used only when padding is symmetric</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!padding_is_symmetric());</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        <span class="keywordflow">return</span> std::make_pair(_pad_left, _pad_top);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    }</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a377481844bf0459e5ef871cc72d72496">  645</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a377481844bf0459e5ef871cc72d72496">pad_left</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        <span class="keywordflow">return</span> _pad_left;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    }</div><div class="line"><a name="l00650"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#afaaf8f4d7fa22fe9a3f4ff41567cd886">  650</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#afaaf8f4d7fa22fe9a3f4ff41567cd886">pad_right</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        <span class="keywordflow">return</span> _pad_right;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    }</div><div class="line"><a name="l00655"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a2a86593e913939d9eadad26c2df65138">  655</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a2a86593e913939d9eadad26c2df65138">pad_top</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keywordflow">return</span> _pad_top;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    }</div><div class="line"><a name="l00660"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a2d3a66a044dcf4217d97f6b47319d5f1">  660</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a2d3a66a044dcf4217d97f6b47319d5f1">pad_bottom</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="keywordflow">return</span> _pad_bottom;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    }</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a3d7de69b5d597f77362f3279c6ec1c44">  666</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a3d7de69b5d597f77362f3279c6ec1c44">round</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        <span class="keywordflow">return</span> _round_type;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pad_stride_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">  672</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">has_padding</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="keywordflow">return</span> (_pad_left != 0 || _pad_top != 0 || _pad_right != 0 || _pad_bottom != 0);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    }</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    std::pair&lt;unsigned int, unsigned int&gt; _stride;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pad_left;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pad_top;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pad_right;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pad_bottom;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> _round_type;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;};</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml">  688</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;{</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00692"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a21d59f266df349880afd6143469c8f29">  692</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a21d59f266df349880afd6143469c8f29">PoolingLayerInfo</a>()</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        : _pool_type(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a>::<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">MAX</a>), _pool_size(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>()), _pad_stride_info(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>()), _exclude_padding(false), _is_global_pooling(false)</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    {</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div><div class="line"><a name="l00705"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#aa25aa7643090ded846262cc2edfe8637">  705</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#aa25aa7643090ded846262cc2edfe8637">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a>   pool_type,</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  pool_size,</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> pad_stride_info = <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(),</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                              <span class="keywordtype">bool</span>          exclude_padding = <span class="keyword">false</span>)</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        : _pool_type(pool_type), _pool_size(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(pool_size, pool_size)), _pad_stride_info(pad_stride_info), _exclude_padding(exclude_padding), _is_global_pooling(false)</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    }</div><div class="line"><a name="l00721"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a848fab9628f7dc2a187c03610fc9fa01">  721</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a848fab9628f7dc2a187c03610fc9fa01">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a>   pool_type,</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                              <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        pool_size,</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                              <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> pad_stride_info = <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(),</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                              <span class="keywordtype">bool</span>          exclude_padding = <span class="keyword">false</span>)</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        : _pool_type(pool_type), _pool_size(pool_size), _pad_stride_info(pad_stride_info), _exclude_padding(exclude_padding), _is_global_pooling(false)</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    {</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    }</div><div class="line"><a name="l00734"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a825657ba220662927b90d1ca2c19fbd7">  734</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a825657ba220662927b90d1ca2c19fbd7">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a> pool_type)</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        : _pool_type(pool_type), _pool_size(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>()), _pad_stride_info(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0)), _exclude_padding(false), _is_global_pooling(true)</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    {</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    }</div><div class="line"><a name="l00739"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a7e8311a3a774bceb8efae1d5c8c8aeff">  739</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a7e8311a3a774bceb8efae1d5c8c8aeff">pool_type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        <span class="keywordflow">return</span> _pool_type;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    }</div><div class="line"><a name="l00744"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a8ec75d4a941a9762431094479527f954">  744</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a8ec75d4a941a9762431094479527f954">pool_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keywordflow">return</span> _pool_size;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    }</div><div class="line"><a name="l00749"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a3c82dfc72060f59eccf0bd096b81c5d5">  749</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a3c82dfc72060f59eccf0bd096b81c5d5">pad_stride_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        <span class="keywordflow">return</span> _pad_stride_info;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    }</div><div class="line"><a name="l00754"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a078456fcb5fe2091665e52e650cd46c6">  754</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a078456fcb5fe2091665e52e650cd46c6">exclude_padding</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        <span class="keywordflow">return</span> _exclude_padding;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    }</div><div class="line"><a name="l00759"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pooling_layer_info.xhtml#a658e806b42869826f29b9288505da774">  759</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_pooling_layer_info.xhtml#a658e806b42869826f29b9288505da774">is_global_pooling</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;        <span class="keywordflow">return</span> _is_global_pooling;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    }</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">PoolingType</a>   _pool_type;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        _pool_size;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> _pad_stride_info;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keywordtype">bool</span>          _exclude_padding;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <span class="keywordtype">bool</span>          _is_global_pooling;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;};</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">  773</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">ROIPoolingLayerInfo</a></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;{</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00782"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#aeb18f7aaaa12486cd2cf6499c19059db">  782</a></span>&#160;    <a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#aeb18f7aaaa12486cd2cf6499c19059db">ROIPoolingLayerInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pooled_width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pooled_height, <span class="keywordtype">float</span> spatial_scale)</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        : _pooled_width(pooled_width), _pooled_height(pooled_height), _spatial_scale(spatial_scale)</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    }</div><div class="line"><a name="l00787"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#ae889c3657ba9390ac5ecd268e8a19720">  787</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#ae889c3657ba9390ac5ecd268e8a19720">pooled_width</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">return</span> _pooled_width;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    }</div><div class="line"><a name="l00792"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a5ef65c82efd18c18e7f23585364e3fa9">  792</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a5ef65c82efd18c18e7f23585364e3fa9">pooled_height</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        <span class="keywordflow">return</span> _pooled_height;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    }</div><div class="line"><a name="l00797"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a13a5239b80c3170a975b369f288cbd91">  797</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a13a5239b80c3170a975b369f288cbd91">spatial_scale</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <span class="keywordflow">return</span> _spatial_scale;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    }</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pooled_width;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _pooled_height;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordtype">float</span>        _spatial_scale;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;};</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml">  809</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;{</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00813"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">  813</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationFunction</a></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    {</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        LOGISTIC,        </div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        TANH,            </div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        RELU,            </div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        BOUNDED_RELU,    </div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        LU_BOUNDED_RELU, </div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        LEAKY_RELU,      </div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        SOFT_RELU,       </div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        ABS,             </div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;        SQUARE,          </div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        SQRT,            </div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        LINEAR           </div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    };</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00836"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#af56abff12f887fddfa02e0bc18a318a1">  836</a></span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af56abff12f887fddfa02e0bc18a318a1">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationFunction</a> f, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a> = 0.0f, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a> = 0.0f)</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        : _act(f), _a(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>), _b(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>), _enabled(true)</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    {</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    }</div><div class="line"><a name="l00841"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#a63e05ce4946dd9807c005c1619fa337a">  841</a></span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationFunction</a> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a63e05ce4946dd9807c005c1619fa337a">activation</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        <span class="keywordflow">return</span> _act;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    }</div><div class="line"><a name="l00846"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#a55beddf67f69fc5312961b1b112560fb">  846</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a55beddf67f69fc5312961b1b112560fb">a</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="keywordflow">return</span> _a;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    }</div><div class="line"><a name="l00851"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#af28869d53fbe340640044d672b29ba7c">  851</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af28869d53fbe340640044d672b29ba7c">b</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        <span class="keywordflow">return</span> _b;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    }</div><div class="line"><a name="l00856"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_activation_layer_info.xhtml#a1d79980f25d38aba3d6777d0afe544f3">  856</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a1d79980f25d38aba3d6777d0afe544f3">enabled</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <span class="keywordflow">return</span> _enabled;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    }</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationFunction</a> _act     = { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a> };</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    <span class="keywordtype">float</span>              _a       = {};</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="keywordtype">float</span>              _b       = {};</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <span class="keywordtype">bool</span>               _enabled = { <span class="keyword">false</span> };</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;};</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml">  869</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a></div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;{</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00882"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a305c2145d26b998641402a9fec76f0bb">  882</a></span>&#160;    <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a305c2145d26b998641402a9fec76f0bb">NormalizationLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a> type, uint32_t norm_size = 5, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a> = 0.0001f, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a> = 0.5f, <span class="keywordtype">float</span> kappa = 1.f, <span class="keywordtype">bool</span> is_scaled = <span class="keyword">true</span>)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        : _type(type), _norm_size(norm_size), _alpha(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>), _beta(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>), _kappa(kappa), _is_scaled(is_scaled)</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    {</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    }</div><div class="line"><a name="l00887"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a39f6445d0b790034f0d8fac36f2eb7f5">  887</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a39f6445d0b790034f0d8fac36f2eb7f5">type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;        <span class="keywordflow">return</span> _type;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    }</div><div class="line"><a name="l00892"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a0549be3702c05e6ec1ada69a6d08e349">  892</a></span>&#160;    uint32_t <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a0549be3702c05e6ec1ada69a6d08e349">norm_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        <span class="keywordflow">return</span> _norm_size;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    }</div><div class="line"><a name="l00897"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a4ee7f04c477d0e6a2a3609c24a8815b8">  897</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a4ee7f04c477d0e6a2a3609c24a8815b8">alpha</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        <span class="keywordflow">return</span> _alpha;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    }</div><div class="line"><a name="l00902"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a55fe6a30749e41ce31c2bb969a5aa25e">  902</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a55fe6a30749e41ce31c2bb969a5aa25e">beta</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        <span class="keywordflow">return</span> _beta;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    }</div><div class="line"><a name="l00907"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a4df91dc0be2437a7d1bfd6d8df72baa8">  907</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a4df91dc0be2437a7d1bfd6d8df72baa8">kappa</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;        <span class="keywordflow">return</span> _kappa;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    }</div><div class="line"><a name="l00912"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#ada140e474f12d6849dae228b32dac8b7">  912</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#ada140e474f12d6849dae228b32dac8b7">is_cross_map</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="keywordflow">return</span> _type == <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    }</div><div class="line"><a name="l00917"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a15441073dba4931426c1b7730d8bd67b">  917</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a15441073dba4931426c1b7730d8bd67b">is_in_map</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        <span class="keywordflow">return</span> !is_cross_map();</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    }</div><div class="line"><a name="l00928"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_normalization_layer_info.xhtml#a6f541aab23799f6c61d9c8d7ca9fe15c">  928</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#a6f541aab23799f6c61d9c8d7ca9fe15c">scale_coeff</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        <span class="keyword">const</span> uint32_t size = (_type == <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">NormType::IN_MAP_2D</a>) ? _norm_size * _norm_size : _norm_size;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        <span class="keywordflow">return</span> (_is_scaled) ? (_alpha / size) : _alpha;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    }</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">NormType</a> _type;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    uint32_t _norm_size;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="keywordtype">float</span>    _alpha;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    <span class="keywordtype">float</span>    _beta;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    <span class="keywordtype">float</span>    _kappa;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="keywordtype">bool</span>     _is_scaled;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;};</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div><div class="line"><a name="l00944"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml">  944</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;{</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00948"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml#a8bf46ce65f0f9cc0210774dfc60b4e2f">  948</a></span>&#160;    <a class="code" href="classarm__compute_1_1_weights_info.xhtml#a8bf46ce65f0f9cc0210774dfc60b4e2f">WeightsInfo</a>()</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;        : _are_reshaped(false), _kernel_width(0), _kernel_height(0), _num_kernels(0)</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    {</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    }</div><div class="line"><a name="l00959"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml#a7af92b099af871d8143ded96ce4f0b28">  959</a></span>&#160;    <a class="code" href="classarm__compute_1_1_weights_info.xhtml#a7af92b099af871d8143ded96ce4f0b28">WeightsInfo</a>(<span class="keywordtype">bool</span> are_reshaped, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_height, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_kernels)</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;        : _are_reshaped(are_reshaped), _kernel_width(kernel_width), _kernel_height(kernel_height), _num_kernels(num_kernels)</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    {</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    }</div><div class="line"><a name="l00967"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml#a5bfccf416ebb3979b4dca9a6ff6be5e0">  967</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_weights_info.xhtml#a5bfccf416ebb3979b4dca9a6ff6be5e0">are_reshaped</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        <span class="keywordflow">return</span> _are_reshaped;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    };</div><div class="line"><a name="l00975"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml#ae56950468898173b9466ab93b843c967">  975</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_weights_info.xhtml#ae56950468898173b9466ab93b843c967">num_kernels</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <span class="keywordflow">return</span> _num_kernels;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    };</div><div class="line"><a name="l00983"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_weights_info.xhtml#a6da544d7a9bf5fe4114e55ddd198dbcc">  983</a></span>&#160;    std::pair&lt;unsigned int, unsigned int&gt; <a class="code" href="classarm__compute_1_1_weights_info.xhtml#a6da544d7a9bf5fe4114e55ddd198dbcc">kernel_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;        <span class="keywordflow">return</span> std::make_pair(_kernel_width, _kernel_height);</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    }</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         _are_reshaped;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _kernel_width;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _kernel_height;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _num_kernels;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;};</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l01004"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml"> 1004</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> final</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;{</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l01008"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aee6f5a043173c4d51c11a54db8e0f519"> 1008</a></span>&#160;    <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aee6f5a043173c4d51c11a54db8e0f519">GEMMReshapeInfo</a>()</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        : _m(1), _n(1), _k(1), _mult_transpose1xW_width(1), _mult_interleave4x4_height(1)</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    {</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    }</div><div class="line"><a name="l01020"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#af921bf25616f9504b1da5f43d5023416"> 1020</a></span>&#160;    <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#af921bf25616f9504b1da5f43d5023416">GEMMReshapeInfo</a>(<span class="keywordtype">int</span> m, <span class="keywordtype">int</span> n, <span class="keywordtype">int</span> k, <span class="keywordtype">int</span> mult_transpose1xW_width = 1, <span class="keywordtype">int</span> mult_interleave4x4_height = 1)</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;        : _m(m), _n(n), _k(k), _mult_transpose1xW_width(mult_transpose1xW_width), _mult_interleave4x4_height(mult_interleave4x4_height)</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    {</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    }</div><div class="line"><a name="l01028"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a38bef5b3852701d3b1958a8ca4f96683"> 1028</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a38bef5b3852701d3b1958a8ca4f96683">m</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;        <span class="keywordflow">return</span> _m;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    }</div><div class="line"><a name="l01036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a327d17199b3bb3d4ab67b819a5553510"> 1036</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a327d17199b3bb3d4ab67b819a5553510">n</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;        <span class="keywordflow">return</span> _n;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    }</div><div class="line"><a name="l01044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a3f077e40406c116e6e61e54f17d9b8be"> 1044</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a3f077e40406c116e6e61e54f17d9b8be">k</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;        <span class="keywordflow">return</span> _k;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    }</div><div class="line"><a name="l01052"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aa14924f4569745bea117b3f506cf734d"> 1052</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aa14924f4569745bea117b3f506cf734d">mult_transpose1xW_width</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        <span class="keywordflow">return</span> _mult_transpose1xW_width;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    }</div><div class="line"><a name="l01060"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a2c08b51c2f39ba68a69d654c507aa48f"> 1060</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a2c08b51c2f39ba68a69d654c507aa48f">mult_interleave4x4_height</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        <span class="keywordflow">return</span> _mult_interleave4x4_height;</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    }</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> _m;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> _n;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> _k;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> _mult_transpose1xW_width;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> _mult_interleave4x4_height;</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;};</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml"> 1078</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;{</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l01082"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae70403792b9c2d7bdb0c57b5258b2efd"> 1082</a></span>&#160;    <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae70403792b9c2d7bdb0c57b5258b2efd">GEMMInfo</a>()</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;        : _is_a_reshaped(false), _is_b_reshaped(false), _reshape_b_only_on_first_run(false), _reshape_info()</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    {</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    }</div><div class="line"><a name="l01093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a960180f919dcfb9cc5b29e7153310eac"> 1093</a></span>&#160;    <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a960180f919dcfb9cc5b29e7153310eac">GEMMInfo</a>(<span class="keywordtype">bool</span> is_a_reshaped, <span class="keywordtype">bool</span> is_b_reshaped, <span class="keywordtype">bool</span> reshape_b_only_on_first_run, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;reshape_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>())</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;        : _is_a_reshaped(is_a_reshaped), _is_b_reshaped(is_b_reshaped), _reshape_b_only_on_first_run(reshape_b_only_on_first_run), _reshape_info(reshape_info)</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    {</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    }</div><div class="line"><a name="l01101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4af837f04d6447739556d457c959d1cc"> 1101</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4af837f04d6447739556d457c959d1cc">is_a_reshaped</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;        <span class="keywordflow">return</span> _is_a_reshaped;</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    };</div><div class="line"><a name="l01109"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8bac49cf484780f3627f9df55245481e"> 1109</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8bac49cf484780f3627f9df55245481e">is_b_reshaped</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;        <span class="keywordflow">return</span> _is_b_reshaped;</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    };</div><div class="line"><a name="l01119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8809341538b465964b81970388fc9ebc"> 1119</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8809341538b465964b81970388fc9ebc">reshape_b_only_on_first_run</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;        <span class="keywordflow">return</span> _reshape_b_only_on_first_run;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    };</div><div class="line"><a name="l01127"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a3d9df22cc94288637e7b8c59c425818a"> 1127</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a3d9df22cc94288637e7b8c59c425818a">reshape_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;        <span class="keywordflow">return</span> _reshape_info;</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    }</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>      _is_a_reshaped;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>      _is_b_reshaped;</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>      _reshape_b_only_on_first_run;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> _reshape_info;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;};</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;</div><div class="line"><a name="l01140"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml"> 1140</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;{</div><div class="line"><a name="l01150"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#af8cfb6ab1e028484d875995bf6c224e3"> 1150</a></span>&#160;    <a class="code" href="structarm__compute_1_1_winograd_info.xhtml#af8cfb6ab1e028484d875995bf6c224e3">WinogradInfo</a>(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> output_tile_sz, <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_sz, <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> input_dims, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">conv_info</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> data_layout)</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;        : output_tile_size(output_tile_sz), kernel_size(kernel_sz), input_dimensions(input_dims), convolution_info(conv_info), output_data_layout(data_layout)</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    {</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    }</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;</div><div class="line"><a name="l01155"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#a5cd6561e9acc0cf9ba11bc2f51ec7a33"> 1155</a></span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        output_tile_size{};                     </div><div class="line"><a name="l01156"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#aca57076ead1d06c47d3d32f4302b14ac"> 1156</a></span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        kernel_size{};                          </div><div class="line"><a name="l01157"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#af9ef316b2c98c946b47cd18f1319b93f"> 1157</a></span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        input_dimensions{};                     </div><div class="line"><a name="l01158"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#ad99e40b120f0a9e96821c08bf60a84f2"> 1158</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> convolution_info{};                     </div><div class="line"><a name="l01159"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_winograd_info.xhtml#a0bc60aaf23b2d3ed3b344576a708e84e"> 1159</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>    output_data_layout{ <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a> }; </div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;};</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;</div><div class="line"><a name="l01163"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml"> 1163</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a></div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;{</div><div class="line"><a name="l01166"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6"> 1166</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6">PrecisionType</a></div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    {</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;        Default, </div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        Custom,  </div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;        Full     </div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;    };</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;</div><div class="line"><a name="l01174"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0"> 1174</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0">PrintRegion</a></div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    {</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;        <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>, </div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;        NoPadding,   </div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;        Full         </div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    };</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01190"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#afc22bda96f8024656055390cc5f780f0"> 1190</a></span>&#160;    <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#afc22bda96f8024656055390cc5f780f0">IOFormatInfo</a>(<a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0">PrintRegion</a>   print_region   = PrintRegion::ValidRegion,</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;                 <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6">PrecisionType</a> precision_type = PrecisionType::Default,</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  precision      = 10,</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;                 <span class="keywordtype">bool</span>          align_columns  = <span class="keyword">true</span>,</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;                 std::string   element_delim  = <span class="stringliteral">&quot; &quot;</span>,</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;                 std::string   row_delim      = <span class="stringliteral">&quot;\n&quot;</span>)</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        : print_region(print_region),</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;          precision_type(precision_type),</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;          precision(precision),</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;          element_delim(element_delim),</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;          row_delim(row_delim),</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;          align_columns(align_columns)</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    {</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    }</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;</div><div class="line"><a name="l01206"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#a3e3b8af91d2afbfeed14560f2070fd50"> 1206</a></span>&#160;    <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0">PrintRegion</a> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a3e3b8af91d2afbfeed14560f2070fd50">print_region</a>;</div><div class="line"><a name="l01208"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#ad53ff460a7430f45c22b27aad707e41f"> 1208</a></span>&#160;    <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6">PrecisionType</a> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#ad53ff460a7430f45c22b27aad707e41f">precision_type</a>;</div><div class="line"><a name="l01210"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#a1fba9343eade93326cb985cfcb6de487"> 1210</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a1fba9343eade93326cb985cfcb6de487">precision</a>;</div><div class="line"><a name="l01212"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#a38c5b617ead74af00cc7957553bd0d66"> 1212</a></span>&#160;    std::string <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a38c5b617ead74af00cc7957553bd0d66">element_delim</a>;</div><div class="line"><a name="l01214"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#ab1a3e6cb2768124a6853f52bd0e10596"> 1214</a></span>&#160;    std::string <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#ab1a3e6cb2768124a6853f52bd0e10596">row_delim</a>;</div><div class="line"><a name="l01216"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_i_o_format_info.xhtml#a1d81fe110d5dcac79dd73a532015bb94"> 1216</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_i_o_format_info.xhtml#a1d81fe110d5dcac79dd73a532015bb94">align_columns</a>;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;};</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d"> 1220</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a></div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;{</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">GEMM</a>,    </div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">DIRECT</a>,  </div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">WINOGRAD</a> </div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;};</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_TYPES_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">arm_compute::BorderMode</a></div><div class="ttdeci">BorderMode</div><div class="ttdoc">Methods available to handle borders. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00283">Types.h:283</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a1de12d43d932fc3b1e05ff15e85212bf"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a1de12d43d932fc3b1e05ff15e85212bf">arm_compute::ValidRegion::ValidRegion</a></div><div class="ttdeci">ValidRegion(const Coordinates &amp;an_anchor, const TensorShape &amp;a_shape, size_t num_dimensions)</div><div class="ttdoc">Constructor for a valid region with specified number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00244">Types.h:244</a></div></div>
<div class="ttc" id="structarm__compute_1_1_rectangle_xhtml"><div class="ttname"><a href="structarm__compute_1_1_rectangle.xhtml">arm_compute::Rectangle</a></div><div class="ttdoc">Rectangle type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00450">Types.h:450</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_ad53ff460a7430f45c22b27aad707e41f"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#ad53ff460a7430f45c22b27aad707e41f">arm_compute::IOFormatInfo::precision_type</a></div><div class="ttdeci">PrecisionType precision_type</div><div class="ttdoc">Floating point precision type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01208">Types.h:1208</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_a2c08b51c2f39ba68a69d654c507aa48f"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a2c08b51c2f39ba68a69d654c507aa48f">arm_compute::GEMMReshapeInfo::mult_interleave4x4_height</a></div><div class="ttdeci">int mult_interleave4x4_height() const </div><div class="ttdoc">Multiplication factor for the height of the 4x4 interleaved block. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01060">Types.h:1060</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2ebcd5423d5fba468e7debd2e1aabe91"><div class="ttname"><a href="namespacearm__compute.xhtml#a2ebcd5423d5fba468e7debd2e1aabe91">arm_compute::SCALE_PYRAMID_ORB</a></div><div class="ttdeci">constexpr float SCALE_PYRAMID_ORB</div><div class="ttdoc">Constant value used to indicate a ORB scaled pyramid. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00107">Types.h:107</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates3_d_xhtml"><div class="ttname"><a href="structarm__compute_1_1_coordinates3_d.xhtml">arm_compute::Coordinates3D</a></div><div class="ttdoc">Coordinate type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00466">Types.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ae70403792b9c2d7bdb0c57b5258b2efd"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae70403792b9c2d7bdb0c57b5258b2efd">arm_compute::GEMMInfo::GEMMInfo</a></div><div class="ttdeci">GEMMInfo()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01082">Types.h:1082</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_a0d7963ab10dad56e241cf6bb66625856"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#a0d7963ab10dad56e241cf6bb66625856">arm_compute::QuantizationInfo::quantize</a></div><div class="ttdeci">qasymm8_t quantize(float value, RoundingPolicy rounding_policy) const </div><div class="ttdoc">Quantizes a value using the scale/offset in this QuantizationInfo. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00177">Types.h:177</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_ae658e258947a14e0d45975c531e03540"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#ae658e258947a14e0d45975c531e03540">arm_compute::ValidRegion::set</a></div><div class="ttdeci">ValidRegion &amp; set(size_t dimension, int start, size_t size)</div><div class="ttdoc">Accessor to set the value of anchor and shape for one of the dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00271">Types.h:271</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af9876aedd664cac0ddeacddb40cb71cd"><div class="ttname"><a href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">arm_compute::SCALE_PYRAMID_HALF</a></div><div class="ttdeci">constexpr float SCALE_PYRAMID_HALF</div><div class="ttdoc">Constant value used to indicate a half-scale pyramid. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00104">Types.h:104</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a3fdd42ea34070a54e696b3adc28c4be3"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">arm_compute::BorderSize::top</a></div><div class="ttdeci">unsigned int top</div><div class="ttdoc">top of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00371">Types.h:371</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">arm_compute::HOGNormType::L2HYS_NORM</a></div><div class="ttdoc">L2-norm followed by clipping. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa7fc56270e7a70fa81a5935b72eacbe29">arm_compute::Channel::A</a></div><div class="ttdoc">Alpha channel. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2d8a00f1d80a53ce8f75fa929c873202a856d68c521c4c85363f54d95a33b7532"><div class="ttname"><a href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202a856d68c521c4c85363f54d95a33b7532">arm_compute::BilinearInterpolation::BILINEAR_OLD_NEW</a></div><div class="ttdoc">Old-new method. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_adffbf97e7b8b64e7cf32f0254cddf3c4"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">arm_compute::BorderSize::empty</a></div><div class="ttdeci">constexpr bool empty() const </div><div class="ttdoc">Check if the entire border is zero. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00318">Types.h:318</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">arm_compute::Format::UYVY422</a></div><div class="ttdoc">A single plane of 32-bit macro pixel of U0, Y0, V0, Y1 byte. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_af921bf25616f9504b1da5f43d5023416"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#af921bf25616f9504b1da5f43d5023416">arm_compute::GEMMReshapeInfo::GEMMReshapeInfo</a></div><div class="ttdeci">GEMMReshapeInfo(int m, int n, int k, int mult_transpose1xW_width=1, int mult_interleave4x4_height=1)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01020">Types.h:1020</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a48d877702a2957f5a932c43a357866f9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a48d877702a2957f5a932c43a357866f9">arm_compute::DataType::QS16</a></div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">arm_compute::InterpolationPolicy</a></div><div class="ttdeci">InterpolationPolicy</div><div class="ttdoc">Interpolation method. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00388">Types.h:388</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00133">Convolution.cpp:133</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_aabcf39e3917f842dbc5fbb0d802f24d5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#aabcf39e3917f842dbc5fbb0d802f24d5">arm_compute::test::fixed_point_arithmetic::detail::min</a></div><div class="ttdeci">fixed_point&lt; T &gt; min(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00897">FixedPoint.h:897</a></div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml_a5bfccf416ebb3979b4dca9a6ff6be5e0"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml#a5bfccf416ebb3979b4dca9a6ff6be5e0">arm_compute::WeightsInfo::are_reshaped</a></div><div class="ttdeci">bool are_reshaped() const </div><div class="ttdoc">Flag which specifies if the weights tensor has been reshaped. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00967">Types.h:967</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa1a2ddc2db4693cfd16d534cde5572cc1"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa1a2ddc2db4693cfd16d534cde5572cc1">arm_compute::Channel::C1</a></div><div class="ttdoc">Second channel (used by formats with unknown channel types). </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab146b9cbab6e73e7588b240dc709fe01"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">arm_compute::test::validation::beta</a></div><div class="ttdeci">beta</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a8ec75d4a941a9762431094479527f954"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a8ec75d4a941a9762431094479527f954">arm_compute::PoolingLayerInfo::pool_size</a></div><div class="ttdeci">const Size2D &amp; pool_size() const </div><div class="ttdoc">Get the pooling size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00744">Types.h:744</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates3_d_xhtml_aae8a40a17c0be29c1f06ca6b4f9e2235"><div class="ttname"><a href="structarm__compute_1_1_coordinates3_d.xhtml#aae8a40a17c0be29c1f06ca6b4f9e2235">arm_compute::Coordinates3D::x</a></div><div class="ttdeci">uint32_t x</div><div class="ttdoc">X coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00468">Types.h:468</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a11cde4d3551db3f9498d339a67189543"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a11cde4d3551db3f9498d339a67189543">arm_compute::DataType::QS8</a></div><div class="ttdoc">quantized, symmetric fixed-point 8-bit number </div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a848fab9628f7dc2a187c03610fc9fa01"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a848fab9628f7dc2a187c03610fc9fa01">arm_compute::PoolingLayerInfo::PoolingLayerInfo</a></div><div class="ttdeci">PoolingLayerInfo(PoolingType pool_type, Size2D pool_size, PadStrideInfo pad_stride_info=PadStrideInfo(), bool exclude_padding=false)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00721">Types.h:721</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7b3ec6413f000b02fdb4e39a951d9f8aac2f1be73bf576190d1f42bdaf5162ae8"><div class="ttname"><a href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8aac2f1be73bf576190d1f42bdaf5162ae8">arm_compute::MagnitudeType::L1NORM</a></div><div class="ttdoc">L1 normalization type. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_a3f077e40406c116e6e61e54f17d9b8be"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a3f077e40406c116e6e61e54f17d9b8be">arm_compute::GEMMReshapeInfo::k</a></div><div class="ttdeci">int k() const </div><div class="ttdoc">Number of matrix A columns or matrix B rows. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01044">Types.h:1044</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">arm_compute::DimensionRoundingType::CEIL</a></div><div class="ttdoc">Ceil rounding. </div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a1fcd64682b37ed3c2098d0094ce788d8"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">arm_compute::ValidRegion::shape</a></div><div class="ttdeci">TensorShape shape</div><div class="ttdoc">Shape of the valid region. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00279">Types.h:279</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">CLTensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00121">GEMM.cpp:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1_winograd_info_xhtml_af8cfb6ab1e028484d875995bf6c224e3"><div class="ttname"><a href="structarm__compute_1_1_winograd_info.xhtml#af8cfb6ab1e028484d875995bf6c224e3">arm_compute::WinogradInfo::WinogradInfo</a></div><div class="ttdeci">WinogradInfo(Size2D output_tile_sz, Size2D kernel_sz, Size2D input_dims, PadStrideInfo conv_info, DataLayout data_layout)</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01150">Types.h:1150</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">arm_compute::PhaseType::UNSIGNED</a></div><div class="ttdoc">Angle range: [0, 180]. </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a9a9d6d62752247f733a3466b484e08b9"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a9a9d6d62752247f733a3466b484e08b9">arm_compute::PadStrideInfo::pad</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; pad() const </div><div class="ttdoc">Get the padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00637">Types.h:637</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45b"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">arm_compute::ReductionOperation</a></div><div class="ttdeci">ReductionOperation</div><div class="ttdoc">Available reduction operations. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00515">Types.h:515</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00291">Types.h:291</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_af56abff12f887fddfa02e0bc18a318a1"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af56abff12f887fddfa02e0bc18a318a1">arm_compute::ActivationLayerInfo::ActivationLayerInfo</a></div><div class="ttdeci">ActivationLayerInfo(ActivationFunction f, float a=0.0f, float b=0.0f)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00836">Types.h:836</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72a6898b46a1cde8a1572e2722c44c5ab07"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72a6898b46a1cde8a1572e2722c44c5ab07">arm_compute::PhaseType::SIGNED</a></div><div class="ttdoc">Angle range: [0, 360]. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">arm_compute::PhaseType</a></div><div class="ttdeci">PhaseType</div><div class="ttdoc">Phase calculation type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00428">Types.h:428</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce">arm_compute::Channel::V</a></div><div class="ttdoc">Cr/V/Value channel. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">arm_compute::DataLayoutDimension</a></div><div class="ttdeci">DataLayoutDimension</div><div class="ttdoc">Supported tensor data layout dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00118">Types.h:118</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::ReductionOperation::SUM_SQUARE</a></div><div class="ttdoc">Sum of squares. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a3d9df22cc94288637e7b8c59c425818a"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a3d9df22cc94288637e7b8c59c425818a">arm_compute::GEMMInfo::reshape_info</a></div><div class="ttdeci">const GEMMReshapeInfo &amp; reshape_info() const </div><div class="ttdoc">GEMMReshapeInfo object which stores the necessary information to understand how the matrix A and matr...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01127">Types.h:1127</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a8bac49cf484780f3627f9df55245481e"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8bac49cf484780f3627f9df55245481e">arm_compute::GEMMInfo::is_b_reshaped</a></div><div class="ttdeci">bool is_b_reshaped() const </div><div class="ttdoc">Flag which specifies if the matrix B has been reshaped. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01109">Types.h:1109</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9d5ed678fe57bcca610140957afab571">arm_compute::Channel::B</a></div><div class="ttdoc">Blue channel. </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a15441073dba4931426c1b7730d8bd67b"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a15441073dba4931426c1b7730d8bd67b">arm_compute::NormalizationLayerInfo::is_in_map</a></div><div class="ttdeci">bool is_in_map() const </div><div class="ttdoc">Check if normalization is not cross map. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00917">Types.h:917</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afdda916edc7502967bbec17ea3c06c02a290d4b81f4e2b47d86fd1b0170e9aab7"><div class="ttname"><a href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a290d4b81f4e2b47d86fd1b0170e9aab7">arm_compute::MatrixPattern::DISK</a></div><div class="ttdoc">Disk pattern matrix. </div></div>
<div class="ttc" id="structarm__compute_1_1_winograd_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_winograd_info.xhtml">arm_compute::WinogradInfo</a></div><div class="ttdoc">Winograd information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01140">Types.h:1140</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08c1503414e23f5dd10ff83492685453a5a2e12b6baf7ad91a2ce32f19c36bd1b"><div class="ttname"><a href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a5a2e12b6baf7ad91a2ce32f19c36bd1b">arm_compute::Termination::TERM_CRITERIA_EPSILON</a></div><div class="ttdoc">Terminate when within epsilon of a threshold. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">arm_compute::GEMMReshapeInfo</a></div><div class="ttdoc">GEMM reshape information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01004">Types.h:1004</a></div></div>
<div class="ttc" id="structarm__compute_1_1_r_o_i_xhtml_aa23d9b69995e7138751a71caf1d46429"><div class="ttname"><a href="structarm__compute_1_1_r_o_i.xhtml#aa23d9b69995e7138751a71caf1d46429">arm_compute::ROI::rect</a></div><div class="ttdeci">Rectangle rect</div><div class="ttdoc">Rectangle specifying the region of interest. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00476">Types.h:476</a></div></div>
<div class="ttc" id="classarm__compute_1_1_r_o_i_pooling_layer_info_xhtml_a13a5239b80c3170a975b369f288cbd91"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a13a5239b80c3170a975b369f288cbd91">arm_compute::ROIPoolingLayerInfo::spatial_scale</a></div><div class="ttdeci">float spatial_scale() const </div><div class="ttdoc">Get the spatial scale. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00797">Types.h:797</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdoc">Floor rounding. </div></div>
<div class="ttc" id="classarm__compute_1_1_r_o_i_pooling_layer_info_xhtml_ae889c3657ba9390ac5ecd268e8a19720"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#ae889c3657ba9390ac5ecd268e8a19720">arm_compute::ROIPoolingLayerInfo::pooled_width</a></div><div class="ttdeci">unsigned int pooled_width() const </div><div class="ttdoc">Get the pooled width of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00787">Types.h:787</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a73e2825fd61d349c5ca2f5313e3c8ea1"><div class="ttname"><a href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">arm_compute::half</a></div><div class="ttdeci">half_float::half half</div><div class="ttdoc">16-bit floating point type </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a3c82dfc72060f59eccf0bd096b81c5d5"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a3c82dfc72060f59eccf0bd096b81c5d5">arm_compute::PoolingLayerInfo::pad_stride_info</a></div><div class="ttdeci">PadStrideInfo pad_stride_info() const </div><div class="ttdoc">Get the padding and stride. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00749">Types.h:749</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_ac6e61de369e994009e36f344f99c15ad"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#ac6e61de369e994009e36f344f99c15ad">arm_compute::QuantizationInfo::empty</a></div><div class="ttdeci">bool empty() const </div><div class="ttdoc">Indicates whether this QuantizationInfo has valid settings or not. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00199">Types.h:199</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">arm_compute::DimensionRoundingType</a></div><div class="ttdeci">DimensionRoundingType</div><div class="ttdoc">Dimension rounding type when down-scaling on CNNs. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00556">Types.h:556</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml">arm_compute::NormalizationLayerInfo</a></div><div class="ttdoc">Normalization Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00869">Types.h:869</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa9c5959e6f08f10d0edbadf5be1f33c53"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa9c5959e6f08f10d0edbadf5be1f33c53">arm_compute::Channel::C0</a></div><div class="ttdoc">Unknown channel format. </div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml_a7af92b099af871d8143ded96ce4f0b28"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml#a7af92b099af871d8143ded96ce4f0b28">arm_compute::WeightsInfo::WeightsInfo</a></div><div class="ttdeci">WeightsInfo(bool are_reshaped, unsigned int kernel_width, unsigned int kernel_height, unsigned int num_kernels)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00959">Types.h:959</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">arm_compute::InterpolationPolicy::BILINEAR</a></div><div class="ttdoc">Output values are defined by bilinear interpolation between the pixels. </div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a63e05ce4946dd9807c005c1619fa337a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a63e05ce4946dd9807c005c1619fa337a">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const </div><div class="ttdoc">Get the type of activation function. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00841">Types.h:841</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_a1fba9343eade93326cb985cfcb6de487"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#a1fba9343eade93326cb985cfcb6de487">arm_compute::IOFormatInfo::precision</a></div><div class="ttdeci">unsigned int precision</div><div class="ttdoc">Floating point precision. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01210">Types.h:1210</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a39f6445d0b790034f0d8fac36f2eb7f5"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a39f6445d0b790034f0d8fac36f2eb7f5">arm_compute::NormalizationLayerInfo::type</a></div><div class="ttdeci">NormType type() const </div><div class="ttdoc">Get the normalization type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00887">Types.h:887</a></div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a0549be3702c05e6ec1ada69a6d08e349"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a0549be3702c05e6ec1ada69a6d08e349">arm_compute::NormalizationLayerInfo::norm_size</a></div><div class="ttdeci">uint32_t norm_size() const </div><div class="ttdoc">Get the normalization size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00892">Types.h:892</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2d8a00f1d80a53ce8f75fa929c873202"><div class="ttname"><a href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202">arm_compute::BilinearInterpolation</a></div><div class="ttdeci">BilinearInterpolation</div><div class="ttdoc">Bilinear Interpolation method used by LKTracker. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00396">Types.h:396</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">arm_compute::Format::NV12</a></div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved UV data at 4:2:0 sampling. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08c1503414e23f5dd10ff83492685453a43f2a8b688fb96e5ad8ba08308bbcdfd"><div class="ttname"><a href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a43f2a8b688fb96e5ad8ba08308bbcdfd">arm_compute::Termination::TERM_CRITERIA_ITERATIONS</a></div><div class="ttdoc">Terminate after a maximum number of iterations. </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a4ee7f04c477d0e6a2a3609c24a8815b8"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a4ee7f04c477d0e6a2a3609c24a8815b8">arm_compute::NormalizationLayerInfo::alpha</a></div><div class="ttdeci">float alpha() const </div><div class="ttdoc">Get the alpha value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00897">Types.h:897</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3fed059965fe44cbe7ed4091d6b63acf"><div class="ttname"><a href="namespacearm__compute.xhtml#a3fed059965fe44cbe7ed4091d6b63acf">arm_compute::CONSTANT_BORDER_VALUE</a></div><div class="ttdeci">constexpr uint8_t CONSTANT_BORDER_VALUE</div><div class="ttdoc">Constant value of the border pixels when using BorderMode::CONSTANT. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00101">Types.h:101</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3e6b23e675649b83240691abbc42a649"><div class="ttname"><a href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649">arm_compute::ThresholdType</a></div><div class="ttdeci">ThresholdType</div><div class="ttdoc">Threshold mode. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00403">Types.h:403</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::Format::U16</a></div><div class="ttdoc">1 channel, 1 U16 per channel </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a802ffcf1b49237efe5be8a314d3f3869"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">arm_compute::BorderSize::bottom</a></div><div class="ttdeci">unsigned int bottom</div><div class="ttdoc">bottom of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00373">Types.h:373</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_af28869d53fbe340640044d672b29ba7c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af28869d53fbe340640044d672b29ba7c">arm_compute::ActivationLayerInfo::b</a></div><div class="ttdeci">float b() const </div><div class="ttdoc">Get the beta value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00851">Types.h:851</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_a3e3b8af91d2afbfeed14560f2070fd50"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#a3e3b8af91d2afbfeed14560f2070fd50">arm_compute::IOFormatInfo::print_region</a></div><div class="ttdeci">PrintRegion print_region</div><div class="ttdoc">Area to be printed by Tensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01206">Types.h:1206</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a7f5ccbc3d30c2cd3fd04d567946cbde2">arm_compute::InterpolationPolicy::NEAREST_NEIGHBOR</a></div><div class="ttdoc">Output values are defined to match the source pixel whose center is nearest to the sample position...</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01220">Types.h:1220</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aae1e1d3d40573127e9ee0480caf1283d6"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aae1e1d3d40573127e9ee0480caf1283d6">arm_compute::Channel::R</a></div><div class="ttdoc">Red channel. </div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00809">Types.h:809</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image. </div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00303">helpers.h:303</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08c1503414e23f5dd10ff83492685453a788740b1ba2d6463dae318a332513b29"><div class="ttname"><a href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453a788740b1ba2d6463dae318a332513b29">arm_compute::Termination::TERM_CRITERIA_BOTH</a></div><div class="ttdoc">Terminate on whichever of the other conditions occurs first. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">arm_compute::Format::NV21</a></div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved VU data at 4:2:0 sampling. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a960180f919dcfb9cc5b29e7153310eac"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a960180f919dcfb9cc5b29e7153310eac">arm_compute::GEMMInfo::GEMMInfo</a></div><div class="ttdeci">GEMMInfo(bool is_a_reshaped, bool is_b_reshaped, bool reshape_b_only_on_first_run, const GEMMReshapeInfo &amp;reshape_info=GEMMReshapeInfo())</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01093">Types.h:1093</a></div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a4df91dc0be2437a7d1bfd6d8df72baa8"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a4df91dc0be2437a7d1bfd6d8df72baa8">arm_compute::NormalizationLayerInfo::kappa</a></div><div class="ttdeci">float kappa() const </div><div class="ttdoc">Get the kappa value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00907">Types.h:907</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a44089024084b73c5b83e509518df48e0"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a44089024084b73c5b83e509518df48e0">arm_compute::BorderSize::BorderSize</a></div><div class="ttdeci">constexpr BorderSize(unsigned int top_bottom, unsigned int left_right)</div><div class="ttdoc">Border with same size for top/bottom and left/right. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00306">Types.h:306</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_adc8388028db66f138de6b1aca27ad620"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#adc8388028db66f138de6b1aca27ad620">arm_compute::ValidRegion::end</a></div><div class="ttdeci">int end(unsigned int d) const </div><div class="ttdoc">Return the end of the valid region for the given dimension d. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00258">Types.h:258</a></div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml_a8bf46ce65f0f9cc0210774dfc60b4e2f"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml#a8bf46ce65f0f9cc0210774dfc60b4e2f">arm_compute::WeightsInfo::WeightsInfo</a></div><div class="ttdeci">WeightsInfo()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00948">Types.h:948</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates2_d_xhtml_af6d3062751bd565decb1a2cd3b63bdb2"><div class="ttname"><a href="structarm__compute_1_1_coordinates2_d.xhtml#af6d3062751bd565decb1a2cd3b63bdb2">arm_compute::Coordinates2D::x</a></div><div class="ttdeci">int32_t x</div><div class="ttdoc">X coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00461">Types.h:461</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9ea"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">arm_compute::ActivationLayerInfo::ActivationFunction</a></div><div class="ttdeci">ActivationFunction</div><div class="ttdoc">Available activation functions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00813">Types.h:813</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a55beddf67f69fc5312961b1b112560fb"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a55beddf67f69fc5312961b1b112560fb">arm_compute::ActivationLayerInfo::a</a></div><div class="ttdeci">float a() const </div><div class="ttdoc">Get the alpha value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00846">Types.h:846</a></div></div>
<div class="ttc" id="_size2_d_8h_xhtml"><div class="ttname"><a href="_size2_d_8h.xhtml">Size2D.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7bac397289ee45877be0cd49811fe245b4e">arm_compute::SamplingPolicy::CENTER</a></div><div class="ttdoc">Samples are taken at pixel center. </div></div>
<div class="ttc" id="structarm__compute_1_1_key_point_xhtml"><div class="ttname"><a href="structarm__compute_1_1_key_point.xhtml">arm_compute::KeyPoint</a></div><div class="ttdoc">Keypoint type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00435">Types.h:435</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates3_d_xhtml_ad81d8d7d582cb5752dbeab85e233603a"><div class="ttname"><a href="structarm__compute_1_1_coordinates3_d.xhtml#ad81d8d7d582cb5752dbeab85e233603a">arm_compute::Coordinates3D::z</a></div><div class="ttdeci">uint32_t z</div><div class="ttdoc">Z coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00470">Types.h:470</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2d8a00f1d80a53ce8f75fa929c873202a731cb35d2d520920db9ab20dfc5edc64"><div class="ttname"><a href="namespacearm__compute.xhtml#a2d8a00f1d80a53ce8f75fa929c873202a731cb35d2d520920db9ab20dfc5edc64">arm_compute::BilinearInterpolation::BILINEAR_SCHARR</a></div><div class="ttdoc">Scharr method. </div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml">arm_compute::WeightsInfo</a></div><div class="ttdoc">Convolution Layer Weights Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00944">Types.h:944</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a078456fcb5fe2091665e52e650cd46c6"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a078456fcb5fe2091665e52e650cd46c6">arm_compute::PoolingLayerInfo::exclude_padding</a></div><div class="ttdeci">bool exclude_padding() const </div><div class="ttdoc">Check if padding is excluded in calculations. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00754">Types.h:754</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a3d7de69b5d597f77362f3279c6ec1c44"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a3d7de69b5d597f77362f3279c6ec1c44">arm_compute::PadStrideInfo::round</a></div><div class="ttdeci">DimensionRoundingType round() const </div><div class="ttdoc">Get the rounding type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00666">Types.h:666</a></div></div>
<div class="ttc" id="structarm__compute_1_1_r_o_i_xhtml"><div class="ttname"><a href="structarm__compute_1_1_r_o_i.xhtml">arm_compute::ROI</a></div><div class="ttdoc">Region of interest. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00474">Types.h:474</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a115dca124dc6423c7a400b8a8a0270cc">arm_compute::DataType::S64</a></div><div class="ttdoc">signed 64-bit number </div></div>
<div class="ttc" id="_half_8h_xhtml"><div class="ttname"><a href="_half_8h.xhtml">Half.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">arm_compute::Format::RGB888</a></div><div class="ttdoc">3 channels, 1 U8 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::ConvolutionMethod::DIRECT</a></div><div class="ttdoc">Direct convolution. </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a305c2145d26b998641402a9fec76f0bb"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a305c2145d26b998641402a9fec76f0bb">arm_compute::NormalizationLayerInfo::NormalizationLayerInfo</a></div><div class="ttdeci">NormalizationLayerInfo(NormType type, uint32_t norm_size=5, float alpha=0.0001f, float beta=0.5f, float kappa=1.f, bool is_scaled=true)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00882">Types.h:882</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::QuantizationInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdoc">scale </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00167">Types.h:167</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_afc22bda96f8024656055390cc5f780f0"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#afc22bda96f8024656055390cc5f780f0">arm_compute::IOFormatInfo::IOFormatInfo</a></div><div class="ttdeci">IOFormatInfo(PrintRegion print_region=PrintRegion::ValidRegion, PrecisionType precision_type=PrecisionType::Default, unsigned int precision=10, bool align_columns=true, std::string element_delim=&quot; &quot;, std::string row_delim=&quot;\n&quot;)</div><div class="ttdoc">Construct a set of IO formatting information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01190">Types.h:1190</a></div></div>
<div class="ttc" id="struct_internal_keypoint_xhtml"><div class="ttname"><a href="struct_internal_keypoint.xhtml">InternalKeypoint</a></div><div class="ttdef"><b>Definition:</b> <a href="optical__flow__pyramid__lk_8cl_source.xhtml#l00042">optical_flow_pyramid_lk.cl:42</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdoc">Sum. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3a68616ae21712c00705b962f4eff06eaa"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3a68616ae21712c00705b962f4eff06eaa">arm_compute::HOGNormType::L1_NORM</a></div><div class="ttdoc">L1 norm. </div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_aec54a7ff1ca347fdda25821cfb8fd0ed"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#aec54a7ff1ca347fdda25821cfb8fd0ed">arm_compute::ValidRegion::start</a></div><div class="ttdeci">int start(unsigned int d) const </div><div class="ttdoc">Return the start of the valid region for the given dimension d. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00252">Types.h:252</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a568b0fbfa3d903099d9c9f7b6acf188d"><div class="ttname"><a href="namespacearm__compute.xhtml#a568b0fbfa3d903099d9c9f7b6acf188d">arm_compute::error</a></div><div class="ttdeci">void error(const char *function, const char *file, const int line, const char *msg,...)</div><div class="ttdoc">Print an error message then throw an std::runtime_error. </div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_a915ff61cd41512869bb569f505946e83"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#a915ff61cd41512869bb569f505946e83">arm_compute::QuantizationInfo::QuantizationInfo</a></div><div class="ttdeci">QuantizationInfo()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00130">Types.h:130</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates2_d_xhtml_af64066d134a77e01b3d6eb8da813627a"><div class="ttname"><a href="structarm__compute_1_1_coordinates2_d.xhtml#af64066d134a77e01b3d6eb8da813627a">arm_compute::Coordinates2D::y</a></div><div class="ttdeci">int32_t y</div><div class="ttdoc">Y coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00462">Types.h:462</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6abd7ef6d4f35bc7d05c559b65032f15d1"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6abd7ef6d4f35bc7d05c559b65032f15d1">arm_compute::DataType::SIZET</a></div><div class="ttdoc">size_t </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aaf1a543f5a2c5d49bc5dde298fcf716e4"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aaf1a543f5a2c5d49bc5dde298fcf716e4">arm_compute::Channel::C2</a></div><div class="ttdoc">Third channel (used by formats with unknown channel types). </div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a825657ba220662927b90d1ca2c19fbd7"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a825657ba220662927b90d1ca2c19fbd7">arm_compute::PoolingLayerInfo::PoolingLayerInfo</a></div><div class="ttdeci">PoolingLayerInfo(PoolingType pool_type)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00734">Types.h:734</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::Format::U32</a></div><div class="ttdoc">1 channel, 1 U32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdoc">Cb/U channel. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caaca2475ab7883ebb9f125241141896190"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caaca2475ab7883ebb9f125241141896190">arm_compute::NormType::IN_MAP_1D</a></div><div class="ttdoc">Normalization applied within the same map in 1D region. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">arm_compute::Channel</a></div><div class="ttdeci">Channel</div><div class="ttdoc">Available channels. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00481">Types.h:481</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">arm_compute::Format</a></div><div class="ttdeci">Format</div><div class="ttdoc">Image colour formats. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00050">Types.h:50</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_ab1a3e6cb2768124a6853f52bd0e10596"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#ab1a3e6cb2768124a6853f52bd0e10596">arm_compute::IOFormatInfo::row_delim</a></div><div class="ttdeci">std::string row_delim</div><div class="ttdoc">Row delimeter. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01214">Types.h:1214</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_af63bc167068077a5945672776b472268"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#af63bc167068077a5945672776b472268">arm_compute::QuantizationInfo::operator!=</a></div><div class="ttdeci">bool operator!=(const QuantizationInfo &amp;other)</div><div class="ttdoc">Check whether not equal to a given quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00162">Types.h:162</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml">arm_compute::IOFormatInfo</a></div><div class="ttdoc">IO formatting information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01163">Types.h:1163</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_a28c9ca2cba95f7a1d38a0ad2afd11916"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#a28c9ca2cba95f7a1d38a0ad2afd11916">arm_compute::QuantizationInfo::operator==</a></div><div class="ttdeci">bool operator==(const QuantizationInfo &amp;other)</div><div class="ttdoc">Check whether equal to a given quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00151">Types.h:151</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_ada140e474f12d6849dae228b32dac8b7"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#ada140e474f12d6849dae228b32dac8b7">arm_compute::NormalizationLayerInfo::is_cross_map</a></div><div class="ttdeci">bool is_cross_map() const </div><div class="ttdoc">Check if normalization is cross map. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00912">Types.h:912</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ad2f1ea50a9e215ad8ef612a724a4866a"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ad2f1ea50a9e215ad8ef612a724a4866a">arm_compute::PadStrideInfo::stride</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; stride() const </div><div class="ttdoc">Get the stride. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00619">Types.h:619</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a1d79980f25d38aba3d6777d0afe544f3"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a1d79980f25d38aba3d6777d0afe544f3">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const </div><div class="ttdoc">Check if initialised. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00856">Types.h:856</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="structarm__compute_1_1_r_o_i_xhtml_a2df12a0d285598144f82ecd911af30e9"><div class="ttname"><a href="structarm__compute_1_1_r_o_i.xhtml#a2df12a0d285598144f82ecd911af30e9">arm_compute::ROI::batch_idx</a></div><div class="ttdeci">uint16_t batch_idx</div><div class="ttdoc">The batch index of the region of interest. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00477">Types.h:477</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ab7c9c24c109a9e571e9cd8ab3fc502ed"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ab7c9c24c109a9e571e9cd8ab3fc502ed">arm_compute::PadStrideInfo::padding_is_symmetric</a></div><div class="ttdeci">bool padding_is_symmetric() const </div><div class="ttdoc">Check whether the padding is symmetric. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00627">Types.h:627</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50be"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50be">arm_compute::RoundingPolicy</a></div><div class="ttdeci">RoundingPolicy</div><div class="ttdoc">Rounding method. </div><div class="ttdef"><b>Definition:</b> <a href="_rounding_8h_source.xhtml#l00030">Rounding.h:30</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c">arm_compute::Format::YUV444</a></div><div class="ttdoc">A 3 plane of 8 bit 4:4:4 sampled Y, U, V planes. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdoc">Samples are taken at pixel top left corner. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa3abe124ecc82bf2c2e22e6058f38c50c"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa3abe124ecc82bf2c2e22e6058f38c50c">arm_compute::Channel::C3</a></div><div class="ttdoc">Fourth channel (used by formats with unknown channel types). </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a2d3a66a044dcf4217d97f6b47319d5f1"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a2d3a66a044dcf4217d97f6b47319d5f1">arm_compute::PadStrideInfo::pad_bottom</a></div><div class="ttdeci">unsigned int pad_bottom() const </div><div class="ttdoc">Get the bottom padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00660">Types.h:660</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00571">Types.h:571</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08c1503414e23f5dd10ff83492685453"><div class="ttname"><a href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453">arm_compute::Termination</a></div><div class="ttdeci">Termination</div><div class="ttdoc">Termination criteria. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00410">Types.h:410</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a9f7c904411f0871ed5b37eecb1c03de2"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">arm_compute::PadStrideInfo::has_padding</a></div><div class="ttdeci">bool has_padding() const </div><div class="ttdoc">Check whether this has any padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00672">Types.h:672</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a4ead5a6d48151a603bf3be1e6acafb05"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a4ead5a6d48151a603bf3be1e6acafb05">arm_compute::BorderSize::BorderSize</a></div><div class="ttdeci">constexpr BorderSize(unsigned int size)</div><div class="ttdoc">Border with equal size around the 2D plane. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00300">Types.h:300</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa57cec4137b614c87cb4e24a3d003a3e0">arm_compute::Channel::Y</a></div><div class="ttdoc">Luma channel. </div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_a1d81fe110d5dcac79dd73a532015bb94"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#a1d81fe110d5dcac79dd73a532015bb94">arm_compute::IOFormatInfo::align_columns</a></div><div class="ttdeci">bool align_columns</div><div class="ttdoc">Align columns. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01216">Types.h:1216</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3a80485e54c7a3c93a0f74637c6b918ce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3a80485e54c7a3c93a0f74637c6b918ce5">arm_compute::HOGNormType::L2_NORM</a></div><div class="ttdoc">L2-norm. </div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_af565d3fc3f7d82e9ed5e36dda5377eab"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#af565d3fc3f7d82e9ed5e36dda5377eab">arm_compute::QuantizationInfo::QuantizationInfo</a></div><div class="ttdeci">QuantizationInfo(float scale, int offset)</div><div class="ttdoc">Construct quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00140">Types.h:140</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a05374b750b0fc472c34ee61e6f028bba"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a05374b750b0fc472c34ee61e6f028bba">arm_compute::BorderSize::left</a></div><div class="ttdeci">unsigned int left</div><div class="ttdoc">left of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00374">Types.h:374</a></div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml_ae56950468898173b9466ab93b843c967"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml#ae56950468898173b9466ab93b843c967">arm_compute::WeightsInfo::num_kernels</a></div><div class="ttdeci">unsigned int num_kernels() const </div><div class="ttdoc">Return the number of convolution kernels. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00975">Types.h:975</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">arm_compute::ActivationLayerInfo::ActivationFunction::LOGISTIC</a></div><div class="ttdoc">Logistic (  ) </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a3057c6687da7d7d5674dcc49eba5736c"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a3057c6687da7d7d5674dcc49eba5736c">arm_compute::BorderSize::uniform</a></div><div class="ttdeci">constexpr bool uniform() const </div><div class="ttdoc">Check if the border is the same size on all sides. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00324">Types.h:324</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a78b0fed184c642b78f32fd34b228a5f9"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a78b0fed184c642b78f32fd34b228a5f9">arm_compute::BorderSize::right</a></div><div class="ttdeci">unsigned int right</div><div class="ttdoc">right of the border </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00372">Types.h:372</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acbf8f8a6dd185de04c1981c57a8963cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00360">Winograd.cpp:360</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">arm_compute::Format::S16</a></div><div class="ttdoc">1 channel, 1 S16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7b3ec6413f000b02fdb4e39a951d9f8aad927ac799e8b24f80fc80d89b2eb7131"><div class="ttname"><a href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8aad927ac799e8b24f80fc80d89b2eb7131">arm_compute::MagnitudeType::L2NORM</a></div><div class="ttdoc">L2 normalization type. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a628bcf7e10fc1c2a984f379a1ec3393a">arm_compute::DataLayoutDimension::BATCHES</a></div><div class="ttdoc">batches </div></div>
<div class="ttc" id="classarm__compute_1_1_r_o_i_pooling_layer_info_xhtml_a5ef65c82efd18c18e7f23585364e3fa9"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#a5ef65c82efd18c18e7f23585364e3fa9">arm_compute::ROIPoolingLayerInfo::pooled_height</a></div><div class="ttdeci">unsigned int pooled_height() const </div><div class="ttdoc">Get the pooled height of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00792">Types.h:792</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a21d59f266df349880afd6143469c8f29"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a21d59f266df349880afd6143469c8f29">arm_compute::PoolingLayerInfo::PoolingLayerInfo</a></div><div class="ttdeci">PoolingLayerInfo()</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00692">Types.h:692</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::InterpolationPolicy::AREA</a></div><div class="ttdoc">Output values are determined by averaging the source pixels whose areas fall under the area of the de...</div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_afaaf8f4d7fa22fe9a3f4ff41567cd886"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#afaaf8f4d7fa22fe9a3f4ff41567cd886">arm_compute::PadStrideInfo::pad_right</a></div><div class="ttdeci">unsigned int pad_right() const </div><div class="ttdoc">Get the right padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00650">Types.h:650</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93a7e6aa2d53f6ee2b1a34b017fa403cb76"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a7e6aa2d53f6ee2b1a34b017fa403cb76">arm_compute::PoolingType::L2</a></div><div class="ttdoc">L2 Pooling. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a6f541aab23799f6c61d9c8d7ca9fe15c"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a6f541aab23799f6c61d9c8d7ca9fe15c">arm_compute::NormalizationLayerInfo::scale_coeff</a></div><div class="ttdeci">float scale_coeff() const </div><div class="ttdoc">Return the scaling factor of the normalization function. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00928">Types.h:928</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_a36c28b28da4e04d698d6b598fb1eaca6"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6">arm_compute::IOFormatInfo::PrecisionType</a></div><div class="ttdeci">PrecisionType</div><div class="ttdoc">Precision type used when printing floating point numbers. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01166">Types.h:1166</a></div></div>
<div class="ttc" id="classarm__compute_1_1_r_o_i_pooling_layer_info_xhtml_aeb18f7aaaa12486cd2cf6499c19059db"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml#aeb18f7aaaa12486cd2cf6499c19059db">arm_compute::ROIPoolingLayerInfo::ROIPoolingLayerInfo</a></div><div class="ttdeci">ROIPoolingLayerInfo(unsigned int pooled_width, unsigned int pooled_height, float spatial_scale)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00782">Types.h:782</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ad71c061b948d43c30e489e15fee6dc8b"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ad71c061b948d43c30e489e15fee6dc8b">arm_compute::PadStrideInfo::PadStrideInfo</a></div><div class="ttdeci">PadStrideInfo(unsigned int stride_x, unsigned int stride_y, unsigned int pad_left, unsigned int pad_right, unsigned int pad_top, unsigned int pad_bottom, DimensionRoundingType round)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00603">Types.h:603</a></div></div>
<div class="ttc" id="classarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00037">Strides.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da9d024a5762b3a992dec7eb3c49d17ae8">arm_compute::ConvolutionMethod::WINOGRAD</a></div><div class="ttdoc">Convolution using Winograd. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">arm_compute::Format::IYUV</a></div><div class="ttdoc">A 3 plane of 8-bit 4:2:0 sampled Y, U, V planes. </div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_aa25aa7643090ded846262cc2edfe8637"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#aa25aa7643090ded846262cc2edfe8637">arm_compute::PoolingLayerInfo::PoolingLayerInfo</a></div><div class="ttdeci">PoolingLayerInfo(PoolingType pool_type, unsigned int pool_size, PadStrideInfo pad_stride_info=PadStrideInfo(), bool exclude_padding=false)</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00705">Types.h:705</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_aebf88ce57c0ad3d796ca66edb8a43e1a"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#aebf88ce57c0ad3d796ca66edb8a43e1a">arm_compute::PadStrideInfo::PadStrideInfo</a></div><div class="ttdeci">PadStrideInfo(unsigned int stride_x=1, unsigned int stride_y=1, unsigned int pad_x=0, unsigned int pad_y=0, DimensionRoundingType round=DimensionRoundingType::FLOOR)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00582">Types.h:582</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a165f06116e7b8d9b2481dfc805db4619"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a165f06116e7b8d9b2481dfc805db4619">arm_compute::Format::RGBA8888</a></div><div class="ttdoc">4 channels, 1 U8 per channel </div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates3_d_xhtml_a9c02f93c9698e4486878867c4f265c48"><div class="ttname"><a href="structarm__compute_1_1_coordinates3_d.xhtml#a9c02f93c9698e4486878867c4f265c48">arm_compute::Coordinates3D::y</a></div><div class="ttdeci">uint32_t y</div><div class="ttdoc">Y coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00469">Types.h:469</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_aafe658c46436747f101e5aa9f8cd28b2"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#aafe658c46436747f101e5aa9f8cd28b2">arm_compute::ValidRegion::ValidRegion</a></div><div class="ttdeci">ValidRegion(const Coordinates &amp;an_anchor, const TensorShape &amp;a_shape)</div><div class="ttdoc">Constructor for a valid region with default number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00231">Types.h:231</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_a9f956adfa6525f0edd3c702e7e5afb8f"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#a9f956adfa6525f0edd3c702e7e5afb8f">arm_compute::QuantizationInfo::dequantize</a></div><div class="ttdeci">float dequantize(qasymm8_t value) const </div><div class="ttdoc">Dequantizes a value using the scale/offset in this QuantizationInfo. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00189">Types.h:189</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93">arm_compute::PoolingType</a></div><div class="ttdeci">PoolingType</div><div class="ttdoc">Available pooling types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00563">Types.h:563</a></div></div>
<div class="ttc" id="classarm__compute_1_1_weights_info_xhtml_a6da544d7a9bf5fe4114e55ddd198dbcc"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml#a6da544d7a9bf5fe4114e55ddd198dbcc">arm_compute::WeightsInfo::kernel_size</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; kernel_size() const </div><div class="ttdoc">Return the width and height of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00983">Types.h:983</a></div></div>
<div class="ttc" id="_strides_8h_xhtml"><div class="ttname"><a href="_strides_8h.xhtml">Strides.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00178">PixelWiseMultiplication.cpp:178</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_aee6f5a043173c4d51c11a54db8e0f519"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aee6f5a043173c4d51c11a54db8e0f519">arm_compute::GEMMReshapeInfo::GEMMReshapeInfo</a></div><div class="ttdeci">GEMMReshapeInfo()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01008">Types.h:1008</a></div></div>
<div class="ttc" id="_coordinates_8h_xhtml"><div class="ttname"><a href="_coordinates_8h.xhtml">Coordinates.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">arm_compute::HOGNormType</a></div><div class="ttdeci">HOGNormType</div><div class="ttdoc">Normalization type for Histogram of Oriented Gradients (HOG) </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00530">Types.h:530</a></div></div>
<div class="ttc" id="structarm__compute_1_1_coordinates2_d_xhtml"><div class="ttname"><a href="structarm__compute_1_1_coordinates2_d.xhtml">arm_compute::Coordinates2D</a></div><div class="ttdoc">Coordinate type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00459">Types.h:459</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">arm_compute::PoolingType::AVG</a></div><div class="ttdoc">Average Pooling. </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml_a55fe6a30749e41ce31c2bb969a5aa25e"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#a55fe6a30749e41ce31c2bb969a5aa25e">arm_compute::NormalizationLayerInfo::beta</a></div><div class="ttdeci">float beta() const </div><div class="ttdoc">Get the beta value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00902">Types.h:902</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a377481844bf0459e5ef871cc72d72496"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a377481844bf0459e5ef871cc72d72496">arm_compute::PadStrideInfo::pad_left</a></div><div class="ttdeci">unsigned int pad_left() const </div><div class="ttdoc">Get the left padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00645">Types.h:645</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a0db45d2a4141101bdfe48e3314cfbca3">arm_compute::BorderMode::UNDEFINED</a></div><div class="ttdoc">Borders are left undefined. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">arm_compute::CLVersion::UNKNOWN</a></div></div>
<div class="ttc" id="classarm__compute_1_1_r_o_i_pooling_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_r_o_i_pooling_layer_info.xhtml">arm_compute::ROIPoolingLayerInfo</a></div><div class="ttdoc">ROI Pooling Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00773">Types.h:773</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a4ef59320fbe90fe47d40f1f71e4c5daa">arm_compute::BorderMode::REPLICATE</a></div><div class="ttdoc">Pixels outside the image are assumed to have the same value as the closest image pixel. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_ae97b3d4d063ade0ef4bdf5be1f135881"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#ae97b3d4d063ade0ef4bdf5be1f135881">arm_compute::BorderSize::BorderSize</a></div><div class="ttdeci">constexpr BorderSize()</div><div class="ttdoc">Empty border, i.e. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00294">Types.h:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a7e8311a3a774bceb8efae1d5c8c8aeff"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a7e8311a3a774bceb8efae1d5c8c8aeff">arm_compute::PoolingLayerInfo::pool_type</a></div><div class="ttdeci">PoolingType pool_type() const </div><div class="ttdoc">Get the pooling type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00739">Types.h:739</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml">arm_compute::DetectionWindow</a></div><div class="ttdoc">Detection window used for the object detection. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00543">Types.h:543</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8938bcb3ec0f5f8d93285eb3a28b701"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">arm_compute::qasymm8_t</a></div><div class="ttdeci">uint8_t qasymm8_t</div><div class="ttdoc">8 bit quantized asymmetric scalar value </div><div class="ttdef"><b>Definition:</b> <a href="_q_asymm8_8h_source.xhtml#l00030">QAsymm8.h:30</a></div></div>
<div class="ttc" id="structarm__compute_1_1_rectangle_xhtml_ad0eab1042455a2067c812ab8071d5376"><div class="ttname"><a href="structarm__compute_1_1_rectangle.xhtml#ad0eab1042455a2067c812ab8071d5376">arm_compute::Rectangle::width</a></div><div class="ttdeci">uint16_t width</div><div class="ttdoc">Width of the rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00454">Types.h:454</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdoc">Wrap around. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825">arm_compute::Format::UV88</a></div><div class="ttdoc">2 channel, 1 U8 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_a38bef5b3852701d3b1958a8ca4f96683"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a38bef5b3852701d3b1958a8ca4f96683">arm_compute::GEMMReshapeInfo::m</a></div><div class="ttdeci">int m() const </div><div class="ttdoc">Number of matrix A rows. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01028">Types.h:1028</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3e6b23e675649b83240691abbc42a649a01036ddcc971d02f6c32c3da31a119f2"><div class="ttname"><a href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649a01036ddcc971d02f6c32c3da31a119f2">arm_compute::ThresholdType::RANGE</a></div><div class="ttdoc">Threshold with two values. </div></div>
<div class="ttc" id="structarm__compute_1_1_rectangle_xhtml_ab0580f504a7428539be299fa71565f30"><div class="ttname"><a href="structarm__compute_1_1_rectangle.xhtml#ab0580f504a7428539be299fa71565f30">arm_compute::Rectangle::y</a></div><div class="ttdeci">uint16_t y</div><div class="ttdoc">Top-left y coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00453">Types.h:453</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a15a05537a472ee742404821851529327a8d6b5cada83510220f59e00ce86d4d92"><div class="ttname"><a href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327a8d6b5cada83510220f59e00ce86d4d92">arm_compute::BorderMode::CONSTANT</a></div><div class="ttdoc">Pixels outside the image are assumed to have a constant value. </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_a327d17199b3bb3d4ab67b819a5553510"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#a327d17199b3bb3d4ab67b819a5553510">arm_compute::GEMMReshapeInfo::n</a></div><div class="ttdeci">int n() const </div><div class="ttdoc">Number of matrix B columns. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01036">Types.h:1036</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_ae283722f31a4c59039f9abd44f10dbd0"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0">arm_compute::IOFormatInfo::PrintRegion</a></div><div class="ttdeci">PrintRegion</div><div class="ttdoc">Specifies the area to be printed, used by Tensor objects. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01174">Types.h:1174</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a60ad1078faeaf3f59266d69ad937339f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">arm_compute::test::validation::rounding_policy</a></div><div class="ttdeci">rounding_policy</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00178">PixelWiseMultiplication.cpp:178</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aadfcf28d0734569a6a693bc8194de62bf"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aadfcf28d0734569a6a693bc8194de62bf">arm_compute::Channel::G</a></div><div class="ttdoc">Green channel. </div></div>
<div class="ttc" id="_q_asymm8_8h_xhtml"><div class="ttname"><a href="_q_asymm8_8h.xhtml">QAsymm8.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6452ac376d4adb94d93a93d678bb6757"><div class="ttname"><a href="namespacearm__compute.xhtml#a6452ac376d4adb94d93a93d678bb6757">arm_compute::round</a></div><div class="ttdeci">int round(float x, RoundingPolicy rounding_policy)</div><div class="ttdoc">Return a rounded value of x. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a10a8505b7c7458d1f60cac844d42e023"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a10a8505b7c7458d1f60cac844d42e023">arm_compute::BorderSize::BorderSize</a></div><div class="ttdeci">constexpr BorderSize(unsigned int top, unsigned int right, unsigned int bottom, unsigned int left)</div><div class="ttdoc">Border with different sizes. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00312">Types.h:312</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a8809341538b465964b81970388fc9ebc"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a8809341538b465964b81970388fc9ebc">arm_compute::GEMMInfo::reshape_b_only_on_first_run</a></div><div class="ttdeci">bool reshape_b_only_on_first_run() const </div><div class="ttdoc">Flag which specifies if the reshape of matrix B should executed only for the first. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01119">Types.h:1119</a></div></div>
<div class="ttc" id="structarm__compute_1_1_rectangle_xhtml_a4dde988b1b2adba65ae3efa69f65d960"><div class="ttname"><a href="structarm__compute_1_1_rectangle.xhtml#a4dde988b1b2adba65ae3efa69f65d960">arm_compute::Rectangle::x</a></div><div class="ttdeci">uint16_t x</div><div class="ttdoc">Top-left x coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00452">Types.h:452</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml">arm_compute::GEMMInfo</a></div><div class="ttdoc">GEMM information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01078">Types.h:1078</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_xhtml_ad91bb73431b4de1f4946ed949d444849"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#ad91bb73431b4de1f4946ed949d444849">arm_compute::test::fixed_point_arithmetic::detail::max</a></div><div class="ttdeci">fixed_point&lt; T &gt; max(fixed_point&lt; T &gt; x, fixed_point&lt; T &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_fixed_point_8h_source.xhtml#l00902">FixedPoint.h:902</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ad5695915456312560039ee411667cdbf"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ad5695915456312560039ee411667cdbf">arm_compute::DataType::QS32</a></div><div class="ttdoc">quantized, symmetric fixed-point 32-bit number </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a19da960d23eca69f8e65d52c741147e2"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a19da960d23eca69f8e65d52c741147e2">arm_compute::BorderSize::operator*</a></div><div class="ttdeci">BorderSize operator*(float scale)</div><div class="ttdoc">Scale a copy of this border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00351">Types.h:351</a></div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization settings (used for QASYMM8 data type) </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00127">Types.h:127</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a62197192f0fbf4e0675eb37be1c4c175"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">arm_compute::test::validation::alpha</a></div><div class="ttdeci">alpha</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a1ad5f6f3069070ec4cbbdc94d5e61e0e">arm_compute::DataType::F64</a></div><div class="ttdoc">64-bit floating-point number </div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a4af837f04d6447739556d457c959d1cc"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4af837f04d6447739556d457c959d1cc">arm_compute::GEMMInfo::is_a_reshaped</a></div><div class="ttdeci">bool is_a_reshaped() const </div><div class="ttdoc">Flag which specifies if the matrix A has been reshaped. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01101">Types.h:1101</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdoc">Container for valid region of a window. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00206">Types.h:206</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3e6b23e675649b83240691abbc42a649a98ad0e8750ae10ad556ed7a62affb452"><div class="ttname"><a href="namespacearm__compute.xhtml#a3e6b23e675649b83240691abbc42a649a98ad0e8750ae10ad556ed7a62affb452">arm_compute::ThresholdType::BINARY</a></div><div class="ttdoc">Threshold with one value. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">arm_compute::NonLinearFilterFunction::MAX</a></div><div class="ttdoc">Non linear dilate. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7b3ec6413f000b02fdb4e39a951d9f8a"><div class="ttname"><a href="namespacearm__compute.xhtml#a7b3ec6413f000b02fdb4e39a951d9f8a">arm_compute::MagnitudeType</a></div><div class="ttdeci">MagnitudeType</div><div class="ttdoc">Magnitude calculation type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00418">Types.h:418</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdoc">Saturate. </div></div>
<div class="ttc" id="structarm__compute_1_1_rectangle_xhtml_a81c9f8d0b8c3b49d770be14dbe9f0d37"><div class="ttname"><a href="structarm__compute_1_1_rectangle.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">arm_compute::Rectangle::height</a></div><div class="ttdeci">uint16_t height</div><div class="ttdoc">Height of the rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00455">Types.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">arm_compute::Format::YUYV422</a></div><div class="ttdoc">A single plane of 32-bit macro pixel of Y0, U0, Y1, V0 bytes. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afdda916edc7502967bbec17ea3c06c02ae657cce1913c857166b0475f18668ef5"><div class="ttname"><a href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02ae657cce1913c857166b0475f18668ef5">arm_compute::MatrixPattern::BOX</a></div><div class="ttdoc">Box pattern matrix. </div></div>
<div class="ttc" id="structarm__compute_1_1_quantization_info_xhtml_aed7ea92f45bd273dde380a45ddced592"><div class="ttname"><a href="structarm__compute_1_1_quantization_info.xhtml#aed7ea92f45bd273dde380a45ddced592">arm_compute::QuantizationInfo::offset</a></div><div class="ttdeci">int offset</div><div class="ttdoc">offset </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00168">Types.h:168</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">CLTensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00122">GEMM.cpp:122</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">arm_compute::NonLinearFilterFunction::MIN</a></div><div class="ttdoc">Non linear erode. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a31d65cccd6593e4101db93fb878abcaa">arm_compute::DataType::U64</a></div><div class="ttdoc">unsigned 64-bit number </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afdda916edc7502967bbec17ea3c06c02a04dd53a8e6c2306e9bbf944c1d6047f2"><div class="ttname"><a href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a04dd53a8e6c2306e9bbf944c1d6047f2">arm_compute::MatrixPattern::CROSS</a></div><div class="ttdoc">Cross pattern matrix. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00072">Types.h:72</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml_a658e806b42869826f29b9288505da774"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml#a658e806b42869826f29b9288505da774">arm_compute::PoolingLayerInfo::is_global_pooling</a></div><div class="ttdeci">bool is_global_pooling() const </div><div class="ttdoc">Check if is global pooling. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00759">Types.h:759</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00688">Types.h:688</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">Supported tensor data layouts. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00110">Types.h:110</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59ca"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59ca">arm_compute::NormType</a></div><div class="ttdeci">NormType</div><div class="ttdoc">The normalization type used for the normalization layer. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00522">Types.h:522</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">arm_compute::DataType::S8</a></div><div class="ttdoc">signed 8-bit number </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afdda916edc7502967bbec17ea3c06c02"><div class="ttname"><a href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02">arm_compute::MatrixPattern</a></div><div class="ttdeci">MatrixPattern</div><div class="ttdoc">Available matrix patterns. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00498">Types.h:498</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">arm_compute::NormType::CROSS_MAP</a></div><div class="ttdoc">Normalization applied cross maps. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_ac2ed52112076ed0fd2aab3fbfb758837"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#ac2ed52112076ed0fd2aab3fbfb758837">arm_compute::BorderSize::operator*=</a></div><div class="ttdeci">BorderSize &amp; operator*=(float scale)</div><div class="ttdoc">Scale this border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00335">Types.h:335</a></div></div>
<div class="ttc" id="_rounding_8h_xhtml"><div class="ttname"><a href="_rounding_8h.xhtml">Rounding.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afdda916edc7502967bbec17ea3c06c02a03570470bad94692ce93e32700d2e1cb"><div class="ttname"><a href="namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a03570470bad94692ce93e32700d2e1cb">arm_compute::MatrixPattern::OTHER</a></div><div class="ttdoc">Any other matrix pattern. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::ConvolutionMethod::GEMM</a></div><div class="ttdoc">Convolution using GEMM. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle overflow. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00381">Types.h:381</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml_aa14924f4569745bea117b3f506cf734d"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#aa14924f4569745bea117b3f506cf734d">arm_compute::GEMMReshapeInfo::mult_transpose1xW_width</a></div><div class="ttdeci">int mult_transpose1xW_width() const </div><div class="ttdoc">Multiplication factor for the width of the 1xW transposed block. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01052">Types.h:1052</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a00ac5d6334fe3217b4ef49ea8dc61fb0"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a00ac5d6334fe3217b4ef49ea8dc61fb0">arm_compute::BorderSize::limit</a></div><div class="ttdeci">void limit(const BorderSize &amp;limit)</div><div class="ttdoc">Limit this border size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00363">Types.h:363</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858">arm_compute::NonLinearFilterFunction</a></div><div class="ttdeci">NonLinearFilterFunction</div><div class="ttdoc">Available non linear functions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00507">Types.h:507</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a55a69b397082accd94221dd10b722cf7"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a55a69b397082accd94221dd10b722cf7">arm_compute::ValidRegion::anchor</a></div><div class="ttdeci">Coordinates anchor</div><div class="ttdoc">Anchor for the start of the valid region. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00278">Types.h:278</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a77ef520daabfab023d01732f24101c6e"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a77ef520daabfab023d01732f24101c6e">arm_compute::ValidRegion::ValidRegion</a></div><div class="ttdeci">ValidRegion()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00209">Types.h:209</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa6ff8bd96743aae9fd283cd822b84278e">arm_compute::NormType::IN_MAP_2D</a></div><div class="ttdoc">Normalization applied within the same map in 2D region. </div></div>
<div class="ttc" id="_tensor_shape_8h_xhtml"><div class="ttname"><a href="_tensor_shape_8h.xhtml">TensorShape.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7b"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7b">arm_compute::SamplingPolicy</a></div><div class="ttdeci">SamplingPolicy</div><div class="ttdoc">Available Sampling Policies. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00094">Types.h:94</a></div></div>
<div class="ttc" id="structarm__compute_1_1_i_o_format_info_xhtml_a38c5b617ead74af00cc7957553bd0d66"><div class="ttname"><a href="structarm__compute_1_1_i_o_format_info.xhtml#a38c5b617ead74af00cc7957553bd0d66">arm_compute::IOFormatInfo::element_delim</a></div><div class="ttdeci">std::string element_delim</div><div class="ttdoc">Element delimeter. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01212">Types.h:1212</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858a8ab0c3a037e882577dec378985477074"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a8ab0c3a037e882577dec378985477074">arm_compute::NonLinearFilterFunction::MEDIAN</a></div><div class="ttdoc">Non linear median filter. </div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a2a86593e913939d9eadad26c2df65138"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a2a86593e913939d9eadad26c2df65138">arm_compute::PadStrideInfo::pad_top</a></div><div class="ttdeci">unsigned int pad_top() const </div><div class="ttdoc">Get the top padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00655">Types.h:655</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a5bbdcf574d3f5e412fa6a1117911e67b"><div class="ttname"><a href="_error_8h.xhtml#a5bbdcf574d3f5e412fa6a1117911e67b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond,...)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00319">Error.h:319</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
