<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: AssemblyKernelGlue&lt; TypeInput, TypeOutput &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_assembly_kernel_glue.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">AssemblyKernelGlue&lt; TypeInput, TypeOutput &gt; Class Template Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Assembly kernel glue.  
 <a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for AssemblyKernelGlue&lt; TypeInput, TypeOutput &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_assembly_kernel_glue__coll__graph.svg" width="204" height="186"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3174543728e6f78b211d600475b8ab9e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3174543728e6f78b211d600475b8ab9e">TypeOperator</a> = TypeInput</td></tr>
<tr class="memdesc:a3174543728e6f78b211d600475b8ab9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operator type.  <a href="#a3174543728e6f78b211d600475b8ab9e">More...</a><br /></td></tr>
<tr class="separator:a3174543728e6f78b211d600475b8ab9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9f23d550c3fdf519d84948fc9e015c1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#ac9f23d550c3fdf519d84948fc9e015c1">TypeResult</a> = TypeOutput</td></tr>
<tr class="memdesc:ac9f23d550c3fdf519d84948fc9e015c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Result type.  <a href="#ac9f23d550c3fdf519d84948fc9e015c1">More...</a><br /></td></tr>
<tr class="separator:ac9f23d550c3fdf519d84948fc9e015c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b7261bda3dc469e02365df7719358b7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a2b7261bda3dc469e02365df7719358b7">AssemblyGemm</a> = arm_gemm::GemmCommon&lt; TypeInput, TypeOutput &gt;</td></tr>
<tr class="memdesc:a2b7261bda3dc469e02365df7719358b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assembly Gemm.  <a href="#a2b7261bda3dc469e02365df7719358b7">More...</a><br /></td></tr>
<tr class="separator:a2b7261bda3dc469e02365df7719358b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4d00b55a18d07d51dd3c2d7a018cfdb3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a4d00b55a18d07d51dd3c2d7a018cfdb3">AssemblyKernelGlue</a> ()</td></tr>
<tr class="memdesc:a4d00b55a18d07d51dd3c2d7a018cfdb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a4d00b55a18d07d51dd3c2d7a018cfdb3">More...</a><br /></td></tr>
<tr class="separator:a4d00b55a18d07d51dd3c2d7a018cfdb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a325adbd7f57154b4dc19cc84284b474b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt; TypeInput, TypeOutput &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a325adbd7f57154b4dc19cc84284b474b">operator=</a> (const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt; TypeInput, TypeOutput &gt; &amp;)=delete</td></tr>
<tr class="memdesc:a325adbd7f57154b4dc19cc84284b474b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="#a325adbd7f57154b4dc19cc84284b474b">More...</a><br /></td></tr>
<tr class="separator:a325adbd7f57154b4dc19cc84284b474b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2fe24707be869c9f4fef73e2d837863"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#ae2fe24707be869c9f4fef73e2d837863">AssemblyKernelGlue</a> (const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt; TypeInput, TypeOutput &gt; &amp;)=delete</td></tr>
<tr class="memdesc:ae2fe24707be869c9f4fef73e2d837863"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#ae2fe24707be869c9f4fef73e2d837863">More...</a><br /></td></tr>
<tr class="separator:ae2fe24707be869c9f4fef73e2d837863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13a43e6d814de94978c515cb084873b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a13a43e6d814de94978c515cb084873b1">run</a> ()</td></tr>
<tr class="memdesc:a13a43e6d814de94978c515cb084873b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the arrays pointers and strides in the assembly kernel and executes the assembly kernel.  <a href="#a13a43e6d814de94978c515cb084873b1">More...</a><br /></td></tr>
<tr class="separator:a13a43e6d814de94978c515cb084873b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:add93daba36f239482945a1b2428f35fc"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a2b7261bda3dc469e02365df7719358b7">AssemblyGemm</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a></td></tr>
<tr class="memdesc:add93daba36f239482945a1b2428f35fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assembly Gemm kernel.  <a href="#add93daba36f239482945a1b2428f35fc">More...</a><br /></td></tr>
<tr class="separator:add93daba36f239482945a1b2428f35fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25380d912475d0de9f812208470ed658"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="namespacearm__compute.xhtml#a9f3ed96e009111cfbe53d3f77c712390">INEKernel</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a25380d912475d0de9f812208470ed658">_optimised_kernel</a></td></tr>
<tr class="memdesc:a25380d912475d0de9f812208470ed658"><td class="mdescLeft">&#160;</td><td class="mdescRight">Optimised NEON kernel.  <a href="#a25380d912475d0de9f812208470ed658">More...</a><br /></td></tr>
<tr class="separator:a25380d912475d0de9f812208470ed658"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c56e995d4dc7abbe0dc428c91677f5a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a></td></tr>
<tr class="memdesc:a3c56e995d4dc7abbe0dc428c91677f5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input A.  <a href="#a3c56e995d4dc7abbe0dc428c91677f5a">More...</a><br /></td></tr>
<tr class="separator:a3c56e995d4dc7abbe0dc428c91677f5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbd52c7bb890e7e1b516ca458abe423e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a></td></tr>
<tr class="memdesc:afbd52c7bb890e7e1b516ca458abe423e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input B.  <a href="#afbd52c7bb890e7e1b516ca458abe423e">More...</a><br /></td></tr>
<tr class="separator:afbd52c7bb890e7e1b516ca458abe423e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795e046c4103b68ac2d3977d903a15d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a></td></tr>
<tr class="memdesc:a795e046c4103b68ac2d3977d903a15d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output.  <a href="#a795e046c4103b68ac2d3977d903a15d4">More...</a><br /></td></tr>
<tr class="separator:a795e046c4103b68ac2d3977d903a15d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bdfad560ce4bc3d80c8c5182eba0f47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a></td></tr>
<tr class="memdesc:a5bdfad560ce4bc3d80c8c5182eba0f47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-transpose tensor.  <a href="#a5bdfad560ce4bc3d80c8c5182eba0f47">More...</a><br /></td></tr>
<tr class="separator:a5bdfad560ce4bc3d80c8c5182eba0f47"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TypeInput, typename TypeOutput&gt;<br />
class arm_compute::AssemblyKernelGlue&lt; TypeInput, TypeOutput &gt;</h3>

<p>Assembly kernel glue. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00045">45</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a2b7261bda3dc469e02365df7719358b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a2b7261bda3dc469e02365df7719358b7">AssemblyGemm</a> =  arm_gemm::GemmCommon&lt;TypeInput, TypeOutput&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assembly Gemm. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00058">58</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3174543728e6f78b211d600475b8ab9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3174543728e6f78b211d600475b8ab9e">TypeOperator</a> =  TypeInput</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Operator type. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00049">49</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac9f23d550c3fdf519d84948fc9e015c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#ac9f23d550c3fdf519d84948fc9e015c1">TypeResult</a> =  TypeOutput</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Result type. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00051">51</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4d00b55a18d07d51dd3c2d7a018cfdb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00053">53</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a25380d912475d0de9f812208470ed658">_optimised_kernel</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a5bdfad560ce4bc3d80c8c5182eba0f47"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">arm_compute::AssemblyKernelGlue::_pretranspose</a></div><div class="ttdeci">ITensor * _pretranspose</div><div class="ttdoc">Pre-transpose tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00076">AssemblyHelper.h:76</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a3c56e995d4dc7abbe0dc428c91677f5a"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">arm_compute::AssemblyKernelGlue::_a</a></div><div class="ttdeci">const ITensor * _a</div><div class="ttdoc">Input A. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00070">AssemblyHelper.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_afbd52c7bb890e7e1b516ca458abe423e"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">arm_compute::AssemblyKernelGlue::_b</a></div><div class="ttdeci">const ITensor * _b</div><div class="ttdoc">Input B. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00072">AssemblyHelper.h:72</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a795e046c4103b68ac2d3977d903a15d4"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">arm_compute::AssemblyKernelGlue::_d</a></div><div class="ttdeci">ITensor * _d</div><div class="ttdoc">Output. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00074">AssemblyHelper.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a25380d912475d0de9f812208470ed658"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a25380d912475d0de9f812208470ed658">arm_compute::AssemblyKernelGlue::_optimised_kernel</a></div><div class="ttdeci">std::unique_ptr&lt; INEKernel &gt; _optimised_kernel</div><div class="ttdoc">Optimised NEON kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00068">AssemblyHelper.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_add93daba36f239482945a1b2428f35fc"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">arm_compute::AssemblyKernelGlue::_gemm_kernel_asm</a></div><div class="ttdeci">std::unique_ptr&lt; AssemblyGemm &gt; _gemm_kernel_asm</div><div class="ttdoc">Assembly Gemm kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00066">AssemblyHelper.h:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae2fe24707be869c9f4fef73e2d837863"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt; TypeInput, TypeOutput &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a325adbd7f57154b4dc19cc84284b474b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt;TypeInput, TypeOutput&gt;&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a>&lt; TypeInput, TypeOutput &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a class="anchor" id="a13a43e6d814de94978c515cb084873b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures the arrays pointers and strides in the assembly kernel and executes the assembly kernel. </p>
<p>The call to set_arrays is needed to deal with the input sizes containing batches (dims &gt; 2) </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> lda = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>() / <span class="keyword">sizeof</span>(TypeInput);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> ldb = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>() / <span class="keyword">sizeof</span>(TypeInput);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> ldd = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>() / <span class="keyword">sizeof</span>(TypeOutput);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// In the case of NHWC we want to interpret the output shape as 3D. Thus, the batch stride for A is</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment">// the relevant multiple of the row stride.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> is_nhwc           = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>  stride_in_bytes_a = is_nhwc ? <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">y</a>() * <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) : <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a336121cb63ed79fa0a072eed03d694ac">z</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> batch_stride_a = stride_in_bytes_a / <span class="keyword">sizeof</span>(TypeInput);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> batch_stride_d = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a336121cb63ed79fa0a072eed03d694ac">z</a>() / <span class="keyword">sizeof</span>(TypeOutput);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> multi_stride_a = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[3] / <span class="keyword">sizeof</span>(TypeInput);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> multi_stride_b = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a336121cb63ed79fa0a072eed03d694ac">z</a>() / <span class="keyword">sizeof</span>(TypeInput);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> multi_stride_d = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[3] / <span class="keyword">sizeof</span>(TypeOutput);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in0_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TypeInput *<span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">_a</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>());</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> in1_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TypeInput *<span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>());</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keyword">auto</span>       out_ptr = <span class="keyword">reinterpret_cast&lt;</span>TypeOutput *<span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">_d</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a>-&gt;set_arrays(in0_ptr, lda, batch_stride_a, multi_stride_a, in1_ptr, ldb, multi_stride_b, out_ptr, ldd, batch_stride_d, multi_stride_d);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a>-&gt;B_pretranspose_required())</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="comment">// Forcing 128-byte alignment (required by 32-bit kernels)</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> alignment   = 128;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordtype">void</span>              *raw_ptr     = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">void</span> *<span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordtype">size_t</span>             space       = <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">void</span>              *aligned_ptr = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9e51e04e3f86c823883757ef22d4f39a">support::cpp11::align</a>(alignment, <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a>-&gt;get_B_pretransposed_array_size(), raw_ptr, space);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a> == <span class="keyword">nullptr</span> || <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">_pretranspose</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">_gemm_kernel_asm</a>-&gt;pretranspose_B_array(aligned_ptr, in1_ptr, ldb, multi_stride_b);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">_b</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#afe4e1d42d62608a941124f0d50c3e48a">mark_as_unused</a>();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a38e28e556fea6e2024019dbb9c7cc943">schedule</a>(<a class="code" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a25380d912475d0de9f812208470ed658">_optimised_kernel</a>.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a5bdfad560ce4bc3d80c8c5182eba0f47"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a5bdfad560ce4bc3d80c8c5182eba0f47">arm_compute::AssemblyKernelGlue::_pretranspose</a></div><div class="ttdeci">ITensor * _pretranspose</div><div class="ttdoc">Pre-transpose tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00076">AssemblyHelper.h:76</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a336121cb63ed79fa0a072eed03d694ac"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a336121cb63ed79fa0a072eed03d694ac">arm_compute::Dimensions::z</a></div><div class="ttdeci">T z() const </div><div class="ttdoc">Alias to access the size of the third dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00091">Dimensions.h:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension. </div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a3c56e995d4dc7abbe0dc428c91677f5a"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a3c56e995d4dc7abbe0dc428c91677f5a">arm_compute::AssemblyKernelGlue::_a</a></div><div class="ttdeci">const ITensor * _a</div><div class="ttdoc">Input A. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00070">AssemblyHelper.h:70</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_afbd52c7bb890e7e1b516ca458abe423e"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#afbd52c7bb890e7e1b516ca458abe423e">arm_compute::AssemblyKernelGlue::_b</a></div><div class="ttdeci">const ITensor * _b</div><div class="ttdoc">Input B. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00072">AssemblyHelper.h:72</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a795e046c4103b68ac2d3977d903a15d4"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a795e046c4103b68ac2d3977d903a15d4">arm_compute::AssemblyKernelGlue::_d</a></div><div class="ttdeci">ITensor * _d</div><div class="ttdoc">Output. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00074">AssemblyHelper.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_ab988210662dbd3bf32fd563c7dd1bdbf"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">arm_compute::ITensor::buffer</a></div><div class="ttdeci">virtual uint8_t * buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory. ...</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a9e51e04e3f86c823883757ef22d4f39a"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a9e51e04e3f86c823883757ef22d4f39a">arm_compute::support::cpp11::align</a></div><div class="ttdeci">void * align(std::size_t alignment, std::size_t size, void *&amp;ptr, std::size_t &amp;space)</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00321">ToolchainSupport.h:321</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_afe4e1d42d62608a941124f0d50c3e48a"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#afe4e1d42d62608a941124f0d50c3e48a">arm_compute::ITensor::mark_as_unused</a></div><div class="ttdeci">void mark_as_unused() const </div><div class="ttdoc">Marks a tensor as unused. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a691c9cb93365c2e33f3429de43244098"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a691c9cb93365c2e33f3429de43244098">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const </div><div class="ttdoc">Alias to access the size of the second dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_a25380d912475d0de9f812208470ed658"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a25380d912475d0de9f812208470ed658">arm_compute::AssemblyKernelGlue::_optimised_kernel</a></div><div class="ttdeci">std::unique_ptr&lt; INEKernel &gt; _optimised_kernel</div><div class="ttdoc">Optimised NEON kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00068">AssemblyHelper.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_assembly_kernel_glue_xhtml_add93daba36f239482945a1b2428f35fc"><div class="ttname"><a href="classarm__compute_1_1_assembly_kernel_glue.xhtml#add93daba36f239482945a1b2428f35fc">arm_compute::AssemblyKernelGlue::_gemm_kernel_asm</a></div><div class="ttdeci">std::unique_ptr&lt; AssemblyGemm &gt; _gemm_kernel_asm</div><div class="ttdoc">Assembly Gemm kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_assembly_helper_8h_source.xhtml#l00066">AssemblyHelper.h:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_acb4f87f1831680d8d1b70e1bef06bb81"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#acb4f87f1831680d8d1b70e1bef06bb81">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a38e28e556fea6e2024019dbb9c7cc943"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a38e28e556fea6e2024019dbb9c7cc943">arm_compute::IScheduler::schedule</a></div><div class="ttdeci">virtual void schedule(ICPPKernel *kernel, unsigned int split_dimension)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a class="anchor" id="a3c56e995d4dc7abbe0dc428c91677f5a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>* _a</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Input A. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00070">70</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="afbd52c7bb890e7e1b516ca458abe423e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>* _b</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Input B. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00072">72</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="a795e046c4103b68ac2d3977d903a15d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>* _d</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Output. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00074">74</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="add93daba36f239482945a1b2428f35fc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml#a2b7261bda3dc469e02365df7719358b7">AssemblyGemm</a>&gt; _gemm_kernel_asm</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assembly Gemm kernel. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00066">66</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="a25380d912475d0de9f812208470ed658"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="namespacearm__compute.xhtml#a9f3ed96e009111cfbe53d3f77c712390">INEKernel</a>&gt; _optimised_kernel</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Optimised NEON kernel. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00068">68</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5bdfad560ce4bc3d80c8c5182eba0f47"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>* _pretranspose</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pre-transpose tensor. </p>

<p>Definition at line <a class="el" href="_assembly_helper_8h_source.xhtml#l00076">76</a> of file <a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/NEON/<a class="el" href="_assembly_helper_8h_source.xhtml">AssemblyHelper.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_assembly_kernel_glue.xhtml">AssemblyKernelGlue</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:40 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
