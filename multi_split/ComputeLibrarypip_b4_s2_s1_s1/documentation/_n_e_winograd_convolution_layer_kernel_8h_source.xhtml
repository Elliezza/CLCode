<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/kernels/NEWinogradConvolutionLayerKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_winograd_convolution_layer_kernel_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEWinogradConvolutionLayerKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_winograd_convolution_layer_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_NEGEMMWINOGRADCONVOLUTIONLAYERKERNEL_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_NEGEMMWINOGRADCONVOLUTIONLAYERKERNEL_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_kernel_8h.xhtml">arm_compute/core/NEON/INEKernel.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;arm_compute/core/NEON/kernels/convolution/common/convolution.hpp&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;arm_compute/core/NEON/kernels/convolution/common/tensor.hpp&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;arm_compute/core/NEON/kernels/convolution/winograd/batched_blocked_gemm.hpp&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;arm_compute/core/NEON/kernels/convolution/winograd/winograd_gemm.hpp&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">class </span>ITensor;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml">INEWinogradLayerTransformInputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a8002726bde2404f3594fd6f1febc5eed">get_input_storage_size</a>(<span class="keywordtype">int</span> n_batches, <span class="keywordtype">int</span> n_channels, <span class="keywordtype">int</span> n_rows, <span class="keywordtype">int</span> n_cols, <span class="keywordtype">bool</span> same_padding) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;input_shape, <span class="keyword">const</span> PaddingType padding_type) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(<span class="keyword">const</span> T *<span class="keyword">const</span> input, <span class="keyword">const</span> <span class="keywordtype">int</span> n_batches, <span class="keyword">const</span> <span class="keywordtype">int</span> n_rows, <span class="keyword">const</span> <span class="keywordtype">int</span> n_cols, <span class="keyword">const</span> <span class="keywordtype">int</span> n_channels, <span class="keyword">const</span> PaddingType padding, T *<span class="keyword">const</span> output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride) = 0;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a57db7dcc6716d3a676a422bb2839036f">   79</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a57db7dcc6716d3a676a422bb2839036f">~INEWinogradLayerTransformInputKernel</a>()</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;};</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">   86</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml">INEWinogradLayerTransformInputKernel</a>&lt;T&gt;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a8002726bde2404f3594fd6f1febc5eed">get_input_storage_size</a>(</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordtype">int</span>  n_batches,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordtype">int</span>  n_channels,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">int</span>  n_rows,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">int</span>  n_cols,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">bool</span> same_padding) <span class="keyword">const override</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;input_shape, <span class="keyword">const</span> PaddingType padding_type) <span class="keyword">const override</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel</a>();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  120</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEWinogradLayerTransformInputKernel&quot;</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keyword">const</span> T *<span class="keyword">const</span>    input,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>         n_batches,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>         n_rows,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>         n_cols,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>         n_channels,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">const</span> PaddingType padding,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        T *<span class="keyword">const</span>          output,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>         matrix_stride) <span class="keyword">override</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#aa223aca04dd789990b8422db5631fe61">  150</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#aa223aca04dd789990b8422db5631fe61">WinogradBase</a> = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelCols, KernelCols&gt;;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">  152</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">WinogradConv</a> = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">using</span> InputTransform = <span class="keyword">typename</span> WinogradBase::template InputTransform&lt;T&gt;;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::unique_ptr&lt;InputTransform&gt; _transform;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;};</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml">  171</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml">INEWinogradLayerTransformOutputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_output_storage_size(<span class="keywordtype">int</span> n_batches, <span class="keywordtype">int</span> n_rows, <span class="keywordtype">int</span> n_cols, <span class="keywordtype">int</span> n_output_channels, <span class="keywordtype">bool</span> same_padding) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;input_shape, <span class="keyword">const</span> PaddingType padding_type) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">virtual</span> Tensor4DShape get_output_shape(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;in_shape, <span class="keyword">const</span> PaddingType padding) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">const</span> T *<span class="keyword">const</span> output_workingspace,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      matrix_stride,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        T *<span class="keyword">const</span>       output,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_batches,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_rows,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_cols,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_channels) = 0;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml#a0bda64948b232256769698cde90fcdb0">  228</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml#a0bda64948b232256769698cde90fcdb0">~INEWinogradLayerTransformOutputKernel</a>()</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;};</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">  235</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml">INEWinogradLayerTransformOutputKernel</a>&lt;T&gt;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  238</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEWinogradLayerTransformOutputKernel&quot;</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a>();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a>(<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    ~<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment"></span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_output_storage_size(<span class="keywordtype">int</span> n_batches, <span class="keywordtype">int</span> n_rows, <span class="keywordtype">int</span> n_cols, <span class="keywordtype">int</span> n_output_channels, <span class="keywordtype">bool</span> same_padding) <span class="keyword">const override</span>;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;input_shape, <span class="keyword">const</span> PaddingType padding_type) <span class="keyword">const override</span>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    Tensor4DShape get_output_shape(<span class="keyword">const</span> KernelShape &amp;kernel_shape, <span class="keyword">const</span> Tensor4DShape &amp;in_shape, <span class="keyword">const</span> PaddingType padding) <span class="keyword">const override</span>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keyword">const</span> T *<span class="keyword">const</span> output_workingspace,</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      matrix_stride,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        T *<span class="keyword">const</span>       output,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_batches,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_rows,</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_cols,</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>      n_channels) <span class="keyword">override</span>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keyword">using</span> WinogradBase    = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">using</span> WinogradConv    = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keyword">using</span> OutputTransform = <span class="keyword">typename</span> WinogradBase::template OutputTransform&lt;T&gt;;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *_biases;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> T       *_output_workspace;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordtype">int</span>            _matrix_stride;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordtype">int</span>            _matrix_row_stride;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    T             *_output;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordtype">int</span>            _n_batches;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordtype">int</span>            _n_rows;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordtype">int</span>            _n_cols;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordtype">int</span>            _n_channels;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;};</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">  341</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">INEWinogradLayerTransformWeightsKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;{</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_weight_storage_size(<span class="keywordtype">int</span> n_output_channels, <span class="keywordtype">int</span> n_input_channels) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *weights_hwio, T *<span class="keyword">const</span> output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> n_output_channels, <span class="keyword">const</span> <span class="keywordtype">int</span> n_input_channels) = 0;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a668729f636910fd5f425cee965efee6d">  371</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a668729f636910fd5f425cee965efee6d">~INEWinogradLayerTransformWeightsKernel</a>()</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    {</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;};</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">  378</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">INEWinogradLayerTransformWeightsKernel</a>&lt;T&gt;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;{</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel</a>();</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  383</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEWinogradLayerTransformWeightsKernel&quot;</span>;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    }</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *weights_hwio, T *<span class="keyword">const</span> output, <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_stride, <span class="keyword">const</span> <span class="keywordtype">int</span> n_output_channels, <span class="keyword">const</span> <span class="keywordtype">int</span> n_input_channels) <span class="keyword">override</span>;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_weight_storage_size(<span class="keywordtype">int</span> n_output_channels, <span class="keywordtype">int</span> n_input_channels) <span class="keyword">const override</span>;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">get_matrix_stride</a>(<span class="keyword">const</span> KernelShape &amp;kernel_shape) <span class="keyword">const override</span>;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#abfab8f0d4928e1081d9f65b77933e24a">is_parallelisable</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keyword">using</span> WinogradBase     = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">using</span> WinogradConv     = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;T, T&gt;;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keyword">using</span> WeightsTransform = <span class="keyword">typename</span> WinogradBase::template WeightsTransform&lt;T&gt;;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    std::unique_ptr&lt;WeightsTransform&gt; _transform;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;};</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TIn, <span class="keyword">typename</span> TOut&gt;</div><div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">  415</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">INEWinogradLayerBatchedGEMMKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;{</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_number_gemms() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_gemms,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> M, <span class="keyword">const</span> <span class="keywordtype">int</span> K, <span class="keyword">const</span> <span class="keywordtype">int</span> N,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        a_matrix_stride,</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        a_row_stride,</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        b_matrix_stride,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        b_row_stride,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        c_matrix_stride,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        c_row_stride,</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keyword">const</span> TIn *<span class="keyword">const</span> a_ptr,</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keyword">const</span> TIn *<span class="keyword">const</span> b_ptr,</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        TOut *<span class="keyword">const</span>      c_ptr) = 0;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> get_output_tile_rows() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> get_output_tile_cols() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> get_number_blocks() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;};</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TIn, <span class="keyword">typename</span> TOut, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">  463</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">INEWinogradLayerBatchedGEMMKernel</a>&lt;TIn, TOut&gt;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;{</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00467"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#aa2895a99d9a1efae7844264931a0d348">  467</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#aa2895a99d9a1efae7844264931a0d348">WinogradBase</a> = winograd::WinogradGEMM&lt;OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;;</div><div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#acd8461f7d784d4c09b73447f357e6b1a">  469</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#acd8461f7d784d4c09b73447f357e6b1a">WinogradConv</a> = <span class="keyword">typename</span> WinogradBase::template Convolution&lt;TIn, TOut&gt;;</div><div class="line"><a name="l00471"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#a14ba69200a7c35d6bc6f12734c26775c">  471</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#a14ba69200a7c35d6bc6f12734c26775c">MultiGEMM</a> = winograd::BatchedBlockedGemm&lt;WinogradConv::M_BLOCK, WinogradConv::N_BLOCK, TIn, TOut&gt;;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  473</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEWinogradLayerBatchedGEMMKernel&quot;</span>;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    }</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a>();</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a>(<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;operator=(<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    ~<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">NEWinogradLayerBatchedGEMMKernel</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_number_gemms() <span class="keyword">const override</span>;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keywordtype">int</span>          get_output_tile_rows() <span class="keyword">const override</span>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keywordtype">int</span>          get_output_tile_cols() <span class="keyword">const override</span>;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <span class="keywordtype">int</span>          get_number_blocks() <span class="keyword">const override</span>;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">configure</a>(</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_gemms,</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> M, <span class="keyword">const</span> <span class="keywordtype">int</span> K, <span class="keyword">const</span> <span class="keywordtype">int</span> N,</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        a_matrix_stride,</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        a_row_stride,</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        b_matrix_stride,</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        b_row_stride,</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        c_matrix_stride,</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>        c_row_stride,</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keyword">const</span> TIn *<span class="keyword">const</span> a_ptr,</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keyword">const</span> TIn *<span class="keyword">const</span> b_ptr,</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        TOut *<span class="keyword">const</span>      c_ptr) <span class="keyword">override</span>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">a</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">c</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">alpha</a>, <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>());</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span>           _output_tile_rows = OutputTileRows;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span>           _output_tile_cols = OutputTileCols;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    std::unique_ptr&lt;MultiGEMM&gt; _gemms;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;};</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_NEGEMMWINOGRADCONVOLUTIONLAYERKERNEL_H__*/</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml_af814ff5e96f40f1cccf809b2b4ee19ef"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">arm_compute::ICPPKernel::run</a></div><div class="ttdeci">virtual void run(const Window &amp;window, const ThreadInfo &amp;info)=0</div><div class="ttdoc">Execute the kernel on the passed window. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab146b9cbab6e73e7588b240dc709fe01"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">arm_compute::test::validation::beta</a></div><div class="ttdeci">beta</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">arm_compute::NEWinogradLayerTransformOutputKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd output transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00235">NEWinogradConvolutionLayerKernel.h:235</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEWinogradLayerBatchedGEMMKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00473">NEWinogradConvolutionLayerKernel.h:473</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aac40b7097f2bda9274ae07fa33d15a79"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aac40b7097f2bda9274ae07fa33d15a79">arm_compute::test::validation::a</a></div><div class="ttdeci">CLTensor a</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00121">GEMM.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel_xhtml_a2ac7c7acdb2d7dea85085c2dff52687f"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a2ac7c7acdb2d7dea85085c2dff52687f">arm_compute::INEWinogradLayerTransformInputKernel::configure</a></div><div class="ttdeci">virtual void configure(const T *const input, const int n_batches, const int n_rows, const int n_cols, const int n_channels, const PaddingType padding, T *const output, const int matrix_stride)=0</div><div class="ttdoc">Configure the output transform kernel. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00035">ICPPKernel.h:35</a></div></div>
<div class="ttc" id="structarm__compute_1_1_winograd_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_winograd_info.xhtml">arm_compute::WinogradInfo</a></div><div class="ttdoc">Winograd information. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01140">Types.h:1140</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a809d18ccde99d938a68cb90ef53aa749"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">arm_compute::test::validation::winograd_info</a></div><div class="ttdeci">winograd_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00173">Winograd.cpp:173</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">arm_compute::NEWinogradLayerBatchedGEMMKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00463">NEWinogradConvolutionLayerKernel.h:463</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEWinogradLayerTransformWeightsKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00383">NEWinogradConvolutionLayerKernel.h:383</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml_aa2895a99d9a1efae7844264931a0d348"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#aa2895a99d9a1efae7844264931a0d348">arm_compute::NEWinogradLayerBatchedGEMMKernel::WinogradBase</a></div><div class="ttdeci">winograd::WinogradGEMM&lt; OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt; WinogradBase</div><div class="ttdoc">Winograd base kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00467">NEWinogradConvolutionLayerKernel.h:467</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00051">Error.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel_xhtml_a0bda64948b232256769698cde90fcdb0"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml#a0bda64948b232256769698cde90fcdb0">arm_compute::INEWinogradLayerTransformOutputKernel::~INEWinogradLayerTransformOutputKernel</a></div><div class="ttdeci">virtual ~INEWinogradLayerTransformOutputKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00228">NEWinogradConvolutionLayerKernel.h:228</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a096668313a9a819d54a2e65ec21ff0cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a096668313a9a819d54a2e65ec21ff0cc">arm_compute::test::validation::info</a></div><div class="ttdeci">src info() -&gt; set_format(Format::S16)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6813132c943295888972727864ea5c2f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(dst.info() -&gt;valid_region(), dst_valid_region)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">arm_compute::INEWinogradLayerTransformWeightsKernel</a></div><div class="ttdoc">Interface for the NEON kernel to perform Winograd weights transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00341">NEWinogradConvolutionLayerKernel.h:341</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_aa223aca04dd789990b8422db5631fe61"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#aa223aca04dd789990b8422db5631fe61">arm_compute::NEWinogradLayerTransformInputKernel::WinogradBase</a></div><div class="ttdeci">winograd::WinogradGEMM&lt; OutputTileRows, OutputTileCols, KernelCols, KernelCols &gt; WinogradBase</div><div class="ttdoc">Winograd base kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00150">NEWinogradConvolutionLayerKernel.h:150</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_abfab8f0d4928e1081d9f65b77933e24a"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#abfab8f0d4928e1081d9f65b77933e24a">arm_compute::IKernel::is_parallelisable</a></div><div class="ttdeci">virtual bool is_parallelisable() const </div><div class="ttdoc">Indicates whether or not the kernel is parallelisable. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEWinogradLayerTransformOutputKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00238">NEWinogradConvolutionLayerKernel.h:238</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel_xhtml_a668729f636910fd5f425cee965efee6d"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a668729f636910fd5f425cee965efee6d">arm_compute::INEWinogradLayerTransformWeightsKernel::~INEWinogradLayerTransformWeightsKernel</a></div><div class="ttdeci">virtual ~INEWinogradLayerTransformWeightsKernel()</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00371">NEWinogradConvolutionLayerKernel.h:371</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">arm_compute::NEWinogradLayerTransformInputKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd input transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00086">NEWinogradConvolutionLayerKernel.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel_xhtml_a57db7dcc6716d3a676a422bb2839036f"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a57db7dcc6716d3a676a422bb2839036f">arm_compute::INEWinogradLayerTransformInputKernel::~INEWinogradLayerTransformInputKernel</a></div><div class="ttdeci">virtual ~INEWinogradLayerTransformInputKernel()</div><div class="ttdoc">Destructor. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00079">NEWinogradConvolutionLayerKernel.h:79</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel_xhtml_ae25b6ed77179808984b17c39e078ad96"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#ae25b6ed77179808984b17c39e078ad96">arm_compute::INEWinogradLayerTransformInputKernel::get_matrix_stride</a></div><div class="ttdeci">virtual int get_matrix_stride(const KernelShape &amp;kernel_shape, const Tensor4DShape &amp;input_shape, const PaddingType padding_type) const =0</div><div class="ttdoc">Gets the stride between matrices in the input worspace. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml_a14ba69200a7c35d6bc6f12734c26775c"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#a14ba69200a7c35d6bc6f12734c26775c">arm_compute::NEWinogradLayerBatchedGEMMKernel::MultiGEMM</a></div><div class="ttdeci">winograd::BatchedBlockedGemm&lt; WinogradConv::M_BLOCK, WinogradConv::N_BLOCK, TIn, TOut &gt; MultiGEMM</div><div class="ttdoc">Winograd batched blocked GEMM operator. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00471">NEWinogradConvolutionLayerKernel.h:471</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_output_kernel.xhtml">arm_compute::INEWinogradLayerTransformOutputKernel</a></div><div class="ttdoc">Interface for the NEON kernel to perform Winograd output transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00171">NEWinogradConvolutionLayerKernel.h:171</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">arm_compute::NEWinogradLayerTransformWeightsKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd weights transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00378">NEWinogradConvolutionLayerKernel.h:378</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel_xhtml_a8002726bde2404f3594fd6f1febc5eed"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml#a8002726bde2404f3594fd6f1febc5eed">arm_compute::INEWinogradLayerTransformInputKernel::get_input_storage_size</a></div><div class="ttdeci">virtual unsigned int get_input_storage_size(int n_batches, int n_channels, int n_rows, int n_cols, bool same_padding) const =0</div><div class="ttdoc">Determine how much memory (in units of TIn) to allocate for the transformed input. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_af17b2792d63e38a0eea385635191e836"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#af17b2792d63e38a0eea385635191e836">arm_compute::NEWinogradLayerTransformInputKernel::WinogradConv</a></div><div class="ttdeci">typename WinogradBase::template Convolution&lt; T, T &gt; WinogradConv</div><div class="ttdoc">Winograd convolution kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00152">NEWinogradConvolutionLayerKernel.h:152</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00131">CPPTypes.h:131</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEWinogradLayerTransformInputKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00120">NEWinogradConvolutionLayerKernel.h:120</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml_acd8461f7d784d4c09b73447f357e6b1a"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml#acd8461f7d784d4c09b73447f357e6b1a">arm_compute::NEWinogradLayerBatchedGEMMKernel::WinogradConv</a></div><div class="ttdeci">typename WinogradBase::template Convolution&lt; TIn, TOut &gt; WinogradConv</div><div class="ttdoc">Winograd convolution kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00469">NEWinogradConvolutionLayerKernel.h:469</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_input_kernel.xhtml">arm_compute::INEWinogradLayerTransformInputKernel</a></div><div class="ttdoc">Interface for the NEON kernel to perform Winograd input transform. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00039">NEWinogradConvolutionLayerKernel.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a497347573faa3778743ddf277f861094"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a497347573faa3778743ddf277f861094">arm_compute::test::validation::c</a></div><div class="ttdeci">CLTensor c</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00123">GEMM.cpp:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml">arm_compute::GEMMInfo</a></div><div class="ttdoc">GEMM information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01078">Types.h:1078</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a62197192f0fbf4e0675eb37be1c4c175"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a62197192f0fbf4e0675eb37be1c4c175">arm_compute::test::validation::alpha</a></div><div class="ttdeci">alpha</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00115">GEMM.cpp:115</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7b8004eef325a40dd43eb80755610fff"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b8004eef325a40dd43eb80755610fff">arm_compute::test::validation::b</a></div><div class="ttdeci">CLTensor b</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00122">GEMM.cpp:122</a></div></div>
<div class="ttc" id="_i_n_e_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_kernel_8h.xhtml">INEKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_a3f5646133956f06348b310ccc3d36353"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#a3f5646133956f06348b310ccc3d36353">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const </div><div class="ttdoc">The maximum window the kernel can be executed on. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_batched_g_e_m_m_kernel.xhtml">arm_compute::INEWinogradLayerBatchedGEMMKernel</a></div><div class="ttdoc">Interface for the NEON kernel to perform Winograd. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00415">NEWinogradConvolutionLayerKernel.h:415</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_2c3c4cb85e732569e2614ad40a451d53.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_winograd_convolution_layer_kernel_8h.xhtml">NEWinogradConvolutionLayerKernel.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
