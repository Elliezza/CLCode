<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CPUInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_p_u_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CPUInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac10ab8f6db7ac07935466d38350e7c9b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ac10ab8f6db7ac07935466d38350e7c9b">CPUInfo</a> ()</td></tr>
<tr class="memdesc:ac10ab8f6db7ac07935466d38350e7c9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac10ab8f6db7ac07935466d38350e7c9b">More...</a><br /></td></tr>
<tr class="separator:ac10ab8f6db7ac07935466d38350e7c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c8dff64ce1ad7bdae70879024bde002"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a5c8dff64ce1ad7bdae70879024bde002">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;cpuinfo)=delete</td></tr>
<tr class="memdesc:a5c8dff64ce1ad7bdae70879024bde002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable copy constructor and assignment operator to avoid copying the vector of CPUs each time <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> is initialized once in the <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" title="Scheduler interface to run kernels. ">IScheduler</a> and <a class="el" href="structarm__compute_1_1_thread_info.xhtml" title="Information about executing thread and CPU. ">ThreadInfo</a> will get a pointer to it.  <a href="#a5c8dff64ce1ad7bdae70879024bde002">More...</a><br /></td></tr>
<tr class="separator:a5c8dff64ce1ad7bdae70879024bde002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efc7dde750cb74d8377fbb439bc4892"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a0efc7dde750cb74d8377fbb439bc4892">CPUInfo</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;cpuinfo)=delete</td></tr>
<tr class="separator:a0efc7dde750cb74d8377fbb439bc4892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cacb98f89ed3d565b7b7e4dc39e7295"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a4cacb98f89ed3d565b7b7e4dc39e7295">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;cpuinfo)=delete</td></tr>
<tr class="separator:a4cacb98f89ed3d565b7b7e4dc39e7295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ec830b104ae38449814a489ec9ea11c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3ec830b104ae38449814a489ec9ea11c">CPUInfo</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;cpuinfo)=delete</td></tr>
<tr class="separator:a3ec830b104ae38449814a489ec9ea11c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2b4655c00651fac1368ce2ca3f0d87"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a8a2b4655c00651fac1368ce2ca3f0d87">has_fp16</a> () const </td></tr>
<tr class="memdesc:a8a2b4655c00651fac1368ce2ca3f0d87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports fp16.  <a href="#a8a2b4655c00651fac1368ce2ca3f0d87">More...</a><br /></td></tr>
<tr class="separator:a8a2b4655c00651fac1368ce2ca3f0d87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9fee9479c54cf3efc7ac36cf7902769"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aa9fee9479c54cf3efc7ac36cf7902769">has_dotprod</a> () const </td></tr>
<tr class="memdesc:aa9fee9479c54cf3efc7ac36cf7902769"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports dot product.  <a href="#aa9fee9479c54cf3efc7ac36cf7902769">More...</a><br /></td></tr>
<tr class="separator:aa9fee9479c54cf3efc7ac36cf7902769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fd139da3ff8770c43d3db743517cbd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a7fd139da3ff8770c43d3db743517cbd7">get_cpu_model</a> (unsigned int cpuid) const </td></tr>
<tr class="memdesc:a7fd139da3ff8770c43d3db743517cbd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cpu model for a given cpuid.  <a href="#a7fd139da3ff8770c43d3db743517cbd7">More...</a><br /></td></tr>
<tr class="separator:a7fd139da3ff8770c43d3db743517cbd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a92d9020af0ada82f7437e7a1425224"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a6a92d9020af0ada82f7437e7a1425224">get_cpu_model</a> () const </td></tr>
<tr class="memdesc:a6a92d9020af0ada82f7437e7a1425224"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current thread's cpu model.  <a href="#a6a92d9020af0ada82f7437e7a1425224">More...</a><br /></td></tr>
<tr class="separator:a6a92d9020af0ada82f7437e7a1425224"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9c3be024981dcb76d45e31f7ba4812"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aaa9c3be024981dcb76d45e31f7ba4812">get_L1_cache_size</a> () const </td></tr>
<tr class="memdesc:aaa9c3be024981dcb76d45e31f7ba4812"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L1 cache size.  <a href="#aaa9c3be024981dcb76d45e31f7ba4812">More...</a><br /></td></tr>
<tr class="separator:aaa9c3be024981dcb76d45e31f7ba4812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9d9d483cf960f3a82a423ced1f2a8fc"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ae9d9d483cf960f3a82a423ced1f2a8fc">get_L2_cache_size</a> () const </td></tr>
<tr class="memdesc:ae9d9d483cf960f3a82a423ced1f2a8fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L2 cache size.  <a href="#ae9d9d483cf960f3a82a423ced1f2a8fc">More...</a><br /></td></tr>
<tr class="separator:ae9d9d483cf960f3a82a423ced1f2a8fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3a3b116920c82d5047b3928f5ddfb7cf">set_L1_cache_size</a> (unsigned int size)</td></tr>
<tr class="memdesc:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the L1 cache size.  <a href="#a3a3b116920c82d5047b3928f5ddfb7cf">More...</a><br /></td></tr>
<tr class="separator:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacee1df94b722ce49632be47b6578b3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aacee1df94b722ce49632be47b6578b3d">set_L2_cache_size</a> (unsigned int size)</td></tr>
<tr class="memdesc:aacee1df94b722ce49632be47b6578b3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the L2 cache size.  <a href="#aacee1df94b722ce49632be47b6578b3d">More...</a><br /></td></tr>
<tr class="separator:aacee1df94b722ce49632be47b6578b3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dfc7d658828318e6c54988913c22ec7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a6dfc7d658828318e6c54988913c22ec7">set_fp16</a> (const bool fp16)</td></tr>
<tr class="memdesc:a6dfc7d658828318e6c54988913c22ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set fp16 support.  <a href="#a6dfc7d658828318e6c54988913c22ec7">More...</a><br /></td></tr>
<tr class="separator:a6dfc7d658828318e6c54988913c22ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d2db590ac4d869e8feb648beb80fcea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a6d2db590ac4d869e8feb648beb80fcea">set_dotprod</a> (const bool dotprod)</td></tr>
<tr class="memdesc:a6d2db590ac4d869e8feb648beb80fcea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set dot product support.  <a href="#a6d2db590ac4d869e8feb648beb80fcea">More...</a><br /></td></tr>
<tr class="separator:a6d2db590ac4d869e8feb648beb80fcea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb24f7c57aaeee1da27db2b4b52434ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#acb24f7c57aaeee1da27db2b4b52434ee">set_cpu_model</a> (unsigned int cpuid, <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> model)</td></tr>
<tr class="memdesc:acb24f7c57aaeee1da27db2b4b52434ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the cpumodel for a given cpu core.  <a href="#acb24f7c57aaeee1da27db2b4b52434ee">More...</a><br /></td></tr>
<tr class="separator:acb24f7c57aaeee1da27db2b4b52434ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba3b726afdf36bdcd7496e1bfb523e71"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aba3b726afdf36bdcd7496e1bfb523e71">set_cpu_num</a> (unsigned int cpu_count)</td></tr>
<tr class="memdesc:aba3b726afdf36bdcd7496e1bfb523e71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set max number of cpus.  <a href="#aba3b726afdf36bdcd7496e1bfb523e71">More...</a><br /></td></tr>
<tr class="separator:aba3b726afdf36bdcd7496e1bfb523e71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="_c_p_p_types_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac10ab8f6db7ac07935466d38350e7c9b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="a0efc7dde750cb74d8377fbb439bc4892"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3ec830b104ae38449814a489ec9ea11c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7fd139da3ff8770c43d3db743517cbd7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpuid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cpu model for a given cpuid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpuid</td><td>the id of the cpu core to be retrieved,</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> of the cpuid queiried. </dd></dl>

</div>
</div>
<a class="anchor" id="a6a92d9020af0ada82f7437e7a1425224"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current thread's cpu model. </p>
<dl class="section return"><dt>Returns</dt><dd>Current thread's <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aaa9c3be024981dcb76d45e31f7ba4812"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L1_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L1 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

</div>
</div>
<a class="anchor" id="ae9d9d483cf960f3a82a423ced1f2a8fc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L2_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L2 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

</div>
</div>
<a class="anchor" id="aa9fee9479c54cf3efc7ac36cf7902769"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_dotprod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports dot product. </p>
<dl class="section return"><dt>Returns</dt><dd>true of the cpu supports dot product, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a8a2b4655c00651fac1368ce2ca3f0d87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_fp16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports fp16. </p>
<dl class="section return"><dt>Returns</dt><dd>true of the cpu supports fp16, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a5c8dff64ce1ad7bdae70879024bde002"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disable copy constructor and assignment operator to avoid copying the vector of CPUs each time <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> is initialized once in the <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" title="Scheduler interface to run kernels. ">IScheduler</a> and <a class="el" href="structarm__compute_1_1_thread_info.xhtml" title="Information about executing thread and CPU. ">ThreadInfo</a> will get a pointer to it. </p>

</div>
</div>
<a class="anchor" id="a4cacb98f89ed3d565b7b7e4dc39e7295"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acb24f7c57aaeee1da27db2b4b52434ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_cpu_model </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpuid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the cpumodel for a given cpu core. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpuid</td><td>the id of the core to be set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">model</td><td>the <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aba3b726afdf36bdcd7496e1bfb523e71"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_cpu_num </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpu_count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set max number of cpus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpu_count</td><td>the number of CPUs in the system. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6d2db590ac4d869e8feb648beb80fcea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_dotprod </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>dotprod</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set dot product support. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dotprod</td><td>whether the cpu supports dot product. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6dfc7d658828318e6c54988913c22ec7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_fp16 </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>fp16</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set fp16 support. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp16</td><td>whether the cpu supports fp16. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3a3b116920c82d5047b3928f5ddfb7cf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_L1_cache_size </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the L1 cache size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the new size to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aacee1df94b722ce49632be47b6578b3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_L2_cache_size </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the L2 cache size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the new size to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/CPP/<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:41 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
