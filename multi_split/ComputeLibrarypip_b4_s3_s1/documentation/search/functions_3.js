var searchData=
[
  ['data',['data',['../classarm__compute_1_1_c_l_lut_allocator.xhtml#a6a731c70d12750586b67c6cde637b650',1,'arm_compute::CLLutAllocator::data()'],['../classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6a731c70d12750586b67c6cde637b650',1,'arm_compute::CLTensorAllocator::data()'],['../classarm__compute_1_1_g_c_tensor_allocator.xhtml#a6a731c70d12750586b67c6cde637b650',1,'arm_compute::GCTensorAllocator::data()'],['../classarm__compute_1_1_lut_allocator.xhtml#a738d0f4e90cfddb07316f368a855e50b',1,'arm_compute::LutAllocator::data()'],['../classarm__compute_1_1_tensor_allocator.xhtml#a738d0f4e90cfddb07316f368a855e50b',1,'arm_compute::TensorAllocator::data()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef',1,'arm_compute::test::CLAccessor::data() const '],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::CLAccessor::data()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#ad3b74abc0bab69f337c70783e73f5bef',1,'arm_compute::test::Accessor::data() const '],['../classarm__compute_1_1test_1_1_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::Accessor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a0c52a8f0085b55d907af7210ef2069d0',1,'arm_compute::test::SimpleTensor::data() const '],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#adc1e16b293a89a9ccc9541058b5ca560',1,'arm_compute::test::SimpleTensor::data()']]],
  ['data_5flayout',['data_layout',['../classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::ITensorInfo::data_layout()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::SubTensorInfo::data_layout()'],['../classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::TensorInfo::data_layout()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::CLAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::GCAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::test::IAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::Accessor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensor::data_layout()']]],
  ['data_5fsize_5ffrom_5ftype',['data_size_from_type',['../namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab',1,'arm_compute']]],
  ['data_5ftest_5fcase',['DATA_TEST_CASE',['../namespacearm__compute_1_1test_1_1validation.xhtml#a35d3ab6d678579401ec6efeccd788c3b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceU8Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab71f703bd3f185e8d06c405e0d15d52a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceS16Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3ca1814eff79e9a3d6d693849683d8f1',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AccumulateS16Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a77a7b07127f4aa5d92f20e6014db8867',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AccumulateU8Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a122e3a9ceeb35b23b5d9e0ecaff76e50',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), CNNDataTypes), framework::dataset::make(&quot;InPlace&quot;,{false, true})), shape, data_type, in_place)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae3681ca4824f80d825c6a6a249bdc614',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU),})), framework::dataset::make(&quot;Expected&quot;,{false, false, true, true, false, false, false, true, true})), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aca4dbda19b61b2d72a4d498d03c97f83',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;Input2Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;Expected&quot;,{true, true, false, false, false, false, true})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa4a6e9fa189c54b63aef5111693d855b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;ConvertPolicy&quot;,{ConvertPolicy::SATURATE, ConvertPolicy::WRAP})), shape, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0a202aebdc4af23a8c566add5554b9e7',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::U8, DataType::S16})), framework::dataset::make(&quot;ConvertPolicy&quot;,{ConvertPolicy::SATURATE, ConvertPolicy::WRAP})), shape, data_type, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab844c752ba7cb8da9d8934794bfbab8c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::U8, DataType::S16})), framework::dataset::make(&quot;DataType&quot;,{DataType::U8, DataType::S16})), framework::dataset::make(&quot;ConvertPolicy&quot;,{ConvertPolicy::SATURATE, ConvertPolicy::WRAP})), shape, data_type1, data_type2, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff0f85973d2080e005fefa8732d3b2e4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;,{false, true}), framework::dataset::make(&quot;UseGamma&quot;,{false, true}))), framework::dataset::make(&quot;DataType&quot;,{DataType::QS8, DataType::QS16, DataType::F16, DataType::F32})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})), shape0, shape1, epsilon, use_gamma, use_beta, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa707ff584caaa127d96531cf08e274d8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(),})), framework::dataset::make(&quot;MVBGInfo&quot;,{TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f, 2.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f, 2.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), ActivationLayerInfo(), ActivationLayerInfo(),})), framework::dataset::make(&quot;Expected&quot;,{true, false, false, false, false, false, false, false, false, true, true})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a43b142f2fd7735c8dbb2b1b4e456482b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af654ad5ee4e9af35cd82a2a0f3f8e1aa',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), datasets::BorderModes()), shape, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a19d41bc377e61f6e095650006e3a5705',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;,{Format::RGB888, Format::RGBA8888})), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4681151abc8c89179b796af5daba7a7f',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;,{Format::YUYV422, Format::UYVY422})), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac9971715ed56d3e3b1b60237c683a87c',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;,{Format::IYUV, Format::YUV444, Format::NV12, Format::NV21})), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad1c198082b24a308f1d479a64634a6dc',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractRGBADataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9adefa93f6a8d40b690373c0d3b697c0',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractYUVDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab17d85ca94ce27b1318a258babe9f0c0',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractYUVPlanarDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8529b8f2cf6b3d1067e6f3172bfd07cb',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallRandomChannelShuffleLayerDataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32})), shape, num_groups, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aeb814e22229941c876c5013b7699d073',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::U8, DataType::S16})), datasets::BorderModes()), framework::dataset::make(&quot;filter_size&quot;,{3})), shape, output_data_type, border_mode, filter_size)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a51dee1db18e29829c9ed197d78fda7d4',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32, 0), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16, 0), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2)})), framework::dataset::make(&quot;GpuTarget&quot;,{GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST})), framework::dataset::make(&quot;Dilation&quot;,{Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U),})),
framework::dataset::make(&quot;EnableFastMath&quot;,{false, false, false, false, false, false, true, true})),
framework::dataset::make(&quot;Expected&quot;,{ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM,})), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9ea126361164d2410c0ada82453e9903',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), CNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abe95cd0bbd0e16272be4bf41d7a17ad5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL,(combine(datasets::SmallDeconvolutionShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32))), input_shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8c40af5b649a983a845e5bf8f0ba132c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 4), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 11), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QS8, 5), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32, 11), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(1U), 1, DataType::F16, 0), TensorInfo(TensorShape(1U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U), 1, DataType::F32, 5), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32, 11), TensorInfo(TensorShape(1U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 5), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;PadStrideInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0),})), framework::dataset::make(&quot;ax&quot;,{1U, 1U, 1U, 1U, 0U, 0U,})), framework::dataset::make(&quot;ay&quot;,{1U, 1U, 1U, 1U, 0U, 0U,})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, true})), input_info, weights_info, bias_info, output_info, pad_info, ax, ay, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3af7c449ec636cdb56f09c7bb9815ddd',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;ConvertPolicy&quot;,{ConvertPolicy::SATURATE, ConvertPolicy::WRAP})), DepthConvertLayerShiftDataset), shape, policy, shift)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3a4dca9a6fcebd771852954387dda89a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::QS8, DataType::QS16})), framework::dataset::make(&quot;ConvertPolicy&quot;,{ConvertPolicy::SATURATE, ConvertPolicy::WRAP})), DepthConvertLayerFixedPointQuantizedDataset), shape, dt, policy, fixed_point_position)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0230fdd4952937ef0aada085bf021f0e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32, 0), TensorInfo(TensorShape(50U, 32U, 8U), 1, DataType::QASYMM8, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::QASYMM8, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8, 0),})), framework::dataset::make(&quot;BiasesInfo&quot;,{TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::S32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(24U), 1, DataType::S32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(48U, 30U, 24U), 1, DataType::QASYMM8, 0),})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0),})), framework::dataset::make(&quot;DepthMultiplier&quot;,{1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 3,})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LINEAR), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, false, false, false, true, true})), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4700960adf5bca330984601fcd90c1eb',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8, 0),})), framework::dataset::make(&quot;BiasesInfo&quot;,{TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(24U), 1, DataType::S32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8, 0),})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0),})), framework::dataset::make(&quot;DepthMultiplier&quot;,{1, 1, 3, 1, 1, 1, 2, 3,})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, true, true})), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afd3bff121f3d1b361014931aba336060',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(DequantizationShapes, framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a712c785a9475eb2bb0a5a24e43d282cc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4ad40d7a7f1d18538b265c0aa8a6ea88',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 23U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32, 0), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 23U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0)})), framework::dataset::make(&quot;GpuTarget&quot;,{GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST})), framework::dataset::make(&quot;Dilation&quot;,{Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 2U), Size2D(3U, 3U)})), framework::dataset::make(&quot;Expected&quot;,{ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM})), input_info, weights_info, output_info, conv_info, gpu_target, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8358bc12f3ac1a3d9bc6ba573ada2316',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallDilatedConvolutionLayerDataset(), datasets::LargeDilatedConvolutionLayerDataset()), CNNDataTypes), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a00be49808b9902e928f3d8dae10b3528',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;BiasesInfo&quot;,{TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, false, false, false, true})), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a03ce389355dedb591f21f5abc0f22cce',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1e96c6c2da521e248fa7b6ecb2a5cab7',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), framework::dataset::make(&quot;SuppressNonMax&quot;,{false, true})), framework::dataset::make(&quot;BorderMode&quot;, BorderMode::UNDEFINED)), shape, format, suppress_nonmax, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6977e5dada34102dfca07ad1bd3acc63',1,'arm_compute::test::validation::DATA_TEST_CASE(FillBorder, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallShapes(), datasets::BorderModes()), BorderSizesDataset), PaddingSizesDataset), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, border_mode, size, padding, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a993ad7954889c7044c5d3ccd82243f6d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallFullyConnectedLayerDataset(), datasets::LargeFullyConnectedLayerDataset()), FullyConnectedParameters), CNNDataTypes), src_shape, weights_shape, bias_shape, dst_shape, transpose_weights, reshape_weights, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6a3174b2b942f35be581e0a70115297b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::QS8, 2), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(315U, 271U), 1, DataType::QS8, 3), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 231U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32),})), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::QS8, 2), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::QS8, 3), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32),})), framework::dataset::make(&quot;TransposeWeights&quot;,{true, true, true, false, true, true})), framework::dataset::make(&quot;ReshapedWeights&quot;,{false, false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;,{false, false, true, true, false, false})), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a370c6df0823b292ef89726547ce83cc0',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, large_gaussian_pyramid_levels, shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac60bce01d83538dd27cddcbea97046c8',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, framework::dataset::concat(datasets::SmallGEMMLowpDataset(), datasets::LargeGEMMLowpDataset()), shape_a, shape_b, shape_c, a_offset, b_offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae408ebf375fe9401ddb3fc30be6ee254',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), quantize_down_int32_to_uint8_scale_cases), shape, result_offset, result_mult_int, result_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af7abb3c5ef69509a8a8c2ec8e7dea242',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), quantize_down_int32_to_uint8_scale_by_fixedpoint_cases), shape, result_fixedpoint_multiplier, result_shift, result_offset_after_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a07488d59b3ffaa49592976f74b50e62e',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, block_size, border_mode, use_fp16, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1bfcab4437a2df46720e9cf0b19e2f73',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(128U, 64U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32)})), framework::dataset::make(&quot;Axis&quot;,{0U, 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, true})), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a76d0bdef62f9218c92847a6a6c4d41b6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 274U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F16, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 274U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F16, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 22U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;PadStride&quot;,{PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 1, 0, 0, 0, DimensionRoundingType::FLOOR), PadStrideInfo(2, 1, 0, 0)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, true})), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac02f7704050bf75595bbb4009a6bd12c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallLocallyConnectedDataset(), datasets::LargeLocallyConnectedDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), src_shape, weights_shape, bias_shape, dst_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af4778f93858be9f3d668e443f29d3411',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(8U, 2U), 1, DataType::U8, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;InputWeightsInfo&quot;,{TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;,{TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;CellBiasInfo&quot;,{TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ProjectionBiasInfo&quot;,{TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;CellStateInfo&quot;,{TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ScratchInfo&quot;,{TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(12U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, false})), input_info, input_weights_info, recurrent_weights_info, cell_bias_info, projection_bias_info, cell_state_info, output_info, scratch_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa448e5cad10449e32daa050b861dac3e',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::S16, DataType::S32})), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af47ccf8173fbf22b22f0649949789046',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), datasets::NonLinearFilterFunctions()), framework::dataset::make(&quot;MaskSize&quot;,{3U, 5U})), datasets::MatrixPatterns()), datasets::BorderModes()), shape, function, mask_size, pattern, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a692cf4b1d688f13abdc57d0713b90ed7',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 4), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;NormInfo&quot;,{NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 5),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, true})), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9fef1defe4d1be1c781ab819d46ad1e9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::U16),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 5U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U, 37U, 27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(21U, 64U, 2U, 128U), 1, DataType::F32), TensorInfo(TensorShape(2U, 21U, 64U, 128U), 1, DataType::U16),})), framework::dataset::make(&quot;PermutationVector&quot;,{PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(1U, 1U, 1U, 1U), PermutationVector(2U, 1U, 3U, 0U), PermutationVector(3U, 2U, 1U, 0U),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true, true, true, false, false, false, false})), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab1b781bfa8aede873549ccc651f6bcf8',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small4DShapes(), framework::dataset::make(&quot;DataType&quot;,{DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32})), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1b6fe9d1f1a157a4208b976d197d4f04',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;Input2Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS16, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;Scale&quot;,{2.f, 2.f, 2.f,-1.f, 1.f, 1.f, 1.f, 1.f, 3.f})), framework::dataset::make(&quot;Expected&quot;,{true, true, false, false, false, false, false, false, false})), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1f9e31f20d51bd86052dce3bbb32ff16',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 4), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS16, 11), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8, 0), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::QS8, 5), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::QS16, 11), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8, 0), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;PoolInfo&quot;,{PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, true, false, false, false, true, false, true})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6da83731448ca19e1a954872f123f45c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(QuantizationShapes, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ada475a940bab0a1809774c87d1223989',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32)})), framework::dataset::make(&quot;Axis&quot;,{0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, true})), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad24f0eb2b1d7cb2b9d5a3acdc8c0be38',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR})), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;BorderModes&quot;,{BorderMode::UNDEFINED, BorderMode::CONSTANT})), shape, policy, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab89103c7ff68898abd1789bf732cc999',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U), 1, DataType::U8, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;,{TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;HiddenStateInfo&quot;,{TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false})), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8faa3a9f1711901fe067c566a1a09f7b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::MediumShapes(), datasets::LargeShapes()), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR})), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a824b5a8e3c4e7db5fb9e67ebae18e396',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SoftmaxLayerSmallShapes(), datasets::SoftmaxLayerLargeShapes()), CNNDataTypes), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7db30180ae79508c4f29f128d46bca54',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, true, true, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aed9aa4d1158f6ac09286cd55d3494c8b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::U8, DataType::S16})), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae7ddc226714d859ef20d3f5bafc55c38',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), datasets::MixedThresholdDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, threshold, false_value, true_value, type, upper, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a610ce278b7461a74fb33d4881cf8b809',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32})), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9784587ac5d84c4f806fe3d8072a897d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR})), datasets::BorderModes()), shape, data_type, policy, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a82198f31505f1872422da35d6387b7ac',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;,{TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;InputInfo2&quot;,{TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(47U, 27U, 5U), 1, DataType::F16, 0), TensorInfo(TensorShape(75U, 12U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 27U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 27U, 5U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, true})), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a273a18c5a1ff725a1f3ba44fab48f188',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 33U, 4U), 1, DataType::F32), TensorInfo(TensorShape(34U, 42U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(31U, 37U, 37U), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 1U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 442U, 16U), 1, DataType::F32), TensorInfo(TensorShape(7U, 320U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(37U, 304U, 16U), 1, DataType::F32)})), framework::dataset::make(&quot;WinogradInfo&quot;,{WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(2, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 33U), PadStrideInfo(1, 1, 0, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(34U, 42U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(31U, 37U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false})), input_info, output_info, winograd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1c070c74e504059d7c7f78219cd5c3e1',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallWinogradInputTransformDataset(), datasets::LargeWinogradInputTransformDataset()), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_in, winograd_info, data_layout, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aee2a24d28b5b24452c348a21f156c83b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(framework::dataset::concat(datasets::Small3x3Shapes(), datasets::Large3x3Shapes()), framework::dataset::make(&quot;OutputTile&quot;,{Size2D(2U, 2U), Size2D(4U, 4U)})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_a, output_tile, data_layout, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8bc6505e8a48da25d9f9c24c2a99d17a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallWinogradOutputTransformDataset(), datasets::LargeWinogradOutputTransformDataset()), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_a, winograd_info, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4cb836a117a5c4bfb377ce8f447eb708',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;,{false, true}), framework::dataset::make(&quot;UseGamma&quot;,{false, true}))), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a752981762f5617f513d6f1aaf41c1380',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallGEMMDataset(), datasets::LargeGEMMDataset()), CNNDataTypes), shape_a, shape_b, shape_c, output_shape, alpha, beta, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af5a7faea0a5acd5ef504cf832548ca05',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::RandomNormalizePlanarYUVLayerDataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F16})), shape0, shape1, dt)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0100bf102f3cb83c63faa0fe97854a0c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0),}),
framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32, 0),})),
framework::dataset::make(&quot;PoolInfo&quot;,{PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG),})),
framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, false, false, true})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae72dd7661e6fbd348c6c25fb3f810a5a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::MediumShapes(), datasets::LargeShapes()), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR})), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab7640878028c213fe9433432b53834ca',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;,{DataType::F16, DataType::F32})), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8cf9c539b52f835653e100d3f309856e',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceS16Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a027fc3c677b44db44a521358e514d6e9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU),})), framework::dataset::make(&quot;Expected&quot;,{false, true, false, false, true})), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a884d40feeafe00ae07b0cbcddc51d7d3',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;,{false, true}), framework::dataset::make(&quot;UseGamma&quot;,{false, true}))), framework::dataset::make(&quot;DataType&quot;,{DataType::QS8, DataType::QS16, DataType::F32})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a31bb10ae93d777116dcf93c12ccbb222',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(),})), framework::dataset::make(&quot;MVBGInfo&quot;,{TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f, 2.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f, 2.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), ActivationLayerInfo(), ActivationLayerInfo(),})), framework::dataset::make(&quot;Expected&quot;,{true, false, false, false, false, false, false, false, true, true})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8a0fadde4e3e45dceba08c84b65d43e9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F32),})), framework::dataset::make(&quot;ConvolvedWidth&quot;,{3, 3, 3, 3, 3})), framework::dataset::make(&quot;ConvolvedHeight&quot;,{4, 4, 4, 4, 4})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true})), input_info, output_info, convolved_width, convolved_height, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aafd7f2a9d0ff2822b164c6b46775f8ee',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(18U, 18U, 32U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 32U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32, 0), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 32U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 32U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(16U, 16U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(19U, 23U, 21U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0)})), framework::dataset::make(&quot;FastMath&quot;,{true, true, false, false})), framework::dataset::make(&quot;Expected&quot;,{ConvolutionMethod::WINOGRAD, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM})), input_info, weights_info, output_info, conv_info, fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2fdbbbe8bfaeed577986acf27b6f1389',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), CNNDataTypes), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU)})), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad7880d8c31944d2144a2d11df0a0b6ab',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::LargeDepthwiseConvolutionLayerDataset3x3()), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), input_shape, kernel_size, info, depth_multiplier, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad7e946abbb7fa29168793080fc84c73d',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(8U, 8U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32, 0), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32, 0)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16, 0)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(6U, 6U, 1U), 1, DataType::F32, 0), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32, 0), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32, 0)})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0)})), framework::dataset::make(&quot;Dilation&quot;,{Size2D(1U, 2U), Size2D(2U, 1U), Size2D(2U, 2U), Size2D(3U, 3U)})), framework::dataset::make(&quot;Expected&quot;,{ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM})), input_info, weights_info, output_info, conv_info, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad65a7e1becb5255c0c32f5a949f793b2',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16, 0), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;BiasesInfo&quot;,{TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0), TensorInfo(TensorShape(3U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32, 0), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0),})), framework::dataset::make(&quot;ActivationInfo&quot;,{ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false, false, false})), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af974625bb79a0bb09521331deafb6626',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::QS8, 2), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32),}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(315U, 271U), 1, DataType::QS8, 3), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32),})), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::QS8, 2), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::QS8, 3), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32),})), framework::dataset::make(&quot;TransposeWeights&quot;,{true, true, true, false, true, true, true})), framework::dataset::make(&quot;ReshapedWeights&quot;,{false, false, false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;,{false, false, true, true, false, false, true})), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4c5ee20f9d24c1402ddf06145ccb2aa0',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;,{TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::QS8, 2), TensorInfo(TensorShape(20U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(16U, 32U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)),}), framework::dataset::make(&quot;InputBInfo&quot;,{TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(64U, 16U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(8U, 11U), 1, DataType::S32), TensorInfo(TensorShape(64U, 32U), 1, DataType::S32),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true})), a_info, b_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a01cbfbd5aab74c85cdac08a60f26288a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;,{TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32),}), framework::dataset::make(&quot;InputBInfo&quot;,{TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(20U), 1, DataType::S32),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32),})), framework::dataset::make(&quot;Min&quot;,{0, 8, 13,})), framework::dataset::make(&quot;Max&quot;,{205, 300, 180,})), framework::dataset::make(&quot;Expected&quot;,{true, false, false})), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a00e4165857f653d7601c7dcb4648be49',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 1U, 2U), 1, DataType::QASYMM8),})), framework::dataset::make(&quot;HasBias&quot;,{true, true, true, true, false, false})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, true})), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a635611a2f025da0e30e23148b4cdec17',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::S16)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3755766cb74239af64fc77fe337662e2',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 4), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;NormInfo&quot;,{NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 1),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, true})), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a512b7ceb04308d4d2e4e7950073b70b5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32),})), framework::dataset::make(&quot;PermutationVector&quot;,{PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true, true})), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a561cc4612c658b22561a7e8bb659ed18',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),}), framework::dataset::make(&quot;Input2Info&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS16, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QS8, 2),})), framework::dataset::make(&quot;Scale&quot;,{scale_unity, scale_unity, scale_unity,-1.f, scale_unity, scale_unity, scale_unity, scale_unity, 3.f})), framework::dataset::make(&quot;Expected&quot;,{true, true, false, false, false, false, false, false, false})), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4ae7460640c71d16d6a8a9f582ac6064',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), shape, dt1, dt2, scale, convert_policy, rounding_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a31647eb27e2ce0626cc4b4fd1dabfea2',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 4), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS16, 11), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16, 0), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::QS8, 5), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::QS16, 11), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32, 0), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;PoolInfo&quot;,{PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, true, false, false, true})), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae1442248a5848213f2f10bfeeeb7f3fc',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32, 0), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32, 0),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32, 0), TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32, 0), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32, 0),})), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::AREA, InterpolationPolicy::AREA, InterpolationPolicy::NEAREST_NEIGHBOR,})), framework::dataset::make(&quot;BorderMode&quot;,{BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::REPLICATE,})), framework::dataset::make(&quot;SamplingPolicy&quot;,{SamplingPolicy::CENTER, SamplingPolicy::TOP_LEFT, SamplingPolicy::CENTER, SamplingPolicy::CENTER, SamplingPolicy::CENTER,})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NCHW, DataLayout::NHWC, DataLayout::NCHW, DataLayout::NHWC,})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true})), input_info, output_info, policy, border_mode, sampling_policy, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a14b837847578efe2af1749b111e950af',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), ScaleDataTypes), ScaleDataLayouts), framework::dataset::make(&quot;InterpolationPolicy&quot;,{InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR})), datasets::BorderModes()), framework::dataset::make(&quot;SamplingPolicy&quot;,{SamplingPolicy::CENTER})), shape, data_type, data_layout, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af4d6e3d65360b21e82835490dc160f8b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 2), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QS8, 3), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32),})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a37f1e869246a6961b8e44b0e9b468126',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(21U, 13U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U32), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U32),}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(13U, 21U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U32), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U32),})), framework::dataset::make(&quot;Expected&quot;,{true, false, true, false, true, true})), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad412ecd41b1d50856911faf4fc5f42ee',1,'arm_compute::test::validation::DATA_TEST_CASE(FixedPointQS8Inputs, framework::DatasetMode::ALL, combine(FuncNamesDataset, framework::dataset::make(&quot;FractionalBits&quot;, 1, 7)), func_name, frac_bits)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7a94dd73849f393b64ff5a72db51a9bc',1,'arm_compute::test::validation::DATA_TEST_CASE(FixedPointQS8Outputs, framework::DatasetMode::ALL, zip(combine(FuncNamesDataset, framework::dataset::make(&quot;FractionalBits&quot;, 1, 7)), framework::dataset::make(&quot;ExpectedFailures&quot;,{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 33, 96})), func_name, frac_bits, expected_failures)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a266d4ed76808bf96f2ba534883af6cbb',1,'arm_compute::test::validation::DATA_TEST_CASE(AutoPadding, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;TensorShape&quot;,{TensorShape{}, TensorShape{10U}, TensorShape{10U, 10U}, TensorShape{10U, 10U, 10U}, TensorShape{10U, 10U, 10U, 10U}, TensorShape{10U, 10U, 10U, 10U, 10U}, TensorShape{10U, 10U, 10U, 10U, 10U, 10U}}), framework::dataset::make(&quot;PaddingSize&quot;,{PaddingSize{0, 0, 0, 0}, PaddingSize{0, 36, 0, 4}, PaddingSize{4, 36, 4, 4}, PaddingSize{4, 36, 4, 4}, PaddingSize{4, 36, 4, 4}, PaddingSize{4, 36, 4, 4}, PaddingSize{4, 36, 4, 4}})), framework::dataset::make(&quot;Strides&quot;,{Strides{}, Strides{1U, 50U}, Strides{1U, 50U}, Strides{1U, 50U, 900U}, Strides{1U, 50U, 900U, 9000U}, Strides{1U, 50U, 900U, 9000U, 90000U}, Strides{1U, 50U, 900U, 9000U, 90000U, 900000U}})), framework::dataset::make(&quot;Offset&quot;,{0U, 4U, 204U, 204U, 204U, 204U, 204U})), shape, auto_padding, strides, offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a68528b9f127ac5a691a19bc791282f01',1,'arm_compute::test::validation::DATA_TEST_CASE(Construction, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;TensorShape&quot;,{TensorShape{}, TensorShape{1U}, TensorShape{2U}, TensorShape{2U, 3U}, TensorShape{2U, 3U, 5U}, TensorShape{2U, 3U, 5U, 7U}, TensorShape{2U, 3U, 5U, 7U, 11U}, TensorShape{2U, 3U, 5U, 7U, 11U, 13U}}), framework::dataset::make(&quot;NumDimensions&quot;,{0U, 1U, 1U, 2U, 3U, 4U, 5U, 6U})), framework::dataset::make(&quot;TotalSize&quot;,{0U, 1U, 2U, 6U, 30U, 210U, 2310U, 30030U})), shape, num_dimensions, total_size)'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a28f88254f098ec103dc5986d3752660a',1,'DATA_TEST_CASE(RoundHalfUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;,{1.f, 1.2f, 1.5f, 2.5f, 2.9f,-3.f,-3.5f,-3.8f,-4.3f,-4.5f}), framework::dataset::make(&quot;FloatOut&quot;,{1.f, 1.f, 2.f, 3.f, 3.f,-3.f,-3.f,-4.f,-4.f,-4.f})), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#affbe24fd09600ac3016a471ee841fc57',1,'DATA_TEST_CASE(RoundHalfEven, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;,{1.f, 1.2f, 1.5f, 2.5f, 2.9f,-3.f,-3.5f,-3.8f,-4.3f,-4.5f}), framework::dataset::make(&quot;FloatOut&quot;,{1.f, 1.f, 2.f, 2.f, 3.f,-3.f,-4.f,-4.f,-4.f,-4.f})), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#aa73947e5521690b18f251cfcc8b3ddfa',1,'DATA_TEST_CASE(Index2Coord, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;,{TensorShape{1U}, TensorShape{2U}, TensorShape{2U, 3U}}), framework::dataset::make(&quot;Index&quot;,{0, 1, 2})), framework::dataset::make(&quot;Coordinates&quot;,{Coordinates{0}, Coordinates{1}, Coordinates{0, 1}})), shape, index, ref_coordinate):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a021a9d3325f1be249e14665e52a38aac',1,'DATA_TEST_CASE(RoundFloatToZero, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;,{1.f, 1.2f, 1.5f, 2.5f, 2.9f,-3.f,-3.5f,-3.8f,-4.3f,-4.5f}), framework::dataset::make(&quot;FloatOut&quot;,{1.f, 1.f, 1.f, 2.f, 2.f,-3.f,-3.f,-3.f,-4.f,-4.f})), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a4a3e4f9af1ea52a230c50eb37b761360',1,'DATA_TEST_CASE(RoundFloatToNearestUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;,{1.f, 1.2f, 1.5f, 2.5f, 2.9f,-3.f,-3.5f,-3.8f,-4.3f,-4.5f}), framework::dataset::make(&quot;FloatOut&quot;,{1.f, 1.f, 2.f, 3.f, 3.f,-3.f,-4.f,-4.f,-4.f,-5.f})), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a9e461b3ac0012c8c7193c1e180c91f67',1,'DATA_TEST_CASE(Coord2Index, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;,{TensorShape{1U}, TensorShape{2U}, TensorShape{2U, 3U}}), framework::dataset::make(&quot;Coordinates&quot;,{Coordinates{0}, Coordinates{1}, Coordinates{0, 1}})), framework::dataset::make(&quot;Index&quot;,{0, 1, 2})), shape, coordinate, ref_index):&#160;Utils.cpp']]],
  ['data_5ftype',['data_type',['../classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::ITensorInfo::data_type()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::SubTensorInfo::data_type()'],['../classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::TensorInfo::data_type()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::CLAccessor::data_type()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::GCAccessor::data_type()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::test::IAccessor::data_type()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::Accessor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensor::data_type()']]],
  ['data_5ftype_5ffor_5fconvolution',['data_type_for_convolution',['../namespacearm__compute.xhtml#a01adc12d8e07c06cdb0f03c56a455bf3',1,'arm_compute']]],
  ['data_5ftype_5ffor_5fconvolution_5fmatrix',['data_type_for_convolution_matrix',['../namespacearm__compute.xhtml#a3992df9e8723140a53e49dc194d89ef5',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fformat',['data_type_from_format',['../namespacearm__compute.xhtml#a59846ef5ca75cd81cdb7e8a1ce08f9db',1,'arm_compute']]],
  ['dataset',['Dataset',['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml#a6c77d69d08daa8c99952d9e40de8d086',1,'arm_compute::test::framework::dataset::Dataset']]],
  ['dataset_5fmode_5ffrom_5fname',['dataset_mode_from_name',['../namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754',1,'arm_compute::test::framework']]],
  ['datatestcasefactory',['DataTestCaseFactory',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml#aacdf355fbfb7579c36e50c757809c148',1,'arm_compute::test::framework::DataTestCaseFactory']]],
  ['deconvolution_5flayer',['deconvolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a994c9603f9aa41b731d957eebee4c8ee',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;weights, const SimpleTensor&lt; T &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad2dbe8fb35f3482d2e038b8a28f25031',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)']]],
  ['deconvolution_5foutput_5fdimensions',['deconvolution_output_dimensions',['../namespacearm__compute.xhtml#a5c7b26988083a67a91cd3e7962f38521',1,'arm_compute']]],
  ['deconvolution_5foutput_5fshape',['deconvolution_output_shape',['../namespacearm__compute.xhtml#a7d57332eb91a8735f173556b3caf6236',1,'arm_compute']]],
  ['deconvolution_5fupsample',['deconvolution_upsample',['../deconvolution__layer_8cl.xhtml#a94bb03d93912d66fa411931a875e3414',1,'deconvolution_layer.cl']]],
  ['decorate',['decorate',['../classarm__compute_1_1logging_1_1_i_decorator.xhtml#af7e99677086f647b50a1b4e4248f78f6',1,'arm_compute::logging::IDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_string_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::StringDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_date_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::DateDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::ThreadIdDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_log_level_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::LogLevelDecorator::decorate()']]],
  ['default_5finit',['default_init',['../classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d',1,'arm_compute::CLScheduler::default_init()'],['../classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf',1,'arm_compute::GCScheduler::default_init()']]],
  ['default_5finitialize_5fbackends',['default_initialize_backends',['../namespacearm__compute_1_1graph_1_1detail.xhtml#a310bdf38a0f7e77be8315cd9018369e8',1,'arm_compute::graph::detail']]],
  ['default_5fndrange',['default_ndrange',['../classarm__compute_1_1_c_l_kernel_library.xhtml#a6dc2398a934f02224ad3743185f27699',1,'arm_compute::CLKernelLibrary']]],
  ['default_5fvisit',['default_visit',['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a78d9695424cce30cc0465770427fab06',1,'arm_compute::graph::DefaultNodeVisitor::default_visit()'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#af62b93bea1e98919a10bf65eb71f9fce',1,'arm_compute::graph::DotGraphVisitor::default_visit()']]],
  ['delta_5fbilinear_5fc1',['delta_bilinear_c1',['../namespacearm__compute.xhtml#ad656a27ce8a507e31096ca45683ba9a5',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fx',['delta_linear_c1_x',['../namespacearm__compute.xhtml#a6174495b626531de015ae2b810859287',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fy',['delta_linear_c1_y',['../namespacearm__compute.xhtml#ad5fa8bacf824e9538014bfb0dcdaab52',1,'arm_compute']]],
  ['depth_5fconvert',['depth_convert',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a742cdbdf3c1db76c9a189f1bcd745579',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; T1 &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87c420d7f8a98dead76b0b32b2df6777',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa23e45fa7a8f9f196704d4473721d6ab',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a968f4da89a68d28ad39d8e39d8d19f93',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae3f03fb276c241cb8545e8f19b0718dc',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a77181952330fca74c9b3528f9a51fa10',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; float &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)']]],
  ['depthconcatenate_5flayer',['depthconcatenate_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aaca2b6bea6bd88fd39489d1104497330',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; T &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a998bf347ddc146fb533250b9ef9ce927',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; float &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8a116b530186cf21c5f6c7da7acbd178',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; half &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab9d829efe5d789bf902be0ecdc42ee7f',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; qint8_t &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a05d54bc26134fcc90aa9889fd85beaad',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; qint16_t &gt;&gt; &amp;srcs)']]],
  ['depthconcatenatelayernode',['DepthConcatenateLayerNode',['../classarm__compute_1_1graph_1_1_depth_concatenate_layer_node.xhtml#a56e2f16867dd2ff0b6ceb7ba242317ad',1,'arm_compute::graph::DepthConcatenateLayerNode']]],
  ['depthwise_5fconvolution',['depthwise_convolution',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a61c5b469efbad8508f073665649c20ac',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a1a53e3be4e81fac0a8edd23615195abd',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a7b3a275cd2ac7ee9d5b75b87766995e4',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a5797ba134d2dcec9c4f04e8d06fa06fb',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)']]],
  ['depthwise_5fconvolution_5fmethod',['depthwise_convolution_method',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a715cc3cf041f67ddeaffc9f8916a41aa',1,'arm_compute::graph::DepthwiseConvolutionLayerNode']]],
  ['depthwise_5fseparable_5fconvolution_5flayer',['depthwise_separable_convolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a71dcbc5f08da9ae1a8981746d7a62322',1,'arm_compute::test::validation::reference::depthwise_separable_convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;depthwise_weights, const SimpleTensor&lt; T &gt; &amp;depthwise_biases, const TensorShape &amp;depthwise_out_shape, const SimpleTensor&lt; T &gt; &amp;pointwise_weights, const SimpleTensor&lt; T &gt; &amp;pointwise_biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;depthwise_conv_info, const PadStrideInfo &amp;pointwise_conv_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a0c7524d5bce923f96be77f49e1da3913',1,'arm_compute::test::validation::reference::depthwise_separable_convolution_layer(const SimpleTensor&lt; float &gt; &amp;in, const SimpleTensor&lt; float &gt; &amp;depthwise_weights, const SimpleTensor&lt; float &gt; &amp;depthwise_biases, const TensorShape &amp;depthwise_out_shape, const SimpleTensor&lt; float &gt; &amp;pointwise_weights, const SimpleTensor&lt; float &gt; &amp;pointwise_biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;depthwise_conv_info, const PadStrideInfo &amp;pointwise_conv_info)']]],
  ['depthwiseconvolutionlayer',['DepthwiseConvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a36e83ad4becd0b24268a048413726f49',1,'arm_compute::graph::frontend::DepthwiseConvolutionLayer']]],
  ['depthwiseconvolutionlayernode',['DepthwiseConvolutionLayerNode',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#ae9cb7fc533420bbfa029f6019106b7c5',1,'arm_compute::graph::DepthwiseConvolutionLayerNode']]],
  ['dequantization_5flayer',['dequantization_layer',['../dequantization__layer_8cl.xhtml#a60e9b00d30a2743653c1f589e33467b9',1,'dequantization_layer():&#160;dequantization_layer.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab77dd3bd732636010753d8080608cd3c',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;min_max)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6633ef7fc0852265b2f158a5ef7ae900',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;min_max)']]],
  ['dequantize',['dequantize',['../structarm__compute_1_1_quantization_info.xhtml#a9f956adfa6525f0edd3c702e7e5afb8f',1,'arm_compute::QuantizationInfo']]],
  ['derivative',['derivative',['../derivative_8cl.xhtml#a5bd0ba0e3feaf66458557426291f2a77',1,'derivative():&#160;derivative.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aeae8f44225b61c5a6b05fdfcd82ae3d1',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; U &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac5079d3fc0f7cf5f8dfb40b882cea1af',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)']]],
  ['desc',['desc',['../classarm__compute_1_1graph_1_1_tensor.xhtml#ace1b6c0005a4c373e54bcfdc6d5b7d68',1,'arm_compute::graph::Tensor::desc()'],['../classarm__compute_1_1graph_1_1_tensor.xhtml#a5fb6fe7d94e6579bee7a628aaf979f3a',1,'arm_compute::graph::Tensor::desc() const ']]],
  ['description',['description',['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::CartesianProductDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::ContainerDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::InitializerListDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::JoinDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::RangeDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::SingletonDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml#a7b5000e45c1386c4e56ef650f6b0ef5b',1,'arm_compute::test::framework::dataset::ZipDataset::iterator::description()']]],
  ['descriptor',['descriptor',['../classarm__compute_1_1_i_c_l_h_o_g.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::ICLHOG::descriptor()'],['../classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::IHOG::descriptor()'],['../classarm__compute_1_1_h_o_g.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::HOG::descriptor()'],['../classarm__compute_1_1test_1_1_c_l_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::CLHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_i_h_o_g_accessor.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::test::IHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::HOGAccessor::descriptor()']]],
  ['descriptor_5fsize',['descriptor_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a8f6435e0a7c016e3cb0fc94b33067e50',1,'arm_compute::HOGInfo']]],
  ['detection_5fwindow_5fsize',['detection_window_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a0279e383beb758e477ce0673c5db8d57',1,'arm_compute::HOGInfo']]],
  ['detection_5fwindows_5fnon_5fmaxima_5fsuppression',['detection_windows_non_maxima_suppression',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a206dcc57b5f0396164931c3e65f52e20',1,'arm_compute::test::validation::reference']]],
  ['device_5fsupports_5fextension',['device_supports_extension',['../namespacearm__compute.xhtml#a94de99589574c0072be98be1ba806cad',1,'arm_compute']]],
  ['dilate',['dilate',['../dilate_8cl.xhtml#ae69f64c97993985f7623a252cf9fbe69',1,'dilate():&#160;dilate.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2e49a7bdf96ed64920234da737e1bf86',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; T &gt; &amp;src, BorderMode border_mode, T constant_border_value)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9b18443e2ca2d82d1e314cc568ab997f',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value)']]],
  ['dimension',['Dimension',['../classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4',1,'arm_compute::Window::Dimension::Dimension()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2',1,'arm_compute::ITensorInfo::dimension(size_t index) const =0'],['../classarm__compute_1_1_i_tensor_info.xhtml#ae3372a4569b4702a881b1606b0c144c4',1,'arm_compute::ITensorInfo::dimension(DataLayoutDimension dimension) const =0'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::SubTensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::SubTensorInfo::dimension(DataLayoutDimension dimension) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::TensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::TensorInfo::dimension(DataLayoutDimension dimension) const override']]],
  ['dimensions',['Dimensions',['../classarm__compute_1_1_dimensions.xhtml#aa521fcebc508ef8447da413cc64d020a',1,'arm_compute::Dimensions::Dimensions(Ts...dims)'],['../classarm__compute_1_1_dimensions.xhtml#a0d3c59537291735849c740364496a41c',1,'arm_compute::Dimensions::Dimensions(const Dimensions &amp;)=default'],['../classarm__compute_1_1_dimensions.xhtml#aa2c609345b3b6fa8da2486f75fff8ed8',1,'arm_compute::Dimensions::Dimensions(Dimensions &amp;&amp;)=default'],['../classarm__compute_1_1gles_1_1_n_d_range.xhtml#a25852fda6086826370f2230b22549c0f',1,'arm_compute::gles::NDRange::dimensions()'],['../classarm__compute_1_1_i_distribution.xhtml#a254be7b34cd78d12ffc7ed2aba4882b1',1,'arm_compute::IDistribution::dimensions()'],['../classarm__compute_1_1_i_distribution1_d.xhtml#ad251169c06da412071bdfb6e92444e6e',1,'arm_compute::IDistribution1D::dimensions()']]],
  ['disabled_5ffixture_5fdata_5ftest_5fcase',['DISABLED_FIXTURE_DATA_TEST_CASE',['../namespacearm__compute_1_1test_1_1validation.xhtml#a5ced46674ba128087c940287fa8bd838',1,'arm_compute::test::validation']]],
  ['disconnect',['disconnect',['../classarm__compute_1_1utils_1_1signal_1_1detail_1_1_signal_impl_3_01_return_type_07_args_8_8_8_08_4.xhtml#a960705de531a20389fb29928d43258c3',1,'arm_compute::utils::signal::detail::SignalImpl&lt; ReturnType(Args...)&gt;']]],
  ['dispatch',['dispatch',['../classarm__compute_1_1_g_c_scheduler.xhtml#a66a29e27a51a13250143981b0ee4ad19',1,'arm_compute::GCScheduler']]],
  ['distribution1d',['Distribution1D',['../classarm__compute_1_1_distribution1_d.xhtml#a243c829bced69df597b496eb7456efb0',1,'arm_compute::Distribution1D']]],
  ['div',['div',['../structarm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail_1_1functions.xhtml#a72d043524e13bf27c605c2dee2e20a2a',1,'arm_compute::test::fixed_point_arithmetic::detail::functions::div()'],['../namespacearm__compute_1_1test_1_1fixed__point__arithmetic_1_1detail.xhtml#a9d53af9692ab2f7ae6fc0017faeb46f0',1,'arm_compute::test::fixed_point_arithmetic::detail::div()']]],
  ['div_5fceil',['DIV_CEIL',['../namespacearm__compute.xhtml#a12705a88669cb9fb90451ebe0db53c41',1,'arm_compute']]],
  ['div_5fsat_5fqs16',['div_sat_qs16',['../fixed__point_8h.xhtml#a8d2c17065a15f7b298145b13c28ef349',1,'fixed_point.h']]],
  ['div_5fsat_5fqs16x16',['div_sat_qs16x16',['../fixed__point_8h.xhtml#af57ae5abe45efdd8ec58130e3d4726cb',1,'fixed_point.h']]],
  ['div_5fsat_5fqs16x8',['div_sat_qs16x8',['../fixed__point_8h.xhtml#ae915e52782d10b155502837e6caa9721',1,'fixed_point.h']]],
  ['div_5fsat_5fqs8',['div_sat_qs8',['../fixed__point_8h.xhtml#a77995d58e1505e2182a75ee199d8b01e',1,'fixed_point.h']]],
  ['div_5fsat_5fqs8x16',['div_sat_qs8x16',['../fixed__point_8h.xhtml#a524ddfb8ca9b49eb0870b73ee3bd720c',1,'fixed_point.h']]],
  ['do_5frun',['do_run',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::test::framework::TestCase::do_run()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::Example::do_run()']]],
  ['do_5fsetup',['do_setup',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a5bf6aaa253bb8a13013294d33e168c45',1,'arm_compute::test::framework::TestCase::do_setup()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a96b30c1d1256c2ab3f731a162ad08609',1,'arm_compute::utils::Example::do_setup()']]],
  ['do_5fsync',['do_sync',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a197634795f22ff5c0d7789f5ccb3f9bd',1,'arm_compute::test::framework::TestCase']]],
  ['do_5fteardown',['do_teardown',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::test::framework::TestCase::do_teardown()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::Example::do_teardown()']]],
  ['dotgraphvisitor',['DotGraphVisitor',['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aba079420016162d60cc142401885db44',1,'arm_compute::graph::DotGraphVisitor']]],
  ['draw_5fdetection_5frectangle',['draw_detection_rectangle',['../namespacearm__compute_1_1utils.xhtml#ad1b5373f466a3945e1f0ef1c9943c357',1,'arm_compute::utils']]],
  ['dummy',['dummy',['../structarm__compute_1_1detail_1_1dummy.xhtml#a9459460908c5314f6ea5333a397fea5b',1,'arm_compute::detail::dummy']]],
  ['dummyaccessor',['DummyAccessor',['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#ac5ae9597ba20e5581726743fe7c154b5',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(unsigned int maximum=1)'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#a4a48cd865f33e4a907338c42d652d80f',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(DummyAccessor &amp;&amp;)=default']]],
  ['duplicate',['duplicate',['../classarm__compute_1_1_blob_memory_pool.xhtml#aceea990dd135afa94795f0ad3a532df5',1,'arm_compute::BlobMemoryPool::duplicate()'],['../classarm__compute_1_1_i_memory_pool.xhtml#af6c6c5e675fab42e482d11d02df2a79e',1,'arm_compute::IMemoryPool::duplicate()'],['../classarm__compute_1_1_offset_memory_pool.xhtml#aceea990dd135afa94795f0ad3a532df5',1,'arm_compute::OffsetMemoryPool::duplicate()']]]
];
