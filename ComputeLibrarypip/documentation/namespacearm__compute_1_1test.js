var namespacearm__compute_1_1test =
[
    [ "benchmark", "namespacearm__compute_1_1test_1_1benchmark.xhtml", "namespacearm__compute_1_1test_1_1benchmark" ],
    [ "convolution_3d", "namespacearm__compute_1_1test_1_1convolution__3d.xhtml", null ],
    [ "fixed_point_arithmetic", "namespacearm__compute_1_1test_1_1fixed__point__arithmetic.xhtml", "namespacearm__compute_1_1test_1_1fixed__point__arithmetic" ],
    [ "framework", "namespacearm__compute_1_1test_1_1framework.xhtml", "namespacearm__compute_1_1test_1_1framework" ],
    [ "networks", "namespacearm__compute_1_1test_1_1networks.xhtml", "namespacearm__compute_1_1test_1_1networks" ],
    [ "traits", "namespacearm__compute_1_1test_1_1traits.xhtml", "namespacearm__compute_1_1test_1_1traits" ],
    [ "validation", "namespacearm__compute_1_1test_1_1validation.xhtml", "namespacearm__compute_1_1test_1_1validation" ],
    [ "Accessor", "classarm__compute_1_1test_1_1_accessor.xhtml", "classarm__compute_1_1test_1_1_accessor" ],
    [ "ArrayAccessor", "classarm__compute_1_1test_1_1_array_accessor.xhtml", "classarm__compute_1_1test_1_1_array_accessor" ],
    [ "AssetsLibrary", "classarm__compute_1_1test_1_1_assets_library.xhtml", "classarm__compute_1_1test_1_1_assets_library" ],
    [ "CLAccessor", "classarm__compute_1_1test_1_1_c_l_accessor.xhtml", "classarm__compute_1_1test_1_1_c_l_accessor" ],
    [ "CLArrayAccessor", "classarm__compute_1_1test_1_1_c_l_array_accessor.xhtml", "classarm__compute_1_1test_1_1_c_l_array_accessor" ],
    [ "CLHOGAccessor", "classarm__compute_1_1test_1_1_c_l_h_o_g_accessor.xhtml", "classarm__compute_1_1test_1_1_c_l_h_o_g_accessor" ],
    [ "CLLutAccessor", "classarm__compute_1_1test_1_1_c_l_lut_accessor.xhtml", "classarm__compute_1_1test_1_1_c_l_lut_accessor" ],
    [ "CLSynthetizeFunction", "classarm__compute_1_1test_1_1_c_l_synthetize_function.xhtml", "classarm__compute_1_1test_1_1_c_l_synthetize_function" ],
    [ "CLSynthetizeFunctionWithZeroConstantBorder", "classarm__compute_1_1test_1_1_c_l_synthetize_function_with_zero_constant_border.xhtml", "classarm__compute_1_1test_1_1_c_l_synthetize_function_with_zero_constant_border" ],
    [ "common_promoted_signed_type", "structarm__compute_1_1test_1_1common__promoted__signed__type.xhtml", "structarm__compute_1_1test_1_1common__promoted__signed__type" ],
    [ "common_promoted_unsigned_type", "structarm__compute_1_1test_1_1common__promoted__unsigned__type.xhtml", "structarm__compute_1_1test_1_1common__promoted__unsigned__type" ],
    [ "GCAccessor", "classarm__compute_1_1test_1_1_g_c_accessor.xhtml", "classarm__compute_1_1test_1_1_g_c_accessor" ],
    [ "HOGAccessor", "classarm__compute_1_1test_1_1_h_o_g_accessor.xhtml", "classarm__compute_1_1test_1_1_h_o_g_accessor" ],
    [ "IAccessor", "classarm__compute_1_1test_1_1_i_accessor.xhtml", "classarm__compute_1_1test_1_1_i_accessor" ],
    [ "IArrayAccessor", "classarm__compute_1_1test_1_1_i_array_accessor.xhtml", "classarm__compute_1_1test_1_1_i_array_accessor" ],
    [ "IHOGAccessor", "classarm__compute_1_1test_1_1_i_h_o_g_accessor.xhtml", "classarm__compute_1_1test_1_1_i_h_o_g_accessor" ],
    [ "ILutAccessor", "classarm__compute_1_1test_1_1_i_lut_accessor.xhtml", "classarm__compute_1_1test_1_1_i_lut_accessor" ],
    [ "LutAccessor", "classarm__compute_1_1test_1_1_lut_accessor.xhtml", "classarm__compute_1_1test_1_1_lut_accessor" ],
    [ "NESynthetizeFunction", "classarm__compute_1_1test_1_1_n_e_synthetize_function.xhtml", "classarm__compute_1_1test_1_1_n_e_synthetize_function" ],
    [ "NESynthetizeFunctionWithZeroConstantBorder", "classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border.xhtml", "classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_border" ],
    [ "PaddingCalculator", "classarm__compute_1_1test_1_1_padding_calculator.xhtml", "classarm__compute_1_1test_1_1_padding_calculator" ],
    [ "RawLutAccessor", "classarm__compute_1_1test_1_1_raw_lut_accessor.xhtml", "classarm__compute_1_1test_1_1_raw_lut_accessor" ],
    [ "RawTensor", "classarm__compute_1_1test_1_1_raw_tensor.xhtml", "classarm__compute_1_1test_1_1_raw_tensor" ],
    [ "SimpleTensor", "classarm__compute_1_1test_1_1_simple_tensor.xhtml", "classarm__compute_1_1test_1_1_simple_tensor" ],
    [ "TensorCache", "classarm__compute_1_1test_1_1_tensor_cache.xhtml", "classarm__compute_1_1test_1_1_tensor_cache" ]
];