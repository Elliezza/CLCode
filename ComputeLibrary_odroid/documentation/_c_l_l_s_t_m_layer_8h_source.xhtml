<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/CL/functions/CLLSTMLayer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_c_l_l_s_t_m_layer_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLLSTMLayer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_l_s_t_m_layer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_CLLSTMLAYER_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_CLLSTMLAYER_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_function_8h.xhtml">arm_compute/runtime/IFunction.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_activation_layer_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLActivationLayerKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_arithmetic_addition_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLArithmeticAdditionKernel.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_arithmetic_subtraction_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLArithmeticSubtractionKernel.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_copy_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLCopyKernel.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_pixel_wise_multiplication_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLPixelWiseMultiplicationKernel.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_memory_group_8h.xhtml">arm_compute/runtime/CL/CLMemoryGroup.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tensor_8h.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_arithmetic_addition_8h.xhtml">arm_compute/runtime/CL/functions/CLArithmeticAddition.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_fully_connected_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLFullyConnectedLayer.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_g_e_m_m_8h.xhtml">arm_compute/runtime/CL/functions/CLGEMM.h</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_width_concatenate_layer_8h.xhtml">arm_compute/runtime/CL/functions/CLWidthConcatenateLayer.h</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_manager_8h.xhtml">arm_compute/runtime/IMemoryManager.h</a>&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">class </span>ICLTensor;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml">   50</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ada73ca6bbffdf20b246b101e1d8e2ab1">   54</a></span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ada73ca6bbffdf20b246b101e1d8e2ab1">LSTMParams</a>()</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        : _input_to_input_weights(nullptr), _recurrent_to_input_weights(nullptr), _cell_to_input_weights(nullptr), _input_gate_bias(nullptr), _cell_to_forget_weights(nullptr),</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          _cell_to_output_weights(nullptr), _projection_weights(nullptr), _projection_bias(nullptr), _has_peephole_opt(false), _has_projection(false), _has_cifg_opt(true)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ada73ca6bbffdf20b246b101e1d8e2ab1">LSTMParams</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af9f07d002a2338c5bc137b012fe546c2">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a3fde8c2474695d765548098d5ba0cd28">~LSTMParams</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#adac8095c0cd29d443206dfcaf67f3607">   74</a></span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#adac8095c0cd29d443206dfcaf67f3607">set_cifg_params</a>(<span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab3135273c5a0012fb93c6a2a4b5f89f9">input_to_input_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab09e516de7730aa737e2905630dfc644">recurrent_to_input_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">cell_to_input_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a8538b9ffac626195049a362628f33883">input_gate_bias</a>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        _input_to_input_weights     = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab3135273c5a0012fb93c6a2a4b5f89f9">input_to_input_weights</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        _recurrent_to_input_weights = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab09e516de7730aa737e2905630dfc644">recurrent_to_input_weights</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        _cell_to_input_weights      = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">cell_to_input_weights</a>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        _input_gate_bias            = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a8538b9ffac626195049a362628f33883">input_gate_bias</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        _has_cifg_opt               = <span class="keyword">false</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aea777d30779bab2d14630ea7e8516615">   90</a></span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aea777d30779bab2d14630ea7e8516615">set_projection_params</a>(<span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abd553d9f4eb47989b0f9e43183251c0a">projection_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ac531b5180cfe3ad8e5e6a7a399618a1b">projection_bias</a>)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        _projection_weights = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abd553d9f4eb47989b0f9e43183251c0a">projection_weights</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        _projection_bias    = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ac531b5180cfe3ad8e5e6a7a399618a1b">projection_bias</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        _has_projection     = <span class="keyword">true</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a89b6dc21fc7e0340789f2490c1a5da4b">  105</a></span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams</a> &amp;<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a89b6dc21fc7e0340789f2490c1a5da4b">set_peephole_params</a>(<span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">cell_to_input_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5d1e77addfd1234e38ada7fe1fd170a3">cell_to_forget_weights</a>, <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a6f4053073d815529a7f7b0da60f0f73b">cell_to_output_weights</a>)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        _cell_to_input_weights  = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">cell_to_input_weights</a>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        _cell_to_forget_weights = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5d1e77addfd1234e38ada7fe1fd170a3">cell_to_forget_weights</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        _cell_to_output_weights = <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a6f4053073d815529a7f7b0da60f0f73b">cell_to_output_weights</a>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        _has_peephole_opt       = <span class="keyword">true</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab3135273c5a0012fb93c6a2a4b5f89f9">  114</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab3135273c5a0012fb93c6a2a4b5f89f9">input_to_input_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> _input_to_input_weights;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab09e516de7730aa737e2905630dfc644">  119</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab09e516de7730aa737e2905630dfc644">recurrent_to_input_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> _recurrent_to_input_weights;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">  124</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">cell_to_input_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> _cell_to_input_weights;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a8538b9ffac626195049a362628f33883">  129</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a8538b9ffac626195049a362628f33883">input_gate_bias</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> _input_gate_bias;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5d1e77addfd1234e38ada7fe1fd170a3">  134</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5d1e77addfd1234e38ada7fe1fd170a3">cell_to_forget_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> _cell_to_forget_weights;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a6f4053073d815529a7f7b0da60f0f73b">  139</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a6f4053073d815529a7f7b0da60f0f73b">cell_to_output_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> _cell_to_output_weights;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abd553d9f4eb47989b0f9e43183251c0a">  144</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abd553d9f4eb47989b0f9e43183251c0a">projection_weights</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> _projection_weights;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ac531b5180cfe3ad8e5e6a7a399618a1b">  149</a></span>&#160;    <span class="keyword">const</span> T *<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ac531b5180cfe3ad8e5e6a7a399618a1b">projection_bias</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> _projection_bias;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2610abee070db778e644f347d682dfa1">  154</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2610abee070db778e644f347d682dfa1">has_peephole_opt</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> _has_peephole_opt;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a41f485e7fb31022c72808b7d7e3a2d35">  159</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a41f485e7fb31022c72808b7d7e3a2d35">has_projection</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> _has_projection;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acafe99f8fa2312a1dc356cb7d0aa3b6b">  164</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acafe99f8fa2312a1dc356cb7d0aa3b6b">has_cifg_opt</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> _has_cifg_opt;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">const</span> T *_input_to_input_weights;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> T *_recurrent_to_input_weights;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> T *_cell_to_input_weights;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> T *_input_gate_bias;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> T *_cell_to_forget_weights;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">const</span> T *_cell_to_output_weights;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">const</span> T *_projection_weights;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">const</span> T *_projection_bias;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">bool</span>     _has_peephole_opt;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">bool</span>     _has_projection;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">bool</span>     _has_cifg_opt;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;};</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml">  186</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml">CLLSTMLayer</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml">CLLSTMLayer</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordtype">void</span> configure(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input_to_output_weights,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *recurrent_to_output_weights,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *forget_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_gate_bias, <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output_state, <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *cell_state, <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *scratch_buffer, <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams&lt;ICLTensor&gt;</a> &amp;lstm_params, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation_info, <span class="keywordtype">float</span> cell_threshold = 0.f, <span class="keywordtype">float</span> projection_threshold = 0.f);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input_to_output_weights,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_forget_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_cell_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *recurrent_to_output_weights,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *forget_gate_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_gate_bias,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *scratch_buffer, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams&lt;ITensorInfo&gt;</a> &amp;lstm_params, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation_info, <span class="keywordtype">float</span> cell_threshold = 0.f, <span class="keywordtype">float</span> projection_threshold = 0.f);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordtype">void</span> run() <span class="keyword">override</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_base.xhtml">CLMemoryGroup</a>                   _memory_group;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>           _fully_connected_input_gate;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_input_gate1;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_input_gate2;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_input_gate1;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_input_gate2;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_input_gate1;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">CLArithmeticAddition</a>            _accum_input_gate2;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml">CLArithmeticSubtractionKernel</a>   _subtract_input_gate;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _activation_input_gate;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>           _fully_connected_forget_gate;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_forget_gate1;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_forget_gate2;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_forget_gate1;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_forget_gate2;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_forget_gate1;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">CLArithmeticAddition</a>            _accum_forget_gate2;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _activation_forget_gate;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>           _fully_connected_cell_state;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_cell_state1;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_cell_state2;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_cell_state1;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_cell_state1;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_cell_state2;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">CLPixelWiseMultiplicationKernel</a> _pixelwise_mul_cell_state1;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _activation_cell_state;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _cell_clip;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">CLPixelWiseMultiplicationKernel</a> _pixelwise_mul_cell_state2;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>           _fully_connected_output;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_output1;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_output2;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_output1;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">CLTransposeKernel</a>               _transpose_output2;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_output1;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">CLArithmeticAddition</a>            _accum_output2;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _activation_output;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _activation_output_state;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">CLPixelWiseMultiplicationKernel</a> _pixelwise_mul_output_state;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">CLFullyConnectedLayer</a>           _fully_connected_output_state;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">CLGEMM</a>                          _gemm_output_state;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">CLArithmeticAdditionKernel</a>      _accum_output_state;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">CLActivationLayerKernel</a>         _projection_clip;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_copy_kernel.xhtml">CLCopyKernel</a>                    _copy_cell_state;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_copy_kernel.xhtml">CLCopyKernel</a>                    _copy_output;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_width_concatenate_layer.xhtml">CLWidthConcatenateLayer</a>         _concat_scratch_buffer;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out1;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out2;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out3;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out4;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out5;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _input_gate_out6;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out1;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out2;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out3;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out4;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out5;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _forget_gate_out6;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_out1;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_out2;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_out3;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_out4;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_out5;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output1;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output2;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output3;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output4;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output5;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output6;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _cell_state_activation;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _output_projection1;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>                        _ones;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordtype">bool</span>                            _run_peephole_opt;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">bool</span>                            _run_cifg_opt;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordtype">bool</span>                            _perform_cell_clipping;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordtype">bool</span>                            _has_projection_weights;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordtype">bool</span>                            _perform_projection_clipping;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;};</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_COMPUTE_CLLSTMLAYER_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a3fde8c2474695d765548098d5ba0cd28"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a3fde8c2474695d765548098d5ba0cd28">arm_compute::LSTMParams::~LSTMParams</a></div><div class="ttdeci">~LSTMParams()=default</div><div class="ttdoc">Default destructor. </div></div>
<div class="ttc" id="_c_l_activation_layer_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_activation_layer_kernel_8h.xhtml">CLActivationLayerKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_fully_connected_layer.xhtml">arm_compute::CLFullyConnectedLayer</a></div><div class="ttdoc">Basic function to compute a Fully Connected layer on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_fully_connected_layer_8h_source.xhtml#l00074">CLFullyConnectedLayer.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions. </div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_aee50d074dade51a2743b49669565386c"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#aee50d074dade51a2743b49669565386c">arm_compute::LSTMParams::cell_to_input_weights</a></div><div class="ttdeci">const T * cell_to_input_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00124">CLLSTMLayer.h:124</a></div></div>
<div class="ttc" id="_c_l_copy_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_copy_kernel_8h.xhtml">CLCopyKernel.h</a></div></div>
<div class="ttc" id="_c_l_arithmetic_addition_8h_xhtml"><div class="ttname"><a href="_c_l_arithmetic_addition_8h.xhtml">CLArithmeticAddition.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_abd553d9f4eb47989b0f9e43183251c0a"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#abd553d9f4eb47989b0f9e43183251c0a">arm_compute::LSTMParams::projection_weights</a></div><div class="ttdeci">const T * projection_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00144">CLLSTMLayer.h:144</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a5d1e77addfd1234e38ada7fe1fd170a3"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5d1e77addfd1234e38ada7fe1fd170a3">arm_compute::LSTMParams::cell_to_forget_weights</a></div><div class="ttdeci">const T * cell_to_forget_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00134">CLLSTMLayer.h:134</a></div></div>
<div class="ttc" id="_i_memory_manager_8h_xhtml"><div class="ttname"><a href="_i_memory_manager_8h.xhtml">IMemoryManager.h</a></div></div>
<div class="ttc" id="_c_l_tensor_8h_xhtml"><div class="ttname"><a href="_c_l_tensor_8h.xhtml">CLTensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_arithmetic_addition_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_addition_kernel.xhtml">arm_compute::CLArithmeticAdditionKernel</a></div><div class="ttdoc">Interface for the arithmetic addition kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_arithmetic_addition_kernel_8h_source.xhtml#l00039">CLArithmeticAdditionKernel.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_arithmetic_addition_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_addition.xhtml">arm_compute::CLArithmeticAddition</a></div><div class="ttdoc">Basic function to run CLArithmeticAdditionKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_arithmetic_addition_8h_source.xhtml#l00039">CLArithmeticAddition.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_copy_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_copy_kernel.xhtml">arm_compute::CLCopyKernel</a></div><div class="ttdoc">OpenCL kernel to perform a copy between two tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_copy_kernel_8h_source.xhtml#l00035">CLCopyKernel.h:35</a></div></div>
<div class="ttc" id="_c_l_pixel_wise_multiplication_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_pixel_wise_multiplication_kernel_8h.xhtml">CLPixelWiseMultiplicationKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00051">Error.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00809">Types.h:809</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">This file contains all available output stages for GEMMLowp on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00001">00_introduction.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_activation_layer_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_activation_layer_kernel.xhtml">arm_compute::CLActivationLayerKernel</a></div><div class="ttdoc">Interface for the activation layer kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_activation_layer_kernel_8h_source.xhtml#l00034">CLActivationLayerKernel.h:34</a></div></div>
<div class="ttc" id="_c_l_arithmetic_subtraction_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_arithmetic_subtraction_kernel_8h.xhtml">CLArithmeticSubtractionKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6813132c943295888972727864ea5c2f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(dst.info() -&gt;valid_region(), dst_valid_region)</div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ac531b5180cfe3ad8e5e6a7a399618a1b"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ac531b5180cfe3ad8e5e6a7a399618a1b">arm_compute::LSTMParams::projection_bias</a></div><div class="ttdeci">const T * projection_bias() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00149">CLLSTMLayer.h:149</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m.xhtml">arm_compute::CLGEMM</a></div><div class="ttdoc">Basic function to execute GEMM on OpenCL. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_8h_source.xhtml#l00051">CLGEMM.h:51</a></div></div>
<div class="ttc" id="_c_l_memory_group_8h_xhtml"><div class="ttname"><a href="_c_l_memory_group_8h.xhtml">CLMemoryGroup.h</a></div></div>
<div class="ttc" id="_c_l_g_e_m_m_8h_xhtml"><div class="ttname"><a href="_c_l_g_e_m_m_8h.xhtml">CLGEMM.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_width_concatenate_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_width_concatenate_layer.xhtml">arm_compute::CLWidthConcatenateLayer</a></div><div class="ttdoc">Basic function to execute concatenate tensors along x axis. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_width_concatenate_layer_8h_source.xhtml#l00046">CLWidthConcatenateLayer.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_l_s_t_m_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_l_s_t_m_layer.xhtml">arm_compute::CLLSTMLayer</a></div><div class="ttdoc">This function performs a single time step in a Long Short-Term Memory (LSTM) layer. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00186">CLLSTMLayer.h:186</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ab3135273c5a0012fb93c6a2a4b5f89f9"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab3135273c5a0012fb93c6a2a4b5f89f9">arm_compute::LSTMParams::input_to_input_weights</a></div><div class="ttdeci">const T * input_to_input_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00114">CLLSTMLayer.h:114</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_arithmetic_subtraction_kernel.xhtml">arm_compute::CLArithmeticSubtractionKernel</a></div><div class="ttdoc">Interface for the arithmetic subtraction kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_arithmetic_subtraction_kernel_8h_source.xhtml#l00040">CLArithmeticSubtractionKernel.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ada73ca6bbffdf20b246b101e1d8e2ab1"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ada73ca6bbffdf20b246b101e1d8e2ab1">arm_compute::LSTMParams::LSTMParams</a></div><div class="ttdeci">LSTMParams()</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00054">CLLSTMLayer.h:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a6f4053073d815529a7f7b0da60f0f73b"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a6f4053073d815529a7f7b0da60f0f73b">arm_compute::LSTMParams::cell_to_output_weights</a></div><div class="ttdeci">const T * cell_to_output_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00139">CLLSTMLayer.h:139</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_aea777d30779bab2d14630ea7e8516615"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#aea777d30779bab2d14630ea7e8516615">arm_compute::LSTMParams::set_projection_params</a></div><div class="ttdeci">LSTMParams &amp; set_projection_params(const T *projection_weights, const T *projection_bias)</div><div class="ttdoc">Set projection tensor parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00090">CLLSTMLayer.h:90</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a2610abee070db778e644f347d682dfa1"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2610abee070db778e644f347d682dfa1">arm_compute::LSTMParams::has_peephole_opt</a></div><div class="ttdeci">bool has_peephole_opt() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00154">CLLSTMLayer.h:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_adac8095c0cd29d443206dfcaf67f3607"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#adac8095c0cd29d443206dfcaf67f3607">arm_compute::LSTMParams::set_cifg_params</a></div><div class="ttdeci">LSTMParams &amp; set_cifg_params(const T *input_to_input_weights, const T *recurrent_to_input_weights, const T *cell_to_input_weights, const T *input_gate_bias)</div><div class="ttdoc">Set CIFG tensor parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00074">CLLSTMLayer.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a8538b9ffac626195049a362628f33883"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a8538b9ffac626195049a362628f33883">arm_compute::LSTMParams::input_gate_bias</a></div><div class="ttdeci">const T * input_gate_bias() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00129">CLLSTMLayer.h:129</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_base_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_base.xhtml">arm_compute::MemoryGroupBase&lt; CLTensor &gt;</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00040">ICLTensor.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml">arm_compute::CLPixelWiseMultiplicationKernel</a></div><div class="ttdoc">Interface for the pixelwise multiplication kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pixel_wise_multiplication_kernel_8h_source.xhtml#l00037">CLPixelWiseMultiplicationKernel.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a41f485e7fb31022c72808b7d7e3a2d35"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a41f485e7fb31022c72808b7d7e3a2d35">arm_compute::LSTMParams::has_projection</a></div><div class="ttdeci">bool has_projection() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00159">CLLSTMLayer.h:159</a></div></div>
<div class="ttc" id="_c_l_fully_connected_layer_8h_xhtml"><div class="ttname"><a href="_c_l_fully_connected_layer_8h.xhtml">CLFullyConnectedLayer.h</a></div></div>
<div class="ttc" id="_i_function_8h_xhtml"><div class="ttname"><a href="_i_function_8h.xhtml">IFunction.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ab09e516de7730aa737e2905630dfc644"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab09e516de7730aa737e2905630dfc644">arm_compute::LSTMParams::recurrent_to_input_weights</a></div><div class="ttdeci">const T * recurrent_to_input_weights() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00119">CLLSTMLayer.h:119</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_transpose_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_transpose_kernel.xhtml">arm_compute::CLTransposeKernel</a></div><div class="ttdoc">OpenCL kernel which transposes the elements of a matrix. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_transpose_kernel_8h_source.xhtml#l00038">CLTransposeKernel.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_af9f07d002a2338c5bc137b012fe546c2"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#af9f07d002a2338c5bc137b012fe546c2">arm_compute::LSTMParams::operator=</a></div><div class="ttdeci">LSTMParams &amp; operator=(const LSTMParams &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers) ...</div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="_c_l_width_concatenate_layer_8h_xhtml"><div class="ttname"><a href="_c_l_width_concatenate_layer_8h.xhtml">CLWidthConcatenateLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_acafe99f8fa2312a1dc356cb7d0aa3b6b"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#acafe99f8fa2312a1dc356cb7d0aa3b6b">arm_compute::LSTMParams::has_cifg_opt</a></div><div class="ttdeci">bool has_cifg_opt() const </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00164">CLLSTMLayer.h:164</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a89b6dc21fc7e0340789f2490c1a5da4b"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a89b6dc21fc7e0340789f2490c1a5da4b">arm_compute::LSTMParams::set_peephole_params</a></div><div class="ttdeci">LSTMParams &amp; set_peephole_params(const T *cell_to_input_weights, const T *cell_to_forget_weights, const T *cell_to_output_weights)</div><div class="ttdoc">Set peephole tensor parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00105">CLLSTMLayer.h:105</a></div></div>
<div class="ttc" id="_c_l_arithmetic_addition_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_arithmetic_addition_kernel_8h.xhtml">CLArithmeticAdditionKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml">arm_compute::LSTMParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00050">CLLSTMLayer.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8h_source.xhtml#l00039">CLTensor.h:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_b986aa98f9b6490bb4fc7918500346fb.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_251c63bc3f70b60acf43edd6d870a3ef.xhtml">functions</a></li><li class="navelem"><a class="el" href="_c_l_l_s_t_m_layer_8h.xhtml">CLLSTMLayer.h</a></li>
    <li class="footer">Generated on Wed May 23 2018 11:36:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
